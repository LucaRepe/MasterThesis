56		PUSH    ESI
8B 35 C4 20 00 00		MOV     ESI, DS:STRNCPY_S
6A 02		PUSH    2; MAXCOUNT
68 20 21 00 00		PUSH    OFFSET STR2; "P1"
6A 14		PUSH    14H; SIZEINBYTES
68 A0 33 00 00		PUSH    OFFSET STR1; DESTINATION
C7 05 B4 33 00 00 00 00 00 00		MOV     DWORD_33B4, 0
C7 05 CC 33 00 00 FF FF FF FF		MOV     DWORD_33CC, 0FFFFFFFFH
C7 05 E4 33 00 00 E8 03 00 00		MOV     DWORD_33E4, 3E8H
FF D6		CALL    ESI ; STRNCPY_S
6A 02		PUSH    2; MAXCOUNT
68 24 21 00 00		PUSH    OFFSET AP2; "P2"
6A 14		PUSH    14H; SIZEINBYTES
68 B8 33 00 00		PUSH    OFFSET BYTE_33B8; DESTINATION
FF D6		CALL    ESI ; STRNCPY_S
6A 02		PUSH    2; MAXCOUNT
68 28 21 00 00		PUSH    OFFSET AP3; "P3"
6A 14		PUSH    14H; SIZEINBYTES
68 D0 33 00 00		PUSH    OFFSET BYTE_33D0; DESTINATION
FF D6		CALL    ESI ; STRNCPY_S
A1 B4 33 00 00		MOV     EAX, DWORD_33B4
83 C4 30		ADD     ESP, 30H
83 F8 0A		CMP     EAX, 0AH
7D 70		JGE     SHORT LOC_10D2
53		PUSH    EBX
8B 1D CC 20 00 00		MOV     EBX, DS:STRCPY_S
57		PUSH    EDI
66 0F 1F 44 00 00		NOP     WORD PTR [EAX+EAX+00H]
6A 02		PUSH    2; MAXCOUNT
83 C0 0A		ADD     EAX, 0AH
68 20 21 00 00		PUSH    OFFSET STR2; "P1"
68 A0 33 00 00		PUSH    OFFSET STR1; STR1
A3 B4 33 00 00		MOV     DWORD_33B4, EAX
FF 15 C8 20 00 00		CALL    DS:STRNCMP
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
75 35		JNZ     SHORT LOC_10C6
6A 0A		PUSH    0AH; SIZE
FF 15 4C 20 00 00		CALL    DS:MALLOC
83 C4 04		ADD     ESP, 4
8B F8		MOV     EDI, EAX
33 F6		XOR     ESI, ESI
68 10 21 00 00		PUSH    OFFSET SOURCE; "0X90"
8D 0C 3E		LEA     ECX, [ESI+EDI]
6A 05		PUSH    5; SIZEINBYTES
51		PUSH    ECX; DESTINATION
FF D3		CALL    EBX ; STRCPY_S
46		INC     ESI
83 C4 0C		ADD     ESP, 0CH
83 FE 09		CMP     ESI, 9
7C EA		JL      SHORT LOC_10A0
68 18 21 00 00		PUSH    OFFSET A0XC3; "0XC3"
8D 47 0A		LEA     EAX, [EDI+0AH]
6A 05		PUSH    5; SIZEINBYTES
50		PUSH    EAX; DESTINATION
FF D3		CALL    EBX ; STRCPY_S
83 C4 0C		ADD     ESP, 0CH
A1 B4 33 00 00		MOV     EAX, DWORD_33B4
83 F8 0A		CMP     EAX, 0AH
7C A0		JL      SHORT LOC_1070
5F		POP     EDI
5B		POP     EBX
A1 CC 33 00 00		MOV     EAX, DWORD_33CC
5E		POP     ESI
83 F8 FF		CMP     EAX, 0FFFFFFFFH
74 3E		JZ      SHORT LOC_111B
85 C0		TEST    EAX, EAX
74 29		JZ      SHORT LOC_110A
3D E8 03 00 00		CMP     EAX, 3E8H
74 11		JZ      SHORT LOC_10F9
68 4C 21 00 00		PUSH    OFFSET BUFFER; "NONE OF THE ABOVE"
FF 15 BC 20 00 00		CALL    DS:PUTS
83 C4 04		ADD     ESP, 4
33 C0		XOR     EAX, EAX
C3		RETN
68 40 21 00 00		PUSH    OFFSET AEQUAL1000; "EQUAL 1000"
FF 15 BC 20 00 00		CALL    DS:PUTS
83 C4 04		ADD     ESP, 4
33 C0		XOR     EAX, EAX
C3		RETN
68 2C 21 00 00		PUSH    OFFSET AEQUAL0; "EQUAL 0"
FF 15 BC 20 00 00		CALL    DS:PUTS
83 C4 04		ADD     ESP, 4
33 C0		XOR     EAX, EAX
C3		RETN
68 34 21 00 00		PUSH    OFFSET AEQUAL1; "EQUAL -1"
FF 15 BC 20 00 00		CALL    DS:PUTS
83 C4 04		ADD     ESP, 4
33 C0		XOR     EAX, EAX
C3		RETN
3B 0D 00 30 00 00		CMP     ECX, ___SECURITY_COOKIE
75 01		JNZ     SHORT $FAILURE$4
C3		RETN
E9 79 02 00 00		JMP     ___REPORT_GSFAILURE
56		PUSH    ESI
6A 01		PUSH    1; TYPE
E8 70 0B 00 00		CALL    _SET_APP_TYPE
E8 56 06 00 00		CALL    __GET_STARTUP_FILE_MODE
50		PUSH    EAX; STRUCT _EXCEPTION *
E8 9B 0B 00 00		CALL    _SET_FMODE
E8 44 06 00 00		CALL    USERMATHERRORFUNCTION
8B F0		MOV     ESI, EAX
E8 BF 0B 00 00		CALL    __P__COMMODE
6A 01		PUSH    1
89 30		MOV     [EAX], ESI
E8 FA 03 00 00		CALL    ___SCRT_INITIALIZE_ONEXIT_TABLES
83 C4 0C		ADD     ESP, 0CH
5E		POP     ESI
84 C0		TEST    AL, AL
74 73		JZ      SHORT LOC_11DD
DB E2		FNCLEX
E8 72 08 00 00		CALL    SUB_19E3
68 0F 1A 00 00		PUSH    OFFSET SUB_1A0F; VOID (__CDECL *)()
E8 6E 05 00 00		CALL    _ATEXIT
E8 19 06 00 00		CALL    SUB_1799
50		PUSH    EAX; MODE
E8 38 0B 00 00		CALL    _CONFIGURE_NARROW_ARGV
59		POP     ECX
59		POP     ECX
85 C0		TEST    EAX, EAX
75 51		JNZ     SHORT LOC_11DD
E8 12 06 00 00		CALL    SUB_17A3
E8 69 06 00 00		CALL    SUB_17FF
85 C0		TEST    EAX, EAX
74 0B		JZ      SHORT LOC_11A5
68 96 17 00 00		PUSH    OFFSET USERMATHERRORFUNCTION; USERMATHERRORFUNCTION
E8 14 0B 00 00		CALL    __SETUSERMATHERR
59		POP     ECX
E8 29 06 00 00		CALL    NULLSUB_1
E8 24 06 00 00		CALL    NULLSUB_1
E8 FE 05 00 00		CALL    __INITIALIZE_DEFAULT_PRECISION
E8 DD 05 00 00		CALL    USERMATHERRORFUNCTION
50		PUSH    EAX; FLAG
E8 4D 0B 00 00		CALL    _CONFIGTHREADLOCALE
59		POP     ECX
E8 EA 05 00 00		CALL    SUB_17AF
84 C0		TEST    AL, AL
74 05		JZ      SHORT LOC_11CE
E8 F6 0A 00 00		CALL    _INITIALIZE_NARROW_ENVIRONMENT
E8 C3 05 00 00		CALL    USERMATHERRORFUNCTION
E8 5A 07 00 00		CALL    J_USERMATHERRORFUNCTION
85 C0		TEST    EAX, EAX
75 01		JNZ     SHORT LOC_11DD
C3		RETN
6A 07		PUSH    7
E8 33 06 00 00		CALL    ___SCRT_FASTFAIL
CC		INT     3; TRAP TO DEBUGGER
E8 F8 05 00 00		CALL    ___SCRT_INITIALIZE_DEFAULT_LOCAL_STDIO_OPTIONS
33 C0		XOR     EAX, EAX
C3		RETN
E8 87 07 00 00		CALL    SUB_1979
E8 9F 05 00 00		CALL    USERMATHERRORFUNCTION
50		PUSH    EAX; NEWMODE
E8 15 0B 00 00		CALL    _SET_NEW_MODE
59		POP     ECX
C3		RETN
6A 14		PUSH    14H
68 18 26 00 00		PUSH    OFFSET STRU_2618
E8 35 08 00 00		CALL    __SEH_PROLOG4
6A 01		PUSH    1
E8 11 03 00 00		CALL    ___SCRT_INITIALIZE_CRT
59		POP     ECX
84 C0		TEST    AL, AL
0F 84 50 01 00 00		JZ      LOC_136B
32 DB		XOR     BL, BL
88 5D E7		MOV     [EBP+VAR_19], BL
83 65 FC 00		AND     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0
E8 C8 02 00 00		CALL    ___SCRT_ACQUIRE_STARTUP_LOCK
88 45 DC		MOV     BYTE PTR [EBP+VAR_24], AL
A1 3C 33 00 00		MOV     EAX, DWORD_333C
33 C9		XOR     ECX, ECX
41		INC     ECX
3B C1		CMP     EAX, ECX
0F 84 2F 01 00 00		JZ      LOC_136B
85 C0		TEST    EAX, EAX
75 49		JNZ     SHORT LOC_1289
89 0D 3C 33 00 00		MOV     DWORD_333C, ECX
68 F4 20 00 00		PUSH    OFFSET LAST; LAST
68 E8 20 00 00		PUSH    OFFSET FIRST; FIRST
E8 81 0A 00 00		CALL    _INITTERM_E
59		POP     ECX
59		POP     ECX
85 C0		TEST    EAX, EAX
74 11		JZ      SHORT LOC_126C
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
B8 FF 00 00 00		MOV     EAX, 0FFH
E9 EF 00 00 00		JMP     LOC_135B
68 E4 20 00 00		PUSH    OFFSET DWORD_20E4; LAST
68 DC 20 00 00		PUSH    OFFSET DWORD_20DC; FIRST
E8 55 0A 00 00		CALL    _INITTERM
59		POP     ECX
59		POP     ECX
C7 05 3C 33 00 00 02 00 00 00		MOV     DWORD_333C, 2
EB 05		JMP     SHORT LOC_128E
8A D9		MOV     BL, CL
88 5D E7		MOV     [EBP+VAR_19], BL
FF 75 DC		PUSH    [EBP+VAR_24]
E8 E1 03 00 00		CALL    ___SCRT_RELEASE_STARTUP_LOCK
59		POP     ECX
E8 6F 05 00 00		CALL    SUB_180B
8B F0		MOV     ESI, EAX
33 FF		XOR     EDI, EDI
39 3E		CMP     [ESI], EDI
74 1B		JZ      SHORT LOC_12BF
56		PUSH    ESI
E8 39 03 00 00		CALL    ___SCRT_IS_NONWRITABLE_IN_CURRENT_IMAGE
59		POP     ECX
84 C0		TEST    AL, AL
74 10		JZ      SHORT LOC_12BF
8B 36		MOV     ESI, [ESI]
57		PUSH    EDI
6A 02		PUSH    2
57		PUSH    EDI
8B CE		MOV     ECX, ESI
FF 15 D4 20 00 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR
FF D6		CALL    ESI
E8 4D 05 00 00		CALL    SUB_1811
8B F0		MOV     ESI, EAX
39 3E		CMP     [ESI], EDI
74 13		JZ      SHORT LOC_12DD
56		PUSH    ESI
E8 13 03 00 00		CALL    ___SCRT_IS_NONWRITABLE_IN_CURRENT_IMAGE
59		POP     ECX
84 C0		TEST    AL, AL
74 08		JZ      SHORT LOC_12DD
FF 36		PUSH    DWORD PTR [ESI]; CALLBACK
E8 2A 0A 00 00		CALL    _REGISTER_THREAD_LOCAL_EXE_ATEXIT_CALLBACK
59		POP     ECX
E8 E8 09 00 00		CALL    _GET_INITIAL_NARROW_ENVIRONMENT
8B F8		MOV     EDI, EAX
E8 0B 0A 00 00		CALL    __P___ARGV
8B 30		MOV     ESI, [EAX]
E8 FE 09 00 00		CALL    __P___ARGC
57		PUSH    EDI; ENVP
56		PUSH    ESI; ARGV
FF 30		PUSH    DWORD PTR [EAX]; ARGC
E8 07 FD FF FF		CALL    _MAIN
83 C4 0C		ADD     ESP, 0CH
8B F0		MOV     ESI, EAX
E8 34 06 00 00		CALL    SUB_1937
84 C0		TEST    AL, AL
74 6B		JZ      SHORT LOC_1372
84 DB		TEST    BL, BL
75 05		JNZ     SHORT LOC_1310
E8 EA 09 00 00		CALL    _CEXIT
6A 00		PUSH    0
6A 01		PUSH    1
E8 7B 03 00 00		CALL    ___SCRT_UNINITIALIZE_CRT
59		POP     ECX
59		POP     ECX
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
8B C6		MOV     EAX, ESI
EB 35		JMP     SHORT LOC_135B
8B 4D EC		MOV     ECX, [EBP+MS_EXC.EXC_PTR]
8B 01		MOV     EAX, [ECX]
8B 00		MOV     EAX, [EAX]
89 45 E0		MOV     [EBP+CODE], EAX
51		PUSH    ECX; EXCEPTIONPTR
50		PUSH    EAX; EXCEPTIONNUM
E8 75 09 00 00		CALL    _SEH_FILTER_EXE
59		POP     ECX
59		POP     ECX
C3		RETN
8B 65 E8		MOV     ESP, [EBP+MS_EXC.OLD_ESP]
E8 F5 05 00 00		CALL    SUB_1937
84 C0		TEST    AL, AL
74 32		JZ      SHORT LOC_1378
80 7D E7 00		CMP     [EBP+VAR_19], 0
75 05		JNZ     SHORT LOC_1351
E8 AF 09 00 00		CALL    _C_EXIT
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
8B 45 E0		MOV     EAX, [EBP+CODE]
8B 4D F0		MOV     ECX, [EBP+MS_EXC.REGISTRATION.NEXT]
64 89 0D 00 00 00 00		MOV     LARGE FS:0, ECX
59		POP     ECX
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
C9		LEAVE
C3		RETN
6A 07		PUSH    7
E8 A5 04 00 00		CALL    ___SCRT_FASTFAIL
56		PUSH    ESI; CODE
E8 64 09 00 00		CALL    EXIT
FF 75 E0		PUSH    [EBP+CODE]; CODE
E8 62 09 00 00		CALL    _EXIT
E8 C5 03 00 00		CALL    ___SECURITY_INIT_COOKIE
E9 74 FE FF FF		JMP     ?__SCRT_COMMON_MAIN_SEH@@YAHXZ; __SCRT_COMMON_MAIN_SEH(VOID)
55		PUSH    EBP
8B EC		MOV     EBP, ESP
6A 00		PUSH    0; LPTOPLEVELEXCEPTIONFILTER
FF 15 04 20 00 00		CALL    DS:SETUNHANDLEDEXCEPTIONFILTER
FF 75 08		PUSH    [EBP+EXCEPTIONINFO]; EXCEPTIONINFO
FF 15 20 20 00 00		CALL    DS:UNHANDLEDEXCEPTIONFILTER
68 09 04 00 C0		PUSH    0C0000409H; UEXITCODE
FF 15 08 20 00 00		CALL    DS:GETCURRENTPROCESS
50		PUSH    EAX; HPROCESS
FF 15 0C 20 00 00		CALL    DS:TERMINATEPROCESS
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 24 03 00 00		SUB     ESP, 324H
6A 17		PUSH    17H; PROCESSORFEATURE
FF 15 10 20 00 00		CALL    DS:ISPROCESSORFEATUREPRESENT
85 C0		TEST    EAX, EAX
74 05		JZ      SHORT LOC_13CD
6A 02		PUSH    2
59		POP     ECX
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
A3 20 31 00 00		MOV     DWORD_3120, EAX
89 0D 1C 31 00 00		MOV     DWORD_311C, ECX
89 15 18 31 00 00		MOV     DWORD_3118, EDX
89 1D 14 31 00 00		MOV     DWORD_3114, EBX
89 35 10 31 00 00		MOV     DWORD_3110, ESI
89 3D 0C 31 00 00		MOV     DWORD_310C, EDI
66 8C 15 38 31 00 00		MOV     WORD_3138, SS
66 8C 0D 2C 31 00 00		MOV     WORD_312C, CS
66 8C 1D 08 31 00 00		MOV     WORD_3108, DS
66 8C 05 04 31 00 00		MOV     WORD_3104, ES
66 8C 25 00 31 00 00		MOV     WORD_3100, FS
66 8C 2D FC 30 00 00		MOV     WORD_30FC, GS
9C		PUSHF
8F 05 30 31 00 00		POP     DWORD_3130
8B 45 00		MOV     EAX, [EBP+VAR_S0]
A3 24 31 00 00		MOV     DWORD_3124, EAX
8B 45 04		MOV     EAX, [EBP+4]
A3 28 31 00 00		MOV     DWORD_3128, EAX
8D 45 08		LEA     EAX, [EBP+ARG_0]
A3 34 31 00 00		MOV     DWORD_3134, EAX
8B 85 DC FC FF FF		MOV     EAX, [EBP+VAR_324]
C7 05 70 30 00 00 01 00 01 00		MOV     DWORD_3070, 10001H
A1 28 31 00 00		MOV     EAX, DWORD_3128
A3 2C 30 00 00		MOV     DWORD_302C, EAX
C7 05 20 30 00 00 09 04 00 C0		MOV     DWORD_3020, 0C0000409H
C7 05 24 30 00 00 01 00 00 00		MOV     DWORD_3024, 1
C7 05 30 30 00 00 01 00 00 00		MOV     DWORD_3030, 1
6A 04		PUSH    4
58		POP     EAX
6B C0 00		IMUL    EAX, 0
C7 80 34 30 00 00 02 00 00 00		MOV     DWORD_3034[EAX], 2
6A 04		PUSH    4
58		POP     EAX
6B C0 00		IMUL    EAX, 0
8B 0D 00 30 00 00		MOV     ECX, ___SECURITY_COOKIE
89 4C 05 F8		MOV     [EBP+EAX+VAR_8], ECX
6A 04		PUSH    4
58		POP     EAX
C1 E0 00		SHL     EAX, 0
8B 0D 04 30 00 00		MOV     ECX, DWORD_3004
89 4C 05 F8		MOV     [EBP+EAX+VAR_8], ECX
68 08 21 00 00		PUSH    OFFSET EXCEPTIONINFO; EXCEPTIONINFO
E8 E0 FE FF FF		CALL    ___RAISE_SECURITYFAILURE
C9		LEAVE
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
56		PUSH    ESI
8B 48 3C		MOV     ECX, [EAX+3CH]
03 C8		ADD     ECX, EAX
0F B7 41 14		MOVZX   EAX, WORD PTR [ECX+14H]
8D 51 18		LEA     EDX, [ECX+18H]
03 D0		ADD     EDX, EAX
0F B7 41 06		MOVZX   EAX, WORD PTR [ECX+6]
6B F0 28		IMUL    ESI, EAX, 28H ; '('
03 F2		ADD     ESI, EDX
3B D6		CMP     EDX, ESI
74 19		JZ      SHORT LOC_14E8
8B 4D 0C		MOV     ECX, [EBP+ARG_4]
3B 4A 0C		CMP     ECX, [EDX+0CH]
72 0A		JB      SHORT LOC_14E1
8B 42 08		MOV     EAX, [EDX+8]
03 42 0C		ADD     EAX, [EDX+0CH]
3B C8		CMP     ECX, EAX
72 0C		JB      SHORT LOC_14ED
83 C2 28		ADD     EDX, 28H ; '('
3B D6		CMP     EDX, ESI
75 EA		JNZ     SHORT LOC_14D2
33 C0		XOR     EAX, EAX
5E		POP     ESI
5D		POP     EBP
C3		RETN
8B C2		MOV     EAX, EDX
EB F9		JMP     SHORT LOC_14EA
56		PUSH    ESI
E8 91 07 00 00		CALL    ___SCRT_IS_UCRT_DLL_IN_USE
85 C0		TEST    EAX, EAX
74 20		JZ      SHORT LOC_151B
64 A1 18 00 00 00		MOV     EAX, LARGE FS:18H
BE 40 33 00 00		MOV     ESI, OFFSET UNK_3340
8B 50 04		MOV     EDX, [EAX+4]
EB 04		JMP     SHORT LOC_150F
3B D0		CMP     EDX, EAX
74 10		JZ      SHORT LOC_151F
33 C0		XOR     EAX, EAX
8B CA		MOV     ECX, EDX
F0 0F B1 0E		LOCK CMPXCHG [ESI], ECX
85 C0		TEST    EAX, EAX
75 F0		JNZ     SHORT LOC_150B
32 C0		XOR     AL, AL
5E		POP     ESI
C3		RETN
B0 01		MOV     AL, 1
5E		POP     ESI
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 7D 08 00		CMP     [EBP+ARG_0], 0
75 07		JNZ     SHORT LOC_1533
C6 05 44 33 00 00 01		MOV     BYTE_3344, 1
E8 7C 05 00 00		CALL    SUB_1AB4
E8 72 02 00 00		CALL    SUB_17AF
84 C0		TEST    AL, AL
75 04		JNZ     SHORT LOC_1545
32 C0		XOR     AL, AL
5D		POP     EBP
C3		RETN
E8 65 02 00 00		CALL    SUB_17AF
84 C0		TEST    AL, AL
75 0A		JNZ     SHORT LOC_1558
6A 00		PUSH    0
E8 5A 02 00 00		CALL    SUB_17AF
59		POP     ECX
EB E9		JMP     SHORT LOC_1541
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
80 3D 45 33 00 00 00		CMP     BYTE_3345, 0
74 04		JZ      SHORT LOC_156C
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
56		PUSH    ESI
8B 75 08		MOV     ESI, [EBP+ARG_0]
85 F6		TEST    ESI, ESI
74 05		JZ      SHORT LOC_1579
83 FE 01		CMP     ESI, 1
75 62		JNZ     SHORT LOC_15DB
E8 0A 07 00 00		CALL    ___SCRT_IS_UCRT_DLL_IN_USE
85 C0		TEST    EAX, EAX
74 26		JZ      SHORT LOC_15A8
85 F6		TEST    ESI, ESI
75 22		JNZ     SHORT LOC_15A8
68 48 33 00 00		PUSH    OFFSET TABLE; TABLE
E8 8E 07 00 00		CALL    _INITIALIZE_ONEXIT_TABLE
59		POP     ECX
85 C0		TEST    EAX, EAX
75 0F		JNZ     SHORT LOC_15A4
68 54 33 00 00		PUSH    OFFSET STRU_3354; TABLE
E8 7F 07 00 00		CALL    _INITIALIZE_ONEXIT_TABLE
59		POP     ECX
85 C0		TEST    EAX, EAX
74 2B		JZ      SHORT LOC_15CF
32 C0		XOR     AL, AL
EB 30		JMP     SHORT LOC_15D8
83 C9 FF		OR      ECX, 0FFFFFFFFH
89 0D 48 33 00 00		MOV     TABLE._FIRST, ECX
89 0D 4C 33 00 00		MOV     TABLE._LAST, ECX
89 0D 50 33 00 00		MOV     TABLE._END, ECX
89 0D 54 33 00 00		MOV     STRU_3354._FIRST, ECX
89 0D 58 33 00 00		MOV     STRU_3354._LAST, ECX
89 0D 5C 33 00 00		MOV     STRU_3354._END, ECX
C6 05 45 33 00 00 01		MOV     BYTE_3345, 1
B0 01		MOV     AL, 1
5E		POP     ESI
5D		POP     EBP
C3		RETN
6A 05		PUSH    5
E8 35 02 00 00		CALL    ___SCRT_FASTFAIL
CC		INT     3; TRAP TO DEBUGGER
6A 08		PUSH    8
68 38 26 00 00		PUSH    OFFSET STRU_2638
E8 51 04 00 00		CALL    __SEH_PROLOG4
83 65 FC 00		AND     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0
B8 4D 5A 00 00		MOV     EAX, 5A4DH
66 39 05 00 00 00 00		CMP     LARGE DS:0, AX
75 5D		JNZ     SHORT LOC_165E
A1 3C 00 00 00		MOV     EAX, LARGE DS:3CH
81 B8 00 00 00 00 50 45 00 00		CMP     DWORD PTR [EAX+0], 4550H
75 4C		JNZ     SHORT LOC_165E
B9 0B 01 00 00		MOV     ECX, 10BH
66 39 88 18 00 00 00		CMP     [EAX+18H], CX
75 3E		JNZ     SHORT LOC_165E
8B 45 08		MOV     EAX, [EBP+ARG_0]
B9 00 00 00 00		MOV     ECX, 0
2B C1		SUB     EAX, ECX
50		PUSH    EAX; UNSIGNED INT
51		PUSH    ECX; UNSIGNED __INT8 *
E8 7C FE FF FF		CALL    ?FIND_PE_SECTION@@YAPAU_IMAGE_SECTION_HEADER@@QAEI@Z; FIND_PE_SECTION(UCHAR * CONST,UINT)
59		POP     ECX
59		POP     ECX
85 C0		TEST    EAX, EAX
74 27		JZ      SHORT LOC_165E
83 78 24 00		CMP     DWORD PTR [EAX+24H], 0
7C 21		JL      SHORT LOC_165E
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
B0 01		MOV     AL, 1
EB 1F		JMP     SHORT LOC_1667
8B 45 EC		MOV     EAX, [EBP+MS_EXC.EXC_PTR]
8B 00		MOV     EAX, [EAX]
33 C9		XOR     ECX, ECX
81 38 05 00 00 C0		CMP     DWORD PTR [EAX], 0C0000005H
0F 94 C1		SETZ    CL
8B C1		MOV     EAX, ECX
C3		RETN
8B 65 E8		MOV     ESP, [EBP+MS_EXC.OLD_ESP]
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
32 C0		XOR     AL, AL
8B 4D F0		MOV     ECX, [EBP+MS_EXC.REGISTRATION.NEXT]
64 89 0D 00 00 00 00		MOV     LARGE FS:0, ECX
59		POP     ECX
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
C9		LEAVE
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 09 06 00 00		CALL    ___SCRT_IS_UCRT_DLL_IN_USE
85 C0		TEST    EAX, EAX
74 0F		JZ      SHORT LOC_1692
80 7D 08 00		CMP     [EBP+ARG_0], 0
75 09		JNZ     SHORT LOC_1692
33 C0		XOR     EAX, EAX
B9 40 33 00 00		MOV     ECX, OFFSET UNK_3340
87 01		XCHG    EAX, [ECX]
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
80 3D 44 33 00 00 00		CMP     BYTE_3344, 0
74 06		JZ      SHORT LOC_16A6
80 7D 0C 00		CMP     [EBP+ARG_4], 0
75 12		JNZ     SHORT LOC_16B8
FF 75 08		PUSH    [EBP+ARG_0]
E8 01 01 00 00		CALL    SUB_17AF
FF 75 08		PUSH    [EBP+ARG_0]
E8 F9 00 00 00		CALL    SUB_17AF
59		POP     ECX
59		POP     ECX
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 3D 48 33 00 00 FF		CMP     TABLE._FIRST, 0FFFFFFFFH
FF 75 08		PUSH    [EBP+FUNCTION]; FUNCTION
75 07		JNZ     SHORT LOC_16D2
E8 5A 06 00 00		CALL    _CRT_ATEXIT
EB 0B		JMP     SHORT LOC_16DD
68 48 33 00 00		PUSH    OFFSET TABLE; TABLE
E8 48 06 00 00		CALL    _REGISTER_ONEXIT_FUNCTION
59		POP     ECX
F7 D8		NEG     EAX
59		POP     ECX
1B C0		SBB     EAX, EAX
F7 D0		NOT     EAX
23 45 08		AND     EAX, [EBP+FUNCTION]
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
FF 75 08		PUSH    [EBP+FUNC]; FUNC
E8 C8 FF FF FF		CALL    __ONEXIT
F7 D8		NEG     EAX
59		POP     ECX
1B C0		SBB     EAX, EAX
F7 D8		NEG     EAX
48		DEC     EAX
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 14		SUB     ESP, 14H
83 65 F4 00		AND     [EBP+SYSTEMTIMEASFILETIME.DWLOWDATETIME], 0
8D 45 F4		LEA     EAX, [EBP+SYSTEMTIMEASFILETIME]
83 65 F8 00		AND     [EBP+SYSTEMTIMEASFILETIME.DWHIGHDATETIME], 0
50		PUSH    EAX; LPSYSTEMTIMEASFILETIME
FF 15 00 20 00 00		CALL    DS:GETSYSTEMTIMEASFILETIME
8B 45 F8		MOV     EAX, [EBP+SYSTEMTIMEASFILETIME.DWHIGHDATETIME]
33 45 F4		XOR     EAX, [EBP+SYSTEMTIMEASFILETIME.DWLOWDATETIME]
89 45 FC		MOV     [EBP+VAR_4], EAX
FF 15 24 20 00 00		CALL    DS:GETCURRENTTHREADID
31 45 FC		XOR     [EBP+VAR_4], EAX
FF 15 28 20 00 00		CALL    DS:GETCURRENTPROCESSID
31 45 FC		XOR     [EBP+VAR_4], EAX
8D 45 EC		LEA     EAX, [EBP+PERFORMANCECOUNT]
50		PUSH    EAX; LPPERFORMANCECOUNT
FF 15 2C 20 00 00		CALL    DS:QUERYPERFORMANCECOUNTER
8B 45 F0		MOV     EAX, DWORD PTR [EBP+PERFORMANCECOUNT+4]
8D 4D FC		LEA     ECX, [EBP+VAR_4]
33 45 EC		XOR     EAX, DWORD PTR [EBP+PERFORMANCECOUNT]
33 45 FC		XOR     EAX, [EBP+VAR_4]
33 C1		XOR     EAX, ECX
C9		LEAVE
C3		RETN
8B 0D 00 30 00 00		MOV     ECX, ___SECURITY_COOKIE
56		PUSH    ESI
57		PUSH    EDI
BF 4E E6 40 BB		MOV     EDI, 0BB40E64EH
BE 00 00 FF FF		MOV     ESI, 0FFFF0000H
3B CF		CMP     ECX, EDI
74 04		JZ      SHORT LOC_1765
85 CE		TEST    ESI, ECX
75 26		JNZ     SHORT LOC_178B
E8 94 FF FF FF		CALL    ___GET_ENTROPY
8B C8		MOV     ECX, EAX
3B CF		CMP     ECX, EDI
75 07		JNZ     SHORT LOC_1777
B9 4F E6 40 BB		MOV     ECX, 0BB40E64FH
EB 0E		JMP     SHORT LOC_1785
85 CE		TEST    ESI, ECX
75 0A		JNZ     SHORT LOC_1785
0D 11 47 00 00		OR      EAX, 4711H
C1 E0 10		SHL     EAX, 10H
0B C8		OR      ECX, EAX
89 0D 00 30 00 00		MOV     ___SECURITY_COOKIE, ECX
F7 D1		NOT     ECX
5F		POP     EDI
89 0D 04 30 00 00		MOV     DWORD_3004, ECX
5E		POP     ESI
C3		RETN
33 C0		XOR     EAX, EAX
C3		RETN
33 C0		XOR     EAX, EAX
40		INC     EAX
C3		RETN
B8 00 40 00 00		MOV     EAX, 4000H
C3		RETN
68 60 33 00 00		PUSH    OFFSET LISTHEAD; LISTHEAD
FF 15 1C 20 00 00		CALL    DS:INITIALIZESLISTHEAD
C3		RETN
B0 01		MOV     AL, 1
C3		RETN
68 00 00 03 00		PUSH    30000H; MASK
68 00 00 01 00		PUSH    10000H; NEWVALUE
6A 00		PUSH    0; CURRENTSTATE
E8 6D 05 00 00		CALL    _CONTROLFP_S
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
75 01		JNZ     SHORT LOC_17CB
C3		RETN
6A 07		PUSH    7
E8 45 00 00 00		CALL    ___SCRT_FASTFAIL
CC		INT     3; TRAP TO DEBUGGER
C2 00 00		RETN    0
B8 68 33 00 00		MOV     EAX, OFFSET UNK_3368
C3		RETN
B8 70 33 00 00		MOV     EAX, OFFSET UNK_3370
C3		RETN
E8 EF FF FF FF		CALL    SUB_17D6
8B 48 04		MOV     ECX, [EAX+4]
83 08 24		OR      DWORD PTR [EAX], 24H
89 48 04		MOV     [EAX+4], ECX
E8 E7 FF FF FF		CALL    SUB_17DC
8B 48 04		MOV     ECX, [EAX+4]
83 08 02		OR      DWORD PTR [EAX], 2
89 48 04		MOV     [EAX+4], ECX
C3		RETN
33 C0		XOR     EAX, EAX
39 05 0C 30 00 00		CMP     DWORD_300C, EAX
0F 94 C0		SETZ    AL
C3		RETN
B8 88 33 00 00		MOV     EAX, OFFSET UNK_3388
C3		RETN
B8 84 33 00 00		MOV     EAX, OFFSET UNK_3384
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 24 03 00 00		SUB     ESP, 324H
53		PUSH    EBX
6A 17		PUSH    17H; PROCESSORFEATURE
FF 15 10 20 00 00		CALL    DS:ISPROCESSORFEATUREPRESENT
85 C0		TEST    EAX, EAX
74 05		JZ      SHORT LOC_1832
8B 4D 08		MOV     ECX, [EBP+ARG_0]
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
6A 03		PUSH    3
E8 A2 01 00 00		CALL    SUB_19DB
C7 04 24 CC 02 00 00		MOV     [ESP+32CH+SIZE], 2CCH; SIZE
8D 85 DC FC FF FF		LEA     EAX, [EBP+VAR_324]
6A 00		PUSH    0; VAL
50		PUSH    EAX; VOID *
E8 52 04 00 00		CALL    MEMSET
83 C4 0C		ADD     ESP, 0CH
89 85 8C FD FF FF		MOV     [EBP+VAR_274], EAX
89 8D 88 FD FF FF		MOV     [EBP+VAR_278], ECX
89 95 84 FD FF FF		MOV     [EBP+VAR_27C], EDX
89 9D 80 FD FF FF		MOV     [EBP+VAR_280], EBX
89 B5 7C FD FF FF		MOV     [EBP+VAR_284], ESI
89 BD 78 FD FF FF		MOV     [EBP+VAR_288], EDI
66 8C 95 A4 FD FF FF		MOV     [EBP+VAR_25C], SS
66 8C 8D 98 FD FF FF		MOV     [EBP+VAR_268], CS
66 8C 9D 74 FD FF FF		MOV     [EBP+VAR_28C], DS
66 8C 85 70 FD FF FF		MOV     [EBP+VAR_290], ES
66 8C A5 6C FD FF FF		MOV     [EBP+VAR_294], FS
66 8C AD 68 FD FF FF		MOV     [EBP+VAR_298], GS
9C		PUSHF
8F 85 9C FD FF FF		POP     [EBP+VAR_264]
8B 45 04		MOV     EAX, [EBP+4]
89 85 94 FD FF FF		MOV     [EBP+VAR_26C], EAX
8D 45 04		LEA     EAX, [EBP+4]
89 85 A0 FD FF FF		MOV     [EBP+VAR_260], EAX
C7 85 DC FC FF FF 01 00 01 00		MOV     [EBP+VAR_324], 10001H
8B 40 FC		MOV     EAX, [EAX-4]
6A 50		PUSH    50H ; 'P'; SIZE
89 85 90 FD FF FF		MOV     [EBP+VAR_270], EAX
8D 45 A8		LEA     EAX, [EBP+VAR_58]
6A 00		PUSH    0; VAL
50		PUSH    EAX; VOID *
E8 C8 03 00 00		CALL    MEMSET
8B 45 04		MOV     EAX, [EBP+4]
83 C4 0C		ADD     ESP, 0CH
C7 45 A8 15 00 00 40		MOV     [EBP+VAR_58], 40000015H
C7 45 AC 01 00 00 00		MOV     [EBP+VAR_54], 1
89 45 B4		MOV     [EBP+VAR_4C], EAX
FF 15 18 20 00 00		CALL    DS:ISDEBUGGERPRESENT
6A 00		PUSH    0; LPTOPLEVELEXCEPTIONFILTER
8D 58 FF		LEA     EBX, [EAX-1]
F7 DB		NEG     EBX
8D 45 A8		LEA     EAX, [EBP+VAR_58]
89 45 F8		MOV     [EBP+EXCEPTIONINFO.EXCEPTIONRECORD], EAX
8D 85 DC FC FF FF		LEA     EAX, [EBP+VAR_324]
1A DB		SBB     BL, BL
89 45 FC		MOV     [EBP+EXCEPTIONINFO.CONTEXTRECORD], EAX
FE C3		INC     BL
FF 15 04 20 00 00		CALL    DS:SETUNHANDLEDEXCEPTIONFILTER
8D 45 F8		LEA     EAX, [EBP+EXCEPTIONINFO]
50		PUSH    EAX; EXCEPTIONINFO
FF 15 20 20 00 00		CALL    DS:UNHANDLEDEXCEPTIONFILTER
85 C0		TEST    EAX, EAX
75 0C		JNZ     SHORT LOC_192F
84 DB		TEST    BL, BL
75 08		JNZ     SHORT LOC_192F
6A 03		PUSH    3
E8 AD 00 00 00		CALL    SUB_19DB
59		POP     ECX
5B		POP     EBX
C9		LEAVE
C3		RETN
E9 5F FE FF FF		JMP     USERMATHERRORFUNCTION
6A 00		PUSH    0; LPMODULENAME
FF 15 14 20 00 00		CALL    DS:GETMODULEHANDLEW
85 C0		TEST    EAX, EAX
74 33		JZ      SHORT LOC_1976
B9 4D 5A 00 00		MOV     ECX, 5A4DH
66 39 08		CMP     [EAX], CX
75 29		JNZ     SHORT LOC_1976
8B 48 3C		MOV     ECX, [EAX+3CH]
03 C8		ADD     ECX, EAX
81 39 50 45 00 00		CMP     DWORD PTR [ECX], 4550H
75 1C		JNZ     SHORT LOC_1976
B8 0B 01 00 00		MOV     EAX, 10BH
66 39 41 18		CMP     [ECX+18H], AX
75 11		JNZ     SHORT LOC_1976
83 79 74 0E		CMP     DWORD PTR [ECX+74H], 0EH
76 0B		JBE     SHORT LOC_1976
83 B9 E8 00 00 00 00		CMP     DWORD PTR [ECX+0E8H], 0
0F 95 C0		SETNZ   AL
C3		RETN
32 C0		XOR     AL, AL
C3		RETN
68 85 19 00 00		PUSH    OFFSET ___SCRT_UNHANDLED_EXCEPTION_FILTER@4; LPTOPLEVELEXCEPTIONFILTER
FF 15 04 20 00 00		CALL    DS:SETUNHANDLEDEXCEPTIONFILTER
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
56		PUSH    ESI
57		PUSH    EDI
8B 7D 08		MOV     EDI, [EBP+EXCEPTIONINFO]
8B 37		MOV     ESI, [EDI]
81 3E 63 73 6D E0		CMP     DWORD PTR [ESI], 0E06D7363H
75 25		JNZ     SHORT LOC_19BC
83 7E 10 03		CMP     DWORD PTR [ESI+10H], 3
75 1F		JNZ     SHORT LOC_19BC
8B 46 14		MOV     EAX, [ESI+14H]
3D 20 05 93 19		CMP     EAX, 19930520H
74 1D		JZ      SHORT LOC_19C4
3D 21 05 93 19		CMP     EAX, 19930521H
74 16		JZ      SHORT LOC_19C4
3D 22 05 93 19		CMP     EAX, 19930522H
74 0F		JZ      SHORT LOC_19C4
3D 00 40 99 01		CMP     EAX, 1994000H
74 08		JZ      SHORT LOC_19C4
5F		POP     EDI
33 C0		XOR     EAX, EAX
5E		POP     ESI
5D		POP     EBP
C2 04 00		RETN    4
E8 CB 02 00 00		CALL    __CURRENT_EXCEPTION
89 30		MOV     [EAX], ESI
8B 77 04		MOV     ESI, [EDI+4]
E8 C7 02 00 00		CALL    __CURRENT_EXCEPTION_CONTEXT
89 30		MOV     [EAX], ESI
E8 5C 03 00 00		CALL    TERMINATE
CC		INT     3; TRAP TO DEBUGGER
83 25 78 33 00 00 00		AND     DWORD_3378, 0
C3		RETN
53		PUSH    EBX
56		PUSH    ESI
BE 0C 26 00 00		MOV     ESI, OFFSET UNK_260C
BB 0C 26 00 00		MOV     EBX, OFFSET UNK_260C
3B F3		CMP     ESI, EBX
73 19		JNB     SHORT LOC_1A0C
57		PUSH    EDI
8B 3E		MOV     EDI, [ESI]
85 FF		TEST    EDI, EDI
74 0A		JZ      SHORT LOC_1A04
8B CF		MOV     ECX, EDI
FF 15 D4 20 00 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR
FF D7		CALL    EDI
83 C6 04		ADD     ESI, 4
3B F3		CMP     ESI, EBX
72 E9		JB      SHORT LOC_19F4
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
C3		RETN
53		PUSH    EBX
56		PUSH    ESI
BE 14 26 00 00		MOV     ESI, OFFSET UNK_2614
BB 14 26 00 00		MOV     EBX, OFFSET UNK_2614
3B F3		CMP     ESI, EBX
73 19		JNB     SHORT LOC_1A38
57		PUSH    EDI
8B 3E		MOV     EDI, [ESI]
85 FF		TEST    EDI, EDI
74 0A		JZ      SHORT LOC_1A30
8B CF		MOV     ECX, EDI
FF 15 D4 20 00 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR
FF D7		CALL    EDI
83 C6 04		ADD     ESI, 4
3B F3		CMP     ESI, EBX
72 E9		JB      SHORT LOC_1A20
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
C3		RETN
68 85 1A 00 00		PUSH    OFFSET __EXCEPT_HANDLER4
64 FF 35 00 00 00 00		PUSH    LARGE DWORD PTR FS:0
8B 44 24 10		MOV     EAX, [ESP+8+ARG_4]
89 6C 24 10		MOV     [ESP+8+ARG_4], EBP
8D 6C 24 10		LEA     EBP, [ESP+8+ARG_4]
2B E0		SUB     ESP, EAX
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
A1 00 30 00 00		MOV     EAX, ___SECURITY_COOKIE
31 45 FC		XOR     [EBP-4], EAX
33 C5		XOR     EAX, EBP
50		PUSH    EAX
89 65 E8		MOV     [EBP-18H], ESP
FF 75 F8		PUSH    DWORD PTR [EBP-8]
8B 45 FC		MOV     EAX, [EBP-4]
C7 45 FC FE FF FF FF		MOV     DWORD PTR [EBP-4], 0FFFFFFFEH
89 45 F8		MOV     [EBP-8], EAX
8D 45 F0		LEA     EAX, [EBP-10H]
64 A3 00 00 00 00		MOV     LARGE FS:0, EAX
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
56		PUSH    ESI
8B 75 08		MOV     ESI, [EBP+ARG_0]
FF 36		PUSH    DWORD PTR [ESI]
E8 A9 02 00 00		CALL    __FILTER_X86_SSE2_FLOATING_POINT_EXCEPTION_DEFAULT
FF 75 14		PUSH    [EBP+ARG_C]
89 06		MOV     [ESI], EAX
FF 75 10		PUSH    [EBP+ARG_8]
FF 75 0C		PUSH    [EBP+ARG_4]
56		PUSH    ESI
68 2C 11 00 00		PUSH    OFFSET @__SECURITY_CHECK_COOKIE@4; __SECURITY_CHECK_COOKIE(X)
68 00 30 00 00		PUSH    OFFSET ___SECURITY_COOKIE
E8 F8 01 00 00		CALL    _EXCEPT_HANDLER4_COMMON
83 C4 1C		ADD     ESP, 1CH
5E		POP     ESI
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 25 7C 33 00 00 00		AND     DWORD_337C, 0
83 EC 24		SUB     ESP, 24H
83 0D 10 30 00 00 01		OR      DWORD_3010, 1
6A 0A		PUSH    0AH; PROCESSORFEATURE
FF 15 10 20 00 00		CALL    DS:ISPROCESSORFEATUREPRESENT
85 C0		TEST    EAX, EAX
0F 84 AC 01 00 00		JZ      LOC_1C84
83 65 F0 00		AND     [EBP+VAR_10], 0
33 C0		XOR     EAX, EAX
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
33 C9		XOR     ECX, ECX
8D 7D DC		LEA     EDI, [EBP+VAR_24]
53		PUSH    EBX
0F A2		CPUID
8B F3		MOV     ESI, EBX
5B		POP     EBX
90		NOP
89 07		MOV     [EDI], EAX
89 77 04		MOV     [EDI+4], ESI
89 4F 08		MOV     [EDI+8], ECX
33 C9		XOR     ECX, ECX
89 57 0C		MOV     [EDI+0CH], EDX
8B 45 DC		MOV     EAX, [EBP+VAR_24]
8B 7D E0		MOV     EDI, [EBP+VAR_20]
89 45 F4		MOV     [EBP+VAR_C], EAX
81 F7 47 65 6E 75		XOR     EDI, 756E6547H
8B 45 E8		MOV     EAX, [EBP+VAR_18]
35 69 6E 65 49		XOR     EAX, 49656E69H
89 45 FC		MOV     [EBP+VAR_4], EAX
8B 45 E4		MOV     EAX, [EBP+VAR_1C]
35 6E 74 65 6C		XOR     EAX, 6C65746EH
89 45 F8		MOV     [EBP+VAR_8], EAX
33 C0		XOR     EAX, EAX
40		INC     EAX
53		PUSH    EBX
0F A2		CPUID
8B F3		MOV     ESI, EBX
5B		POP     EBX
90		NOP
8D 5D DC		LEA     EBX, [EBP+VAR_24]
89 03		MOV     [EBX], EAX
8B 45 FC		MOV     EAX, [EBP+VAR_4]
0B 45 F8		OR      EAX, [EBP+VAR_8]
0B C7		OR      EAX, EDI
89 73 04		MOV     [EBX+4], ESI
89 4B 08		MOV     [EBX+8], ECX
89 53 0C		MOV     [EBX+0CH], EDX
75 43		JNZ     SHORT LOC_1B84
8B 45 DC		MOV     EAX, [EBP+VAR_24]
25 F0 3F FF 0F		AND     EAX, 0FFF3FF0H
3D C0 06 01 00		CMP     EAX, 106C0H
74 23		JZ      SHORT LOC_1B73
3D 60 06 02 00		CMP     EAX, 20660H
74 1C		JZ      SHORT LOC_1B73
3D 70 06 02 00		CMP     EAX, 20670H
74 15		JZ      SHORT LOC_1B73
3D 50 06 03 00		CMP     EAX, 30650H
74 0E		JZ      SHORT LOC_1B73
3D 60 06 03 00		CMP     EAX, 30660H
74 07		JZ      SHORT LOC_1B73
3D 70 06 03 00		CMP     EAX, 30670H
75 11		JNZ     SHORT LOC_1B84
8B 3D 80 33 00 00		MOV     EDI, DWORD_3380
83 CF 01		OR      EDI, 1
89 3D 80 33 00 00		MOV     DWORD_3380, EDI
EB 06		JMP     SHORT LOC_1B8A
8B 3D 80 33 00 00		MOV     EDI, DWORD_3380
8B 4D E4		MOV     ECX, [EBP+VAR_1C]
6A 07		PUSH    7
58		POP     EAX
89 4D FC		MOV     [EBP+VAR_4], ECX
39 45 F4		CMP     [EBP+VAR_C], EAX
7C 30		JL      SHORT LOC_1BC8
33 C9		XOR     ECX, ECX
53		PUSH    EBX
0F A2		CPUID
8B F3		MOV     ESI, EBX
5B		POP     EBX
90		NOP
8D 5D DC		LEA     EBX, [EBP+VAR_24]
89 03		MOV     [EBX], EAX
89 73 04		MOV     [EBX+4], ESI
89 4B 08		MOV     [EBX+8], ECX
8B 4D FC		MOV     ECX, [EBP+VAR_4]
89 53 0C		MOV     [EBX+0CH], EDX
8B 5D E0		MOV     EBX, [EBP+VAR_20]
F7 C3 00 02 00 00		TEST    EBX, 200H
74 0E		JZ      SHORT LOC_1BCB
83 CF 02		OR      EDI, 2
89 3D 80 33 00 00		MOV     DWORD_3380, EDI
EB 03		JMP     SHORT LOC_1BCB
8B 5D F0		MOV     EBX, [EBP+VAR_10]
A1 10 30 00 00		MOV     EAX, DWORD_3010
83 C8 02		OR      EAX, 2
C7 05 7C 33 00 00 01 00 00 00		MOV     DWORD_337C, 1
A3 10 30 00 00		MOV     DWORD_3010, EAX
F7 C1 00 00 10 00		TEST    ECX, 100000H
0F 84 93 00 00 00		JZ      LOC_1C81
83 C8 04		OR      EAX, 4
C7 05 7C 33 00 00 02 00 00 00		MOV     DWORD_337C, 2
A3 10 30 00 00		MOV     DWORD_3010, EAX
F7 C1 00 00 00 08		TEST    ECX, 8000000H
74 79		JZ      SHORT LOC_1C81
F7 C1 00 00 00 10		TEST    ECX, 10000000H
74 71		JZ      SHORT LOC_1C81
33 C9		XOR     ECX, ECX
0F 01 D0		XGETBV
89 45 EC		MOV     [EBP+VAR_14], EAX
89 55 F0		MOV     [EBP+VAR_10], EDX
8B 45 EC		MOV     EAX, [EBP+VAR_14]
8B 4D F0		MOV     ECX, [EBP+VAR_10]
6A 06		PUSH    6
5E		POP     ESI
23 C6		AND     EAX, ESI
3B C6		CMP     EAX, ESI
75 57		JNZ     SHORT LOC_1C81
A1 10 30 00 00		MOV     EAX, DWORD_3010
83 C8 08		OR      EAX, 8
C7 05 7C 33 00 00 03 00 00 00		MOV     DWORD_337C, 3
A3 10 30 00 00		MOV     DWORD_3010, EAX
F6 C3 20		TEST    BL, 20H
74 3B		JZ      SHORT LOC_1C81
83 C8 20		OR      EAX, 20H
C7 05 7C 33 00 00 05 00 00 00		MOV     DWORD_337C, 5
A3 10 30 00 00		MOV     DWORD_3010, EAX
B8 00 00 03 D0		MOV     EAX, 0D0030000H
23 D8		AND     EBX, EAX
3B D8		CMP     EBX, EAX
75 1E		JNZ     SHORT LOC_1C81
8B 45 EC		MOV     EAX, [EBP+VAR_14]
BA E0 00 00 00		MOV     EDX, 0E0H
8B 4D F0		MOV     ECX, [EBP+VAR_10]
23 C2		AND     EAX, EDX
3B C2		CMP     EAX, EDX
75 0D		JNZ     SHORT LOC_1C81
83 0D 10 30 00 00 40		OR      DWORD_3010, 40H
89 35 7C 33 00 00		MOV     DWORD_337C, ESI
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
33 C0		XOR     EAX, EAX
C9		LEAVE
C3		RETN
33 C0		XOR     EAX, EAX
39 05 14 30 00 00		CMP     DWORD_3014, EAX
0F 95 C0		SETNZ   AL
C3		RETN
FF 25 38 20 00 00		JMP     DS:__IMP___CURRENT_EXCEPTION
FF 25 34 20 00 00		JMP     DS:__IMP___CURRENT_EXCEPTION_CONTEXT
FF 25 3C 20 00 00		JMP     DS:__IMP_MEMSET
FF 25 40 20 00 00		JMP     DS:__IMP__EXCEPT_HANDLER4_COMMON
FF 25 8C 20 00 00		JMP     DS:__IMP__SEH_FILTER_EXE
FF 25 88 20 00 00		JMP     DS:__IMP__SET_APP_TYPE
FF 25 5C 20 00 00		JMP     DS:__IMP___SETUSERMATHERR
FF 25 A8 20 00 00		JMP     DS:__IMP__CONFIGURE_NARROW_ARGV
FF 25 A4 20 00 00		JMP     DS:__IMP__INITIALIZE_NARROW_ENVIRONMENT
FF 25 A0 20 00 00		JMP     DS:__IMP__GET_INITIAL_NARROW_ENVIRONMENT
FF 25 9C 20 00 00		JMP     DS:__IMP__INITTERM
FF 25 6C 20 00 00		JMP     DS:__IMP__INITTERM_E
FF 25 AC 20 00 00		JMP     DS:__IMP_EXIT
FF 25 90 20 00 00		JMP     DS:__IMP__EXIT
FF 25 B4 20 00 00		JMP     DS:__IMP__SET_FMODE
FF 25 70 20 00 00		JMP     DS:__IMP___P___ARGC
FF 25 68 20 00 00		JMP     DS:__IMP___P___ARGV
FF 25 64 20 00 00		JMP     DS:__IMP__CEXIT
FF 25 94 20 00 00		JMP     DS:__IMP__C_EXIT
FF 25 78 20 00 00		JMP     DS:__IMP__REGISTER_THREAD_LOCAL_EXE_ATEXIT_CALLBACK
FF 25 54 20 00 00		JMP     DS:__IMP__CONFIGTHREADLOCALE
FF 25 48 20 00 00		JMP     DS:__IMP__SET_NEW_MODE
FF 25 B8 20 00 00		JMP     DS:__IMP___P__COMMODE
FF 25 98 20 00 00		JMP     DS:__IMP__INITIALIZE_ONEXIT_TABLE
FF 25 74 20 00 00		JMP     DS:__IMP__REGISTER_ONEXIT_FUNCTION
FF 25 7C 20 00 00		JMP     DS:__IMP__CRT_ATEXIT
FF 25 80 20 00 00		JMP     DS:__IMP__CONTROLFP_S
FF 25 84 20 00 00		JMP     DS:__IMP_TERMINATE
55		PUSH    EBP
8B EC		MOV     EBP, ESP
51		PUSH    ECX
83 3D 7C 33 00 00 01		CMP     DWORD_337C, 1
7C 66		JL      SHORT LOC_1DAF
81 7D 08 B4 02 00 C0		CMP     [EBP+ARG_0], 0C00002B4H
74 09		JZ      SHORT LOC_1D5B
81 7D 08 B5 02 00 C0		CMP     [EBP+ARG_0], 0C00002B5H
75 54		JNZ     SHORT LOC_1DAF
0F AE 5D FC		STMXCSR [EBP+VAR_4]
8B 45 FC		MOV     EAX, [EBP+VAR_4]
83 F0 3F		XOR     EAX, 3FH
A8 81		TEST    AL, 81H
74 3F		JZ      SHORT LOC_1DA8
A9 04 02 00 00		TEST    EAX, 204H
75 07		JNZ     SHORT LOC_1D77
B8 8E 00 00 C0		MOV     EAX, 0C000008EH
C9		LEAVE
C3		RETN
A9 02 01 00 00		TEST    EAX, 102H
74 2A		JZ      SHORT LOC_1DA8
A9 08 04 00 00		TEST    EAX, 408H
75 07		JNZ     SHORT LOC_1D8C
B8 91 00 00 C0		MOV     EAX, 0C0000091H
C9		LEAVE
C3		RETN
A9 10 08 00 00		TEST    EAX, 810H
75 07		JNZ     SHORT LOC_1D9A
B8 93 00 00 C0		MOV     EAX, 0C0000093H
C9		LEAVE
C3		RETN
A9 20 10 00 00		TEST    EAX, 1020H
75 0E		JNZ     SHORT LOC_1DAF
B8 8F 00 00 C0		MOV     EAX, 0C000008FH
C9		LEAVE
C3		RETN
B8 90 00 00 C0		MOV     EAX, 0C0000090H
C9		LEAVE
C3		RETN
8B 45 08		MOV     EAX, [EBP+ARG_0]
C9		LEAVE
C3		RETN
