F3 0F 1E FB		ENDBR32; _INIT
53		PUSH    EBX
83 EC 08		SUB     ESP, 8
E8 93 00 00 00		CALL    __X86_GET_PC_THUNK_BX
81 C3 CB 2F 00 00		ADD     EBX, (OFFSET _GLOBAL_OFFSET_TABLE_ - $)
8B 83 1C 00 00 00		MOV     EAX, DS:(__GMON_START___PTR - 3FD8H)[EBX]
85 C0		TEST    EAX, EAX
74 02		JZ      SHORT LOC_101F
FF D0		CALL    EAX
83 C4 08		ADD     ESP, 8
5B		POP     EBX
C3		RETN
FF B3 04 00 00 00		PUSH    DWORD PTR [EBX+4]
FF A3 08 00 00 00		JMP     DWORD PTR [EBX+8]
FF 25 E4 3F 00 00		JMP     DS:__LIBC_START_MAIN_PTR; PIC MODE
00 00 00 00		EXTRN __LIBC_START_MAIN:NEAR
FF 25 E8 3F 00 00		JMP     DS:PUTS_PTR; PIC MODE
00 00 00 00		EXTRN PUTS:NEAR
FF 25 F0 3F 00 00		JMP     DS:__CXA_FINALIZE_PTR; PIC MODE
00 00 00 00		EXTRN __CXA_FINALIZE:NEAR ; WEAK
F3 0F 1E FB		ENDBR32
31 ED		XOR     EBP, EBP
5E		POP     ESI
89 E1		MOV     ECX, ESP
83 E4 F0		AND     ESP, 0FFFFFFF0H
50		PUSH    EAX
54		PUSH    ESP; STACK_END
52		PUSH    EDX; RTLD_FINI
E8 18 00 00 00		CALL    SUB_109C
81 C3 54 2F 00 00		ADD     EBX, (OFFSET _GLOBAL_OFFSET_TABLE_ - $)
6A 00		PUSH    0; FINI
6A 00		PUSH    0; INIT
51		PUSH    ECX; UBP_AV
56		PUSH    ESI; ARGC
FF B3 20 00 00 00		PUSH    DS:(MAIN_PTR - 3FD8H)[EBX]; MAIN
E8 A5 FF FF FF		CALL    ___LIBC_START_MAIN
F4		HLT
8B 1C 24		MOV     EBX, [ESP+0]
C3		RETN
8B 1C 24		MOV     EBX, [ESP+0]
C3		RETN
E8 E4 00 00 00		CALL    __X86_GET_PC_THUNK_DX
81 C2 23 2F 00 00		ADD     EDX, (OFFSET _GLOBAL_OFFSET_TABLE_ - $)
8D 8A 30 00 00 00		LEA     ECX, (__BSS_START - 3FD8H)[EDX]
8D 82 30 00 00 00		LEA     EAX, (__BSS_START - 3FD8H)[EDX]
39 C8		CMP     EAX, ECX
74 1D		JZ      SHORT LOCRET_10E8
8B 82 14 00 00 00		MOV     EAX, DS:(_ITM_DEREGISTERTMCLONETABLE_PTR - 3FD8H)[EDX]
85 C0		TEST    EAX, EAX
74 13		JZ      SHORT LOCRET_10E8
55		PUSH    EBP
89 E5		MOV     EBP, ESP
83 EC 14		SUB     ESP, 14H
51		PUSH    ECX
FF D0		CALL    EAX
83 C4 10		ADD     ESP, 10H
C9		LEAVE
C3		RETN
C3		RETN
E8 A4 00 00 00		CALL    __X86_GET_PC_THUNK_DX
81 C2 E3 2E 00 00		ADD     EDX, (OFFSET _GLOBAL_OFFSET_TABLE_ - $)
55		PUSH    EBP
89 E5		MOV     EBP, ESP
53		PUSH    EBX
8D 8A 30 00 00 00		LEA     ECX, (__BSS_START - 3FD8H)[EDX]
8D 82 30 00 00 00		LEA     EAX, (__BSS_START - 3FD8H)[EDX]
83 EC 04		SUB     ESP, 4
29 C8		SUB     EAX, ECX
89 C3		MOV     EBX, EAX
C1 E8 1F		SHR     EAX, 1FH
C1 FB 02		SAR     EBX, 2
01 D8		ADD     EAX, EBX
D1 F8		SAR     EAX, 1
74 14		JZ      SHORT LOC_1132
8B 92 24 00 00 00		MOV     EDX, DS:(_ITM_REGISTERTMCLONETABLE_PTR - 3FD8H)[EDX]
85 D2		TEST    EDX, EDX
74 0A		JZ      SHORT LOC_1132
83 EC 08		SUB     ESP, 8
50		PUSH    EAX
51		PUSH    ECX
FF D2		CALL    EDX
83 C4 10		ADD     ESP, 10H
8B 5D FC		MOV     EBX, [EBP-4]
C9		LEAVE
C3		RETN
F3 0F 1E FB		ENDBR32
55		PUSH    EBP
89 E5		MOV     EBP, ESP
53		PUSH    EBX
E8 53 FF FF FF		CALL    __X86_GET_PC_THUNK_BX
81 C3 8B 2E 00 00		ADD     EBX, (OFFSET _GLOBAL_OFFSET_TABLE_ - $)
83 EC 04		SUB     ESP, 4
80 BB 30 00 00 00 00		CMP     DS:(__BSS_START - 3FD8H)[EBX], 0
75 27		JNZ     SHORT LOC_1186
8B 83 18 00 00 00		MOV     EAX, DS:(__CXA_FINALIZE_PTR - 3FD8H)[EBX]
85 C0		TEST    EAX, EAX
74 11		JZ      SHORT LOC_117A
83 EC 0C		SUB     ESP, 0CH
FF B3 2C 00 00 00		PUSH    (__DSO_HANDLE - 3FD8H)[EBX]; VOID *
E8 E9 FE FF FF		CALL    ___CXA_FINALIZE
83 C4 10		ADD     ESP, 10H
E8 31 FF FF FF		CALL    DEREGISTER_TM_CLONES
C6 83 30 00 00 00 01		MOV     DS:(__BSS_START - 3FD8H)[EBX], 1
8B 5D FC		MOV     EBX, [EBP+VAR_4]
C9		LEAVE
C3		RETN
F3 0F 1E FB		ENDBR32
E9 57 FF FF FF		JMP     REGISTER_TM_CLONES
E8 A4 00 00 00		CALL    __X86_GET_PC_THUNK_DX
8B 14 24		MOV     EDX, [ESP+0]
C3		RETN
8D 4C 24 04		LEA     ECX, [ESP+4]
83 E4 F0		AND     ESP, 0FFFFFFF0H
FF 71 FC		PUSH    DWORD PTR [ECX-4]
55		PUSH    EBP
89 E5		MOV     EBP, ESP
53		PUSH    EBX
51		PUSH    ECX
E8 28 00 00 00		CALL    __X86_GET_PC_THUNK_AX
05 27 2E 00 00		ADD     EAX, (OFFSET _GLOBAL_OFFSET_TABLE_ - $)
83 EC 0C		SUB     ESP, 0CH
8D 90 30 E0 FF FF		LEA     EDX, (ACIAOGHIDRA - 3FD8H)[EAX]; "CIAO GHIDRA"
52		PUSH    EDX; S
89 C3		MOV     EBX, EAX
E8 89 FE FF FF		CALL    _PUTS
83 C4 10		ADD     ESP, 10H
B8 00 00 00 00		MOV     EAX, 0
8D 65 F8		LEA     ESP, [EBP-8]
59		POP     ECX
5B		POP     EBX
5D		POP     EBP
8D 61 FC		LEA     ESP, [ECX-4]
C3		RETN
8B 04 24		MOV     EAX, [ESP+0]
C3		RETN
F3 0F 1E FB		ENDBR32; _FINI
53		PUSH    EBX
83 EC 08		SUB     ESP, 8
E8 B3 FE FF FF		CALL    __X86_GET_PC_THUNK_BX
81 C3 EB 2D 00 00		ADD     EBX, (OFFSET _GLOBAL_OFFSET_TABLE_ - $)
83 C4 08		ADD     ESP, 8
5B		POP     EBX
C3		RETN
00 00 00 00		EXTRN __LIBC_START_MAIN:NEAR
00 00 00 00		EXTRN __CXA_FINALIZE:NEAR ; WEAK
00 00 00 00		EXTRN PUTS:NEAR
