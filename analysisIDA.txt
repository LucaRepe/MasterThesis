C3		RETN
83 EC 1C		SUB     ESP, 1CH
31 C0		XOR     EAX, EAX
66 81 3D 00 00 40 00 4D 5A		CMP     WORD PTR DS:400000H, 5A4DH
C7 05 54 60 40 00 01 00 00 00		MOV     DS:_MINGW_INITLTSDROT_FORCE, 1
C7 05 50 60 40 00 01 00 00 00		MOV     DS:_MINGW_INITLTSDYN_FORCE, 1
C7 05 4C 60 40 00 01 00 00 00		MOV     DS:_MINGW_INITLTSSUO_FORCE, 1
C7 05 44 60 40 00 01 00 00 00		MOV     DS:_MINGW_INITCHARMAX, 1
75 18		JNZ     SHORT LOC_401060
8B 15 3C 00 40 00		MOV     EDX, DS:40003CH
81 BA 00 00 40 00 50 45 00 00		CMP     DWORD PTR [EDX+400000H], 4550H
8D 8A 00 00 40 00		LEA     ECX, [EDX+400000H]
74 60		JZ      SHORT LOC_4010C0
A3 0C 60 40 00		MOV     DS:_MANAGEDAPP, EAX
A1 60 60 40 00		MOV     EAX, DS:_MINGW_APP_TYPE
85 C0		TEST    EAX, EAX
75 42		JNZ     SHORT LOC_4010B0
C7 04 24 01 00 00 00		MOV     [ESP+1CH+TYPE], 1; TYPE
E8 22 15 00 00		CALL    ___SET_APP_TYPE
E8 25 15 00 00		CALL    ___P__FMODE
8B 15 74 60 40 00		MOV     EDX, DS:__FMODE
89 10		MOV     [EAX], EDX
E8 20 15 00 00		CALL    ___P__COMMODE
8B 15 5C 60 40 00		MOV     EDX, DS:__COMMODE
89 10		MOV     [EAX], EDX
E8 37 06 00 00		CALL    __SETARGV
83 3D 1C 30 40 00 01		CMP     __MINGW_INSTALL_DEBUG_MATHERR, 1
74 4E		JZ      SHORT LOC_4010F0
31 C0		XOR     EAX, EAX
83 C4 1C		ADD     ESP, 1CH
C3		RETN
C7 04 24 02 00 00 00		MOV     [ESP+1CH+TYPE], 2; TYPE
E8 E0 14 00 00		CALL    ___SET_APP_TYPE
EB BC		JMP     SHORT LOC_40107A
0F B7 51 18		MOVZX   EDX, WORD PTR [ECX+18H]
66 81 FA 0B 01		CMP     DX, 10BH
74 3D		JZ      SHORT LOC_401108
66 81 FA 0B 02		CMP     DX, 20BH
75 8E		JNZ     SHORT LOC_401060
83 B9 84 00 00 00 0E		CMP     DWORD PTR [ECX+84H], 0EH
76 85		JBE     SHORT LOC_401060
8B 91 F8 00 00 00		MOV     EDX, [ECX+0F8H]
31 C0		XOR     EAX, EAX
85 D2		TEST    EDX, EDX
0F 95 C0		SETNZ   AL
E9 73 FF FF FF		JMP     LOC_401060
C7 04 24 E0 17 40 00		MOV     [ESP+1CH+TYPE], OFFSET __MATHERR; F
E8 14 0C 00 00		CALL    ___MINGW_SETUSERMATHERR
31 C0		XOR     EAX, EAX
83 C4 1C		ADD     ESP, 1CH
C3		RETN
83 79 74 0E		CMP     DWORD PTR [ECX+74H], 0EH
0F 86 4E FF FF FF		JBE     LOC_401060
8B 89 E8 00 00 00		MOV     ECX, [ECX+0E8H]
31 C0		XOR     EAX, EAX
85 C9		TEST    ECX, ECX
0F 95 C0		SETNZ   AL
E9 3C FF FF FF		JMP     LOC_401060
83 EC 2C		SUB     ESP, 2CH
A1 48 60 40 00		MOV     EAX, DS:__NEWMODE
C7 44 24 10 04 60 40 00		MOV     [ESP+2CH+VAR_1C], OFFSET _STARTINFO
A3 04 60 40 00		MOV     DS:_STARTINFO.NEWMODE, EAX
A1 40 60 40 00		MOV     EAX, DS:__DOWILDCARD
C7 44 24 08 14 60 40 00		MOV     [ESP+2CH+VAR_24], OFFSET _ENVP
89 44 24 0C		MOV     [ESP+2CH+VAR_20], EAX
C7 44 24 04 18 60 40 00		MOV     [ESP+2CH+VAR_28], OFFSET _ARGV
C7 04 24 1C 60 40 00		MOV     [ESP+2CH+VAR_2C], OFFSET _ARGC
E8 52 14 00 00		CALL    ___GETMAINARGS
83 C4 2C		ADD     ESP, 2CH
C3		RETN
8D 4C 24 04		LEA     ECX, [ESP+ARG_0]
83 E4 F0		AND     ESP, 0FFFFFFF0H
31 C0		XOR     EAX, EAX
FF 71 FC		PUSH    DWORD PTR [ECX-4]
55		PUSH    EBP
89 E5		MOV     EBP, ESP
57		PUSH    EDI
56		PUSH    ESI
8D 55 A4		LEA     EDX, [EBP-5CH]
53		PUSH    EBX
89 D7		MOV     EDI, EDX
51		PUSH    ECX
B9 11 00 00 00		MOV     ECX, 11H
83 EC 78		SUB     ESP, 78H
8B 35 60 60 40 00		MOV     ESI, DS:_MINGW_APP_TYPE
F3 AB		REP STOSD
85 F6		TEST    ESI, ESI
0F 85 A0 02 00 00		JNZ     LOC_401440
64 A1 18 00 00 00		MOV     EAX, LARGE FS:18H
8B 35 14 71 40 00		MOV     ESI, DS:__IMP__SLEEP@4; SLEEP(X)
8B 78 04		MOV     EDI, [EAX+4]
31 DB		XOR     EBX, EBX
EB 19		JMP     SHORT LOC_4011CC
39 C7		CMP     FIBERID, LOCK_FREE
0F 84 18 02 00 00		JZ      LOC_4013D8
C7 04 24 E8 03 00 00		MOV     [ESP+90H+DWMILLISECONDS], 3E8H; DWMILLISECONDS
FF D6		CALL    ESI ; SLEEP(X); SLEEP(X)
83 EC 04		SUB     ESP, 4
89 D8		MOV     EAX, EBX
F0 0F B1 3D BC 60 40 00		LOCK CMPXCHG DS:___NATIVE_STARTUP_LOCK, FIBERID
85 C0		TEST    LOCK_FREE, LOCK_FREE
75 DE		JNZ     SHORT LOC_4011B8
A1 C0 60 40 00		MOV     LOCK_FREE, DS:___NATIVE_STARTUP_STATE
31 DB		XOR     EBX, EBX
83 F8 01		CMP     EAX, 1
0F 84 01 02 00 00		JZ      LOC_4013EB
A1 C0 60 40 00		MOV     EAX, DS:___NATIVE_STARTUP_STATE
85 C0		TEST    EAX, EAX
0F 84 79 02 00 00		JZ      LOC_401470
C7 05 08 60 40 00 01 00 00 00		MOV     DS:_HAS_CCTOR, 1
A1 C0 60 40 00		MOV     EAX, DS:___NATIVE_STARTUP_STATE
83 F8 01		CMP     EAX, 1
0F 84 F6 01 00 00		JZ      LOC_401405
85 DB		TEST    NESTED, NESTED
0F 84 14 02 00 00		JZ      LOC_40142B
A1 50 40 40 00		MOV     EAX, DS:___DYN_TLS_INIT_CALLBACK
85 C0		TEST    EAX, EAX
74 1C		JZ      SHORT LOC_40123C
C7 44 24 08 00 00 00 00		MOV     [ESP+90H+LPRESERVED], 0; LPRESERVED
C7 44 24 04 02 00 00 00		MOV     [ESP+90H+DWREASON], 2; DWREASON
C7 04 24 00 00 00 00		MOV     [ESP+90H+DWMILLISECONDS], 0; HDLLHANDLE
FF D0		CALL    EAX ; __DYN_TLS_INIT(X,X,X); __DYN_TLS_INIT(X,X,X)
83 EC 0C		SUB     ESP, 0CH
E8 EF 07 00 00		CALL    __PEI386_RUNTIME_RELOCATOR
C7 04 24 20 1D 40 00		MOV     [ESP+90H+DWMILLISECONDS], OFFSET __GNU_EXCEPTION_HANDLER@4; LPTOPLEVELEXCEPTIONFILTER
FF 15 10 71 40 00		CALL    DS:__IMP__SETUNHANDLEDEXCEPTIONFILTER@4; SETUNHANDLEDEXCEPTIONFILTER(X)
83 EC 04		SUB     ESP, 4
A3 78 60 40 00		MOV     DS:___MINGW_OLDEXCPT_HANDLER, EAX
C7 04 24 00 10 40 00		MOV     [ESP+90H+DWMILLISECONDS], OFFSET ___MINGW_INVALIDPARAMETERHANDLER; NEW_HANDLER
E8 8E 13 00 00		CALL    __SET_INVALID_PARAMETER_HANDLER
E8 F9 05 00 00		CALL    _FPRESET
C7 05 B8 60 40 00 00 00 40 00		MOV     DS:___MINGW_WINMAIN_HINSTANCE, 400000H
E8 3E 13 00 00		CALL    ___P__ACMDLN
31 C9		XOR     ECX, ECX
8B 00		MOV     EAX, [EAX]
85 C0		TEST    LPSZCOMMANDLINE, LPSZCOMMANDLINE
75 13		JNZ     SHORT LOC_401291
EB 4D		JMP     SHORT LOC_4012CD
84 D2		TEST    DL, DL
74 44		JZ      SHORT LOC_4012C8
83 E1 01		AND     INDOUBLEQUOTE, 1
74 27		JZ      SHORT LOC_4012B0
B9 01 00 00 00		MOV     ECX, 1
83 C0 01		ADD     LPSZCOMMANDLINE, 1
0F B6 10		MOVZX   EDX, BYTE PTR [LPSZCOMMANDLINE]
80 FA 20		CMP     DL, 20H ; ' '
7E E7		JLE     SHORT LOC_401280
89 CB		MOV     EBX, INDOUBLEQUOTE
83 F3 01		XOR     EBX, 1
80 FA 22		CMP     DL, 22H ; '"'
0F 44 CB		CMOVZ   INDOUBLEQUOTE, EBX
EB E8		JMP     SHORT LOC_40128E
84 D2		TEST    DL, DL
74 14		JZ      SHORT LOC_4012C8
8D 74 26 00		LEA     ESI, [ESI+0]
0F B6 50 01		MOVZX   EDX, BYTE PTR [LPSZCOMMANDLINE+1]
83 C0 01		ADD     LPSZCOMMANDLINE, 1
84 D2		TEST    DL, DL
74 05		JZ      SHORT LOC_4012C8
80 FA 20		CMP     DL, 20H ; ' '
7E F0		JLE     SHORT LOC_4012B8
A3 B4 60 40 00		MOV     DS:___MINGW_WINMAIN_LPCMDLINE, LPSZCOMMANDLINE
8B 1D 60 60 40 00		MOV     EBX, DS:_MINGW_APP_TYPE
85 DB		TEST    EBX, EBX
74 14		JZ      SHORT LOC_4012EB
B8 0A 00 00 00		MOV     LPSZCOMMANDLINE, 0AH
F6 45 D0 01		TEST    BYTE PTR [EBP-30H], 1
0F 85 E2 00 00 00		JNZ     LOC_4013C8
A3 00 30 40 00		MOV     ___MINGW_WINMAIN_NSHOWCMD, EAX
8B 1D 1C 60 40 00		MOV     EBX, DS:_ARGC
8D 34 9D 04 00 00 00		LEA     ESI, DS:4[EBX*4]
89 34 24		MOV     [ESP+90H+DWMILLISECONDS], ESI; SIZE
E8 3C 12 00 00		CALL    _MALLOC
8B 15 18 60 40 00		MOV     EDX, DS:_ARGV
89 45 90		MOV     [EBP-70H], EAX
85 DB		TEST    EBX, EBX
0F 8E 82 01 00 00		JLE     LOC_401493
89 C3		MOV     EBX, EAX
8D 46 FC		LEA     EAX, [ESI-4]
89 D7		MOV     FIBERID, EDX
89 45 8C		MOV     [EBP-74H], EAX
01 D0		ADD     EAX, EDX
89 45 94		MOV     [EBP-6CH], EAX
8B 07		MOV     EAX, [EDI]
83 C3 04		ADD     EBX, 4
83 C7 04		ADD     EDI, 4
89 04 24		MOV     [ESP+90H+DWMILLISECONDS], EAX; STR
E8 EC 11 00 00		CALL    _STRLEN
8D 70 01		LEA     ESI, [EAX+1]
89 34 24		MOV     [ESP+90H+DWMILLISECONDS], ESI; SIZE
E8 01 12 00 00		CALL    _MALLOC
89 43 FC		MOV     [EBX-4], EAX
8B 4F FC		MOV     ECX, [EDI-4]
89 74 24 08		MOV     [ESP+90H+LPRESERVED], ESI; SIZE
89 4C 24 04		MOV     [ESP+90H+DWREASON], ECX; SRC
89 04 24		MOV     [ESP+90H+DWMILLISECONDS], EAX; VOID *
E8 E3 11 00 00		CALL    _MEMCPY
39 7D 94		CMP     [EBP-6CH], EDI
75 CA		JNZ     SHORT LOC_401320
8B 45 8C		MOV     EAX, [EBP-74H]
03 45 90		ADD     EAX, [EBP-70H]
C7 00 00 00 00 00		MOV     DWORD PTR [EAX], 0
8B 45 90		MOV     EAX, [EBP-70H]
A3 18 60 40 00		MOV     DS:_ARGV, EAX
E8 31 03 00 00		CALL    ___MAIN
A1 14 60 40 00		MOV     EAX, DS:_ENVP
8B 15 2C 71 40 00		MOV     EDX, DS:__IMP____INITENV
89 02		MOV     [EDX], EAX
89 44 24 08		MOV     [ESP+90H+LPRESERVED], EAX; ENVP
A1 18 60 40 00		MOV     EAX, DS:_ARGV
89 44 24 04		MOV     [ESP+90H+DWREASON], EAX; ARGV
A1 1C 60 40 00		MOV     EAX, DS:_ARGC
89 04 24		MOV     [ESP+90H+DWMILLISECONDS], EAX; ARGC
E8 3A 02 00 00		CALL    _MAIN
8B 0D 0C 60 40 00		MOV     ECX, DS:_MANAGEDAPP
A3 10 60 40 00		MOV     DS:_MAINRET, EAX
85 C9		TEST    ECX, ECX
0F 84 F2 00 00 00		JZ      LOC_40149B
8B 15 08 60 40 00		MOV     EDX, DS:_HAS_CCTOR
85 D2		TEST    EDX, EDX
0F 84 A1 00 00 00		JZ      LOC_401458
8D 65 F0		LEA     ESP, [EBP-10H]
59		POP     ECX
5B		POP     EBX
5E		POP     ESI
5F		POP     EDI
5D		POP     EBP
8D 61 FC		LEA     ESP, [ECX-4]
C3		RETN
0F B7 45 D4		MOVZX   EAX, WORD PTR [EBP-2CH]
E9 15 FF FF FF		JMP     LOC_4012E6
A1 C0 60 40 00		MOV     LOCK_FREE, DS:___NATIVE_STARTUP_STATE
BB 01 00 00 00		MOV     EBX, 1
83 F8 01		CMP     EAX, 1
0F 85 FF FD FF FF		JNZ     LOC_4011EA
C7 04 24 1F 00 00 00		MOV     [ESP+90H+DWMILLISECONDS], 1FH
E8 95 11 00 00		CALL    __AMSG_EXIT
A1 C0 60 40 00		MOV     EAX, DS:___NATIVE_STARTUP_STATE
83 F8 01		CMP     EAX, 1
0F 85 0A FE FF FF		JNZ     LOC_40120F
C7 44 24 04 08 80 40 00		MOV     [ESP+90H+DWREASON], OFFSET ___XC_Z; LAST
C7 04 24 00 80 40 00		MOV     [ESP+90H+DWMILLISECONDS], OFFSET ___CRT_XC_START__; FIRST
E8 63 11 00 00		CALL    __INITTERM
C7 05 C0 60 40 00 02 00 00 00		MOV     DS:___NATIVE_STARTUP_STATE, 2
85 DB		TEST    NESTED, NESTED
0F 85 EC FD FF FF		JNZ     LOC_401217
87 1D BC 60 40 00		XCHG    NESTED, DS:___NATIVE_STARTUP_LOCK
E9 E1 FD FF FF		JMP     LOC_401217
89 14 24		MOV     [ESP+90H+DWMILLISECONDS], EDX; LPSTARTUPINFO
FF 15 00 71 40 00		CALL    DS:__IMP__GETSTARTUPINFOA@4; GETSTARTUPINFOA(X)
83 EC 04		SUB     ESP, 4
E9 4F FD FF FF		JMP     LOC_4011A0
E8 27 11 00 00		CALL    __CEXIT
A1 10 60 40 00		MOV     EAX, DS:_MAINRET
8D 65 F0		LEA     ESP, [EBP-10H]
59		POP     ECX
5B		POP     EBX
5E		POP     ESI
5F		POP     EDI
5D		POP     EBP
8D 61 FC		LEA     ESP, [ECX-4]
C3		RETN
C7 44 24 04 18 80 40 00		MOV     [ESP+90H+DWREASON], OFFSET ___XI_Z; LAST
C7 04 24 0C 80 40 00		MOV     [ESP+90H+DWMILLISECONDS], OFFSET ___CRT_XC_END__; FIRST
C7 05 C0 60 40 00 01 00 00 00		MOV     DS:___NATIVE_STARTUP_STATE, 1
E8 EE 10 00 00		CALL    __INITTERM
E9 6E FD FF FF		JMP     LOC_401201
8B 45 90		MOV     EAX, [EBP-70H]
E9 C1 FE FF FF		JMP     LOC_40135C
89 04 24		MOV     [ESP+90H+DWMILLISECONDS], EAX; CODE
E8 B9 10 00 00		CALL    _EXIT
C7 05 60 60 40 00 01 00 00 00		MOV     DS:_MINGW_APP_TYPE, 1
E9 B1 FC FF FF		JMP     ___TMAINCRTSTARTUP
8D 4C 24 04		LEA     ECX, [ESP+ARG_0]
C7 05 60 60 40 00 00 00 00 00		MOV     DS:_MINGW_APP_TYPE, 0
E9 A1 FC FF FF		JMP     ___TMAINCRTSTARTUP
8D 4C 24 04		LEA     ECX, [ESP+ARG_0]
83 EC 1C		SUB     ESP, 1CH
8B 44 24 20		MOV     EAX, [ESP+1CH+FUNC]
89 04 24		MOV     [ESP+1CH+FUNC], EAX; FUNC
E8 95 10 00 00		CALL    __ONEXIT
85 C0		TEST    EAX, EAX
0F 94 C0		SETZ    AL
83 C4 1C		ADD     ESP, 1CH
0F B6 C0		MOVZX   EAX, AL
F7 D8		NEG     EAX
C3		RETN
55		PUSH    EBP
89 E5		MOV     EBP, ESP
57		PUSH    EDI
56		PUSH    ESI
53		PUSH    EBX
83 EC 1C		SUB     ESP, 1CH
C7 04 24 00 40 40 00		MOV     DWORD PTR [ESP], OFFSET LIBFILENAME; "LIBGCC_S_DW2-1.DLL"
FF 15 F8 70 40 00		CALL    DS:__IMP__GETMODULEHANDLEA@4; GETMODULEHANDLEA(X)
83 EC 04		SUB     ESP, 4
85 C0		TEST    EAX, EAX
74 73		JZ      SHORT LOC_401580
89 C3		MOV     EBX, EAX
C7 04 24 00 40 40 00		MOV     DWORD PTR [ESP], OFFSET LIBFILENAME; "LIBGCC_S_DW2-1.DLL"
FF 15 0C 71 40 00		CALL    DS:__IMP__LOADLIBRARYA@4; LOADLIBRARYA(X)
8B 3D FC 70 40 00		MOV     EDI, DS:__IMP__GETPROCADDRESS@8; GETPROCADDRESS(X,X)
83 EC 04		SUB     ESP, 4
A3 20 60 40 00		MOV     DS:_HMOD_LIBGCC, EAX
C7 44 24 04 13 40 40 00		MOV     DWORD PTR [ESP+4], OFFSET PROCNAME; "__REGISTER_FRAME_INFO"
89 1C 24		MOV     [ESP], EBX; HMODULE
FF D7		CALL    EDI ; GETPROCADDRESS(X,X); GETPROCADDRESS(X,X)
83 EC 08		SUB     ESP, 8
89 C6		MOV     ESI, EAX
C7 44 24 04 29 40 40 00		MOV     DWORD PTR [ESP+4], OFFSET ADEREGISTERFRAM; "__DEREGISTER_FRAME_INFO"
89 1C 24		MOV     [ESP], EBX; HMODULE
FF D7		CALL    EDI ; GETPROCADDRESS(X,X); GETPROCADDRESS(X,X)
A3 04 30 40 00		MOV     _DEREGISTER_FRAME_FN, EAX
83 EC 08		SUB     ESP, 8
85 F6		TEST    ESI, ESI
74 11		JZ      SHORT LOC_401566
C7 44 24 04 24 60 40 00		MOV     DWORD PTR [ESP+4], OFFSET _OBJ
C7 04 24 00 50 40 00		MOV     DWORD PTR [ESP], OFFSET ___EH_FRAME_BEGIN__
FF D6		CALL    ESI
C7 04 24 A0 15 40 00		MOV     DWORD PTR [ESP], OFFSET ___GCC_DEREGISTER_FRAME; FUNC
E8 5E FF FF FF		CALL    _ATEXIT
8D 65 F4		LEA     ESP, [EBP-0CH]
5B		POP     EBX
5E		POP     ESI
5F		POP     EDI
5D		POP     EBP
C3		RETN
C7 05 04 30 40 00 00 00 00 00		MOV     _DEREGISTER_FRAME_FN, 0
BE 00 00 00 00		MOV     ESI, 0
EB C0		JMP     SHORT LOC_401551
55		PUSH    EBP
89 E5		MOV     EBP, ESP
83 EC 18		SUB     ESP, 18H
A1 04 30 40 00		MOV     EAX, _DEREGISTER_FRAME_FN
85 C0		TEST    EAX, EAX
74 09		JZ      SHORT LOC_4015B8
C7 04 24 00 50 40 00		MOV     DWORD PTR [ESP], OFFSET ___EH_FRAME_BEGIN__
FF D0		CALL    EAX ; _DEREGISTER_FRAME_FN
A1 20 60 40 00		MOV     EAX, DS:_HMOD_LIBGCC
85 C0		TEST    EAX, EAX
74 0C		JZ      SHORT LOCRET_4015CD
89 04 24		MOV     [ESP], EAX; HLIBMODULE
FF 15 F0 70 40 00		CALL    DS:__IMP__FREELIBRARY@4; FREELIBRARY(X)
83 EC 04		SUB     ESP, 4
C9		LEAVE
C3		RETN
55		PUSH    EBP
89 E5		MOV     EBP, ESP
83 E4 F0		AND     ESP, 0FFFFFFF0H
83 EC 10		SUB     ESP, 10H
E8 C2 00 00 00		CALL    ___MAIN
C7 04 24 44 40 40 00		MOV     DWORD PTR [ESP], OFFSET BUFFER; "CIAO GHIDRA"
E8 42 0F 00 00		CALL    _PUTS
B8 00 00 00 00		MOV     EAX, 0
C9		LEAVE
C3		RETN
A1 08 30 40 00		MOV     EAX, _P_62152
8B 00		MOV     EAX, [EAX]
85 C0		TEST    EAX, EAX
74 25		JZ      SHORT LOCRET_401630
83 EC 0C		SUB     ESP, 0CH
66 90		XCHG    AX, AX
FF D0		CALL    EAX
A1 08 30 40 00		MOV     EAX, _P_62152
8D 50 04		LEA     EDX, [EAX+4]
8B 40 04		MOV     EAX, [EAX+4]
89 15 08 30 40 00		MOV     _P_62152, EDX
85 C0		TEST    EAX, EAX
75 E9		JNZ     SHORT LOC_401610
83 C4 0C		ADD     ESP, 0CH
C3		RETN
C3		RETN
53		PUSH    EBX
83 EC 18		SUB     ESP, 18H
8B 1D 10 26 40 00		MOV     EBX, DS:___CTOR_LIST__
83 FB FF		CMP     NPTRS, 0FFFFFFFFH
74 29		JZ      SHORT LOC_401678
85 DB		TEST    I, I
74 11		JZ      SHORT LOC_401664
8D 74 26 00		LEA     ESI, [ESI+0]
90		NOP
FF 14 9D 10 26 40 00		CALL    DS:___CTOR_LIST__[I*4]
83 EB 01		SUB     EBX, 1
75 F4		JNZ     SHORT LOC_401658
C7 04 24 00 16 40 00		MOV     [ESP+1CH+FUNC], OFFSET ___DO_GLOBAL_DTORS; FUNC
E8 60 FE FF FF		CALL    _ATEXIT
83 C4 18		ADD     ESP, 18H
5B		POP     I
C3		RETN
31 C0		XOR     EAX, EAX
8D B6 00 00 00 00		LEA     ESI, [ESI+0]
89 C3		MOV     EBX, NPTRS
83 C0 01		ADD     NPTRS, 1
8B 14 85 10 26 40 00		MOV     EDX, DS:___CTOR_LIST__[EAX*4]
85 D2		TEST    EDX, EDX
75 F0		JNZ     SHORT LOC_401680
EB BD		JMP     SHORT LOC_40164F
A1 3C 60 40 00		MOV     EAX, DS:_INITIALIZED
85 C0		TEST    EAX, EAX
74 07		JZ      SHORT LOC_4016B0
C3		RETN
C7 05 3C 60 40 00 01 00 00 00		MOV     DS:_INITIALIZED, 1
EB 84		JMP     SHORT ___DO_GLOBAL_CTORS
53		PUSH    EBX
FF 25 30 71 40 00		JMP     DS:__IMP____LCONV_INIT
31 C0		XOR     EAX, EAX
C3		RETN
83 EC 1C		SUB     ESP, 1CH
8B 44 24 24		MOV     EAX, [ESP+1CH+DWREASON]
83 F8 03		CMP     EAX, 3
74 14		JZ      SHORT LOC_401700
85 C0		TEST    EAX, EAX
74 10		JZ      SHORT LOC_401700
B8 01 00 00 00		MOV     EAX, 1
83 C4 1C		ADD     ESP, 1CH
C2 0C 00		RETN    0CH
89 44 24 04		MOV     [ESP+1CH+REASON], EAX; REASON
8B 54 24 28		MOV     EDX, [ESP+1CH+LPRESERVED]
8B 44 24 20		MOV     EAX, [ESP+1CH+HDLLHANDLE]
89 54 24 08		MOV     [ESP+1CH+RESERVED], EDX; RESERVED
89 04 24		MOV     [ESP+1CH+VAR_1C], EAX; HDLLHANDLE
E8 38 09 00 00		CALL    ___MINGW_TLSCALLBACK
B8 01 00 00 00		MOV     EAX, 1
83 C4 1C		ADD     ESP, 1CH
C2 0C 00		RETN    0CH
56		PUSH    ESI
53		PUSH    EBX
83 EC 14		SUB     ESP, 14H
83 3D 18 30 40 00 02		CMP     __CRT_MT, 2
8B 44 24 24		MOV     EAX, [ESP+1CH+DWREASON]
74 0A		JZ      SHORT LOC_40174C
C7 05 18 30 40 00 02 00 00 00		MOV     __CRT_MT, 2
83 F8 02		CMP     EAX, 2
74 17		JZ      SHORT LOC_401768
83 F8 01		CMP     EAX, 1
74 4A		JZ      SHORT LOC_4017A0
83 C4 14		ADD     ESP, 14H
B8 01 00 00 00		MOV     EAX, 1
5B		POP     EBX
5E		POP     ESI
C2 0C 00		RETN    0CH
BB 30 80 40 00		MOV     EBX, OFFSET ___XD_Z
BE 30 80 40 00		MOV     ESI, OFFSET ___XD_Z
39 DE		CMP     ESI, EBX
74 E0		JZ      SHORT LOC_401756
8D B4 26 00 00 00 00		LEA     ESI, [ESI+0]
8D 76 00		LEA     ESI, [ESI+0]
8B 03		MOV     EAX, [EBX]
85 C0		TEST    EAX, EAX
74 02		JZ      SHORT LOC_401788
FF D0		CALL    EAX
83 C3 04		ADD     EBX, 4
39 DE		CMP     ESI, EBX
75 F1		JNZ     SHORT LOC_401780
83 C4 14		ADD     ESP, 14H
B8 01 00 00 00		MOV     EAX, 1
5B		POP     EBX
5E		POP     ESI
C2 0C 00		RETN    0CH
8B 44 24 28		MOV     EAX, [ESP+1CH+LPRESERVED]
C7 44 24 04 01 00 00 00		MOV     [ESP+1CH+REASON], 1; REASON
89 44 24 08		MOV     [ESP+1CH+RESERVED], EAX; RESERVED
8B 44 24 20		MOV     EAX, [ESP+1CH+HDLLHANDLE]
89 04 24		MOV     [ESP+1CH+VAR_1C], EAX; HDLLHANDLE
E8 94 08 00 00		CALL    ___MINGW_TLSCALLBACK
83 C4 14		ADD     ESP, 14H
B8 01 00 00 00		MOV     EAX, 1
5B		POP     EBX
5E		POP     ESI
C2 0C 00		RETN    0CH
31 C0		XOR     EAX, EAX
C3		RETN
56		PUSH    ESI
53		PUSH    EBX
BB 6C 40 40 00		MOV     EBX, OFFSET AUNKNOWNERROR; "UNKNOWN ERROR"
83 EC 54		SUB     ESP, 54H
8B 44 24 60		MOV     EAX, [ESP+5CH+PEXCEPT]
8B 08		MOV     ECX, [EAX]
8D 51 FF		LEA     EDX, [ECX-1]
83 FA 05		CMP     EDX, 5
77 07		JA      SHORT LOC_4017FF
8B 1C 95 88 41 40 00		MOV     EBX, DS:_CSWTCH_1[EDX*4]
DD 40 18		FLD     QWORD PTR [EAX+18H]
8B 70 04		MOV     ESI, [EAX+4]
DD 5C 24 48		FSTP    [ESP+5CH+VAR_14]
DD 40 10		FLD     QWORD PTR [EAX+10H]
DD 5C 24 40		FSTP    [ESP+5CH+VAR_1C]
DD 40 08		FLD     QWORD PTR [EAX+8]
C7 04 24 02 00 00 00		MOV     [ESP+5CH+INDEX], 2; INDEX
DD 5C 24 38		FSTP    [ESP+5CH+VAR_24]
E8 AD 0D 00 00		CALL    ___ACRT_IOB_FUNC
DD 44 24 48		FLD     [ESP+5CH+VAR_14]
89 74 24 0C		MOV     [ESP+5CH+VAR_50], ESI
89 5C 24 08		MOV     [ESP+5CH+VAR_54], TYPE
C7 44 24 04 7C 40 40 00		MOV     [ESP+5CH+FORMAT], OFFSET FORMAT; "_MATHERR(): %S IN %S(%G, %G)  (RETVAL=%"...
DD 5C 24 20		FSTP    [ESP+5CH+VAR_3C]
DD 44 24 40		FLD     [ESP+5CH+VAR_1C]
89 04 24		MOV     [ESP+5CH+INDEX], EAX; STREAM
DD 5C 24 18		FSTP    [ESP+5CH+VAR_44]
DD 44 24 38		FLD     [ESP+5CH+VAR_24]
DD 5C 24 10		FSTP    [ESP+5CH+VAR_4C]
E8 01 0D 00 00		CALL    _FPRINTF
83 C4 54		ADD     ESP, 54H
31 C0		XOR     EAX, EAX
5B		POP     TYPE
5E		POP     ESI
C3		RETN
DB E3		FNINIT
C3		RETN
53		PUSH    EBX
83 EC 18		SUB     ESP, 18H
C7 04 24 02 00 00 00		MOV     [ESP+1CH+INDEX], 2; INDEX
8D 5C 24 24		LEA     EBX, [ESP+1CH+ARGLIST]
E8 4C 0D 00 00		CALL    ___ACRT_IOB_FUNC
C7 44 24 08 1B 00 00 00		MOV     [ESP+1CH+ELEMENTCOUNT], 1BH; ELEMENTCOUNT
89 44 24 0C		MOV     [ESP+1CH+STREAM], EAX; STREAM
C7 44 24 04 01 00 00 00		MOV     [ESP+1CH+ELEMENTSIZE], 1; ELEMENTSIZE
C7 04 24 A0 41 40 00		MOV     [ESP+1CH+INDEX], OFFSET AMINGWW64RUNTIM; "MINGW-W64 RUNTIME FAILURE:\N"
E8 A0 0C 00 00		CALL    _FWRITE
C7 04 24 02 00 00 00		MOV     [ESP+1CH+INDEX], 2; INDEX
E8 20 0D 00 00		CALL    ___ACRT_IOB_FUNC
8B 54 24 20		MOV     EDX, [ESP+1CH+MSG]
89 5C 24 08		MOV     [ESP+1CH+ELEMENTCOUNT], ARGP; ARGLIST
89 04 24		MOV     [ESP+1CH+INDEX], EAX; STREAM
89 54 24 04		MOV     [ESP+1CH+ELEMENTSIZE], EDX; FORMAT
E8 48 0C 00 00		CALL    _VFPRINTF
E8 A3 0C 00 00		CALL    _ABORT
57		PUSH    EDI
56		PUSH    ESI
53		PUSH    EBX
89 C3		MOV     EBX, ADDR
83 EC 30		SUB     ESP, 30H
8B 35 68 60 40 00		MOV     ESI, DS:_MAXSECTIONS
85 F6		TEST    ESI, ESI
0F 8E 0A 01 00 00		JLE     LOC_4019F0
A1 6C 60 40 00		MOV     ADDR, DS:_THE_SECS
31 C9		XOR     ECX, ECX
83 C0 0C		ADD     EAX, 0CH
8B 10		MOV     EDX, [EAX]
39 DA		CMP     EDX, ADDR
77 0E		JA      SHORT LOC_401904
8B 78 04		MOV     EDI, [EAX+4]
03 57 08		ADD     EDX, [EDI+8]
39 D3		CMP     ADDR, EDX
0F 82 83 00 00 00		JB      LOC_401987
83 C1 01		ADD     I, 1
83 C0 14		ADD     EAX, 14H
39 F1		CMP     I, ESI
75 E2		JNZ     SHORT LOC_4018F0
89 1C 24		MOV     [ESP+3CH+P], ADDR; P
E8 4A 09 00 00		CALL    ___MINGW_GETSECTIONFORADDRESS
89 C7		MOV     EDI, EAX
85 C0		TEST    H, H
0F 84 F7 00 00 00		JZ      LOC_401A17
A1 6C 60 40 00		MOV     H, DS:_THE_SECS
8D 1C B6		LEA     ADDR, [ESI+ESI*4]
C1 E3 02		SHL     EBX, 2
01 D8		ADD     EAX, EBX
89 78 10		MOV     [EAX+10H], H
C7 00 00 00 00 00		MOV     DWORD PTR [EAX], 0
E8 35 0A 00 00		CALL    __GETPEIMAGEBASE
8B 15 6C 60 40 00		MOV     EDX, DS:_THE_SECS
03 47 0C		ADD     EAX, [H+0CH]
89 44 1A 0C		MOV     [EDX+EBX+0CH], EAX
8D 54 24 14		LEA     EDX, [ESP+3CH+B]
C7 44 24 08 1C 00 00 00		MOV     [ESP+3CH+DWLENGTH], 1CH; DWLENGTH
89 54 24 04		MOV     [ESP+3CH+LPBUFFER], EDX; LPBUFFER
89 04 24		MOV     [ESP+3CH+P], EAX; LPADDRESS
FF 15 20 71 40 00		CALL    DS:__IMP__VIRTUALQUERY@12; VIRTUALQUERY(X,X,X)
83 EC 0C		SUB     ESP, 0CH
85 C0		TEST    EAX, EAX
0F 84 8B 00 00 00		JZ      LOC_4019F7
8B 44 24 28		MOV     EAX, [ESP+3CH+B.PROTECT]
8D 50 C0		LEA     EDX, [EAX-40H]
83 E2 BF		AND     EDX, 0FFFFFFBFH
74 08		JZ      SHORT LOC_401980
8D 50 FC		LEA     EDX, [EAX-4]
83 E2 FB		AND     EDX, 0FFFFFFFBH
75 10		JNZ     SHORT LOC_401990
83 05 68 60 40 00 01		ADD     DS:_MAXSECTIONS, 1
83 C4 30		ADD     ESP, 30H
5B		POP     EBX
5E		POP     ESI
5F		POP     EDI
C3		RETN
83 F8 02		CMP     EAX, 2
BA 40 00 00 00		MOV     EDX, 40H ; '@'
B8 04 00 00 00		MOV     EAX, 4
8B 4C 24 20		MOV     ECX, [ESP+3CH+B.REGIONSIZE]
0F 45 C2		CMOVNZ  EAX, EDX
8B 54 24 14		MOV     EDX, [ESP+3CH+B.BASEADDRESS]
03 1D 6C 60 40 00		ADD     EBX, DS:_THE_SECS
89 4B 08		MOV     [EBX+8], ECX
89 53 04		MOV     [EBX+4], EDX
89 5C 24 0C		MOV     [ESP+3CH+LPFLOLDPROTECT], EBX; LPFLOLDPROTECT
89 44 24 08		MOV     [ESP+3CH+DWLENGTH], NEW_PROTECT; FLNEWPROTECT
89 4C 24 04		MOV     [ESP+3CH+LPBUFFER], ECX; DWSIZE
89 14 24		MOV     [ESP+3CH+P], EDX; LPADDRESS
FF 15 1C 71 40 00		CALL    DS:__IMP__VIRTUALPROTECT@16; VIRTUALPROTECT(X,X,X,X)
83 EC 10		SUB     ESP, 10H
85 C0		TEST    EAX, EAX
75 B0		JNZ     SHORT LOC_401980
FF 15 F4 70 40 00		CALL    DS:__IMP__GETLASTERROR@0; GETLASTERROR()
C7 04 24 10 42 40 00		MOV     [ESP+3CH+P], OFFSET MSG; "  VIRTUALPROTECT FAILED WITH CODE 0X%X"
89 44 24 04		MOV     [ESP+3CH+LPBUFFER], EAX
E8 8A FE FF FF		CALL    ___REPORT_ERROR
31 F6		XOR     ESI, ESI
E9 17 FF FF FF		JMP     LOC_40190E
A1 6C 60 40 00		MOV     EAX, DS:_THE_SECS
8B 44 18 0C		MOV     EAX, [EAX+EBX+0CH]
89 44 24 08		MOV     [ESP+3CH+DWLENGTH], EAX
8B 47 08		MOV     EAX, [H+8]
C7 04 24 DC 41 40 00		MOV     [ESP+3CH+P], OFFSET AVIRTUALQUERYFA; "  VIRTUALQUERY FAILED FOR %D BYTES AT A"...
89 44 24 04		MOV     [ESP+3CH+LPBUFFER], EAX
E8 59 FE FF FF		CALL    ___REPORT_ERROR
89 5C 24 04		MOV     [ESP+3CH+LPBUFFER], ADDR
C7 04 24 BC 41 40 00		MOV     [ESP+3CH+P], OFFSET AADDRESSPHASNOI; "ADDRESS %P HAS NO IMAGE-SECTION"
E8 49 FE FF FF		CALL    ___REPORT_ERROR
55		PUSH    EBP
89 E5		MOV     EBP, ESP
57		PUSH    EDI
56		PUSH    ESI
53		PUSH    EBX
83 EC 3C		SUB     ESP, 3CH
A1 64 60 40 00		MOV     EAX, DS:_WAS_INIT_63554
89 45 CC		MOV     [EBP+VAR_34], EAX
85 C0		TEST    EAX, EAX
74 0B		JZ      SHORT LOC_401A50
8D 65 F4		LEA     ESP, [EBP-0CH]
5B		POP     EBX
5E		POP     ESI
5F		POP     EDI
5D		POP     EBP
C3		RETN
C7 05 64 60 40 00 01 00 00 00		MOV     DS:_WAS_INIT_63554, 1
E8 81 08 00 00		CALL    ___MINGW_GETSECTIONCOUNT
8D 04 80		LEA     MSECS, [MSECS+MSECS*4]
8D 04 85 1B 00 00 00		LEA     EAX, DS:1BH[EAX*4]
C1 E8 04		SHR     EAX, 4
C1 E0 04		SHL     EAX, 4
E8 6C 0A 00 00		CALL    ___CHKSTK_MS
C7 05 68 60 40 00 00 00 00 00		MOV     DS:_MAXSECTIONS, 0
29 C4		SUB     ESP, EAX
8D 44 24 1F		LEA     EAX, [ESP+1FH]
83 E0 F0		AND     EAX, 0FFFFFFF0H
A3 6C 60 40 00		MOV     DS:_THE_SECS, EAX
B8 18 46 40 00		MOV     EAX, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
2D 18 46 40 00		SUB     EAX, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
83 F8 07		CMP     EAX, 7
7E AA		JLE     SHORT LOC_401A45
8B 15 18 46 40 00		MOV     EDX, DS:__RUNTIME_PSEUDO_RELOC_LIST_END___0
83 F8 0B		CMP     EAX, 0BH
0F 8F 96 00 00 00		JG      LOC_401B40
BB 18 46 40 00		MOV     EBX, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
85 D2		TEST    EDX, EDX
0F 85 8E 01 00 00		JNZ     LOC_401C45
8B 43 04		MOV     EAX, [EBX+4]
85 C0		TEST    EAX, EAX
0F 85 83 01 00 00		JNZ     LOC_401C45
8B 43 08		MOV     EAX, [EBX+8]
83 F8 01		CMP     EAX, 1
0F 85 C4 01 00 00		JNZ     LOC_401C92
8D 7B 0C		LEA     EDI, [EBX+0CH]
81 FF 18 46 40 00		CMP     EDI, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
72 26		JB      SHORT LOC_401AFF
E9 67 FF FF FF		JMP     LOC_401A45
2B 45 D4		SUB     EAX, [EBP+VAR_2C]
03 03		ADD     EAX, [EBX]
89 C6		MOV     ESI, EAX
89 D8		MOV     EAX, EBX; ADDR
E8 E2 FD FF FF		CALL    _MARK_SECTION_WRITABLE
89 33		MOV     [EBX], ESI
83 C7 0C		ADD     EDI, 0CH
81 FF 18 46 40 00		CMP     EDI, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
0F 83 B1 00 00 00		JNB     LOC_401BB0
8B 07		MOV     EAX, [EDI]
8B 4F 04		MOV     ECX, [EDI+4]
0F B6 57 08		MOVZX   EDX, BYTE PTR [EDI+8]
8D B0 00 00 40 00		LEA     ESI, [EAX+400000H]
8D 99 00 00 40 00		LEA     EBX, [ECX+400000H]
8B 80 00 00 40 00		MOV     EAX, [EAX+400000H]
89 75 D4		MOV     [EBP+VAR_2C], ESI
83 FA 10		CMP     EDX, 10H
74 4E		JZ      SHORT LOC_401B70
83 FA 20		CMP     EDX, 20H ; ' '
74 B9		JZ      SHORT LOC_401AE0
83 FA 08		CMP     EDX, 8
0F 84 E0 00 00 00		JZ      LOC_401C10
89 54 24 04		MOV     [ESP+4], EDX
C7 04 24 6C 42 40 00		MOV     DWORD PTR [ESP], OFFSET AUNKNOWNPSEUDOR; "  UNKNOWN PSEUDO RELOCATION BIT SIZE %D"...
E8 30 FD FF FF		CALL    ___REPORT_ERROR
85 D2		TEST    EDX, EDX
0F 85 F8 00 00 00		JNZ     LOC_401C40
A1 1C 46 40 00		MOV     EAX, DS:DWORD_40461C
89 C7		MOV     EDI, EAX
0B 3D 20 46 40 00		OR      EDI, DS:DWORD_404620
0F 85 2D 01 00 00		JNZ     LOC_401C88
8B 15 24 46 40 00		MOV     EDX, DS:DWORD_404624
BB 24 46 40 00		MOV     EBX, OFFSET DWORD_404624
E9 44 FF FF FF		JMP     LOC_401AAF
0F B7 B1 00 00 40 00		MOVZX   ESI, WORD PTR [ECX+400000H]
89 4D D0		MOV     [EBP+VAR_30], ECX
89 F1		MOV     ECX, ESI
81 C9 00 00 FF FF		OR      ECX, 0FFFF0000H
66 85 F6		TEST    SI, SI
0F 48 F1		CMOVS   ESI, ECX
2B 75 D4		SUB     ESI, [EBP+VAR_2C]
83 C7 0C		ADD     EDI, 0CH
01 C6		ADD     ESI, EAX
89 D8		MOV     EAX, EBX; ADDR
E8 39 FD FF FF		CALL    _MARK_SECTION_WRITABLE
8B 4D D0		MOV     ECX, [EBP+VAR_30]
66 89 B1 00 00 40 00		MOV     [ECX+400000H], SI
81 FF 18 46 40 00		CMP     EDI, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
0F 82 52 FF FF FF		JB      LOC_401AFF
8D 76 00		LEA     ESI, [ESI+0]
A1 68 60 40 00		MOV     EAX, DS:_MAXSECTIONS
85 C0		TEST    EAX, EAX
0F 8E 88 FE FF FF		JLE     LOC_401A45
8B 1D 1C 71 40 00		MOV     EBX, DS:__IMP__VIRTUALPROTECT@16; VIRTUALPROTECT(X,X,X,X)
8B 7D CC		MOV     EDI, [EBP+VAR_34]
8D 75 E4		LEA     ESI, [EBP+VAR_1C]
8D B4 26 00 00 00 00		LEA     ESI, [ESI+0]
8B 15 6C 60 40 00		MOV     EDX, DS:_THE_SECS
8D 04 BF		LEA     EAX, [EDI+EDI*4]
8D 04 82		LEA     EAX, [EDX+EAX*4]
8B 10		MOV     EDX, [EAX]
85 D2		TEST    EDX, EDX
74 1A		JZ      SHORT LOC_401BFC
89 74 24 0C		MOV     [ESP+0CH], ESI; LPFLOLDPROTECT
89 54 24 08		MOV     [ESP+8], EDX; FLNEWPROTECT
8B 50 08		MOV     EDX, [EAX+8]
89 54 24 04		MOV     [ESP+4], EDX; DWSIZE
8B 40 04		MOV     EAX, [EAX+4]
89 04 24		MOV     [ESP], EAX; LPADDRESS
FF D3		CALL    EBX ; VIRTUALPROTECT(X,X,X,X); VIRTUALPROTECT(X,X,X,X)
83 EC 10		SUB     ESP, 10H
83 C7 01		ADD     EDI, 1
3B 3D 68 60 40 00		CMP     EDI, DS:_MAXSECTIONS
7C C9		JL      SHORT LOC_401BD0
8D 65 F4		LEA     ESP, [EBP-0CH]
5B		POP     EBX
5E		POP     ESI
5F		POP     EDI
5D		POP     EBP
C3		RETN
0F B6 13		MOVZX   EDX, BYTE PTR [EBX]
89 D6		MOV     ESI, EDX
81 CE 00 FF FF FF		OR      ESI, 0FFFFFF00H
84 D2		TEST    DL, DL
0F 48 D6		CMOVS   EDX, ESI
2B 55 D4		SUB     EDX, [EBP+VAR_2C]
8D 34 02		LEA     ESI, [EDX+EAX]
89 D8		MOV     EAX, EBX; ADDR
E8 A3 FC FF FF		CALL    _MARK_SECTION_WRITABLE
89 F0		MOV     EAX, ESI
88 03		MOV     [EBX], AL
E9 BA FE FF FF		JMP     LOC_401AF0
BB 18 46 40 00		MOV     EBX, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
81 FB 18 46 40 00		CMP     EBX, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
0F 83 F4 FD FF FF		JNB     LOC_401A45
8D B4 26 00 00 00 00		LEA     ESI, [ESI+0]
8B 73 04		MOV     ESI, [EBX+4]
8B 3B		MOV     EDI, [EBX]
83 C3 08		ADD     EBX, 8
03 BE 00 00 40 00		ADD     EDI, [ESI+400000H]
8D 86 00 00 40 00		LEA     EAX, [ESI+400000H]; ADDR
E8 5F FC FF FF		CALL    _MARK_SECTION_WRITABLE
89 BE 00 00 40 00		MOV     [ESI+400000H], EDI
81 FB 18 46 40 00		CMP     EBX, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
72 D9		JB      SHORT LOC_401C58
E9 2C FF FF FF		JMP     LOC_401BB0
BB 18 46 40 00		MOV     EBX, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
E9 28 FE FF FF		JMP     LOC_401ABA
89 44 24 04		MOV     [ESP+4], EAX
C7 04 24 38 42 40 00		MOV     DWORD PTR [ESP], OFFSET AUNKNOWNPSEUDOR_0; "  UNKNOWN PSEUDO RELOCATION PROTOCOL VE"...
E8 CE FB FF FF		CALL    ___REPORT_ERROR
83 EC 3C		SUB     ESP, 3CH
A1 70 60 40 00		MOV     EAX, DS:_STUSERMATHERR
DD 44 24 48		FLD     [ESP+3CH+A1]
DD 44 24 50		FLD     [ESP+3CH+A2]
DD 44 24 58		FLD     [ESP+3CH+RSLT]
85 C0		TEST    EAX, EAX
74 30		JZ      SHORT LOC_401CF8
D9 CA		FXCH    ST(2)
8B 54 24 40		MOV     EDX, [ESP+3CH+TYP]
DD 5C 24 18		FSTP    [ESP+3CH+EX.ARG1]
DD 5C 24 20		FSTP    [ESP+3CH+EX.ARG2]
89 54 24 10		MOV     [ESP+3CH+EX.TYPE], EDX
8B 54 24 44		MOV     EDX, [ESP+3CH+NAME]
DD 5C 24 28		FSTP    [ESP+3CH+EX.RETVAL]
89 54 24 14		MOV     [ESP+3CH+EX.NAME], EDX
8D 54 24 10		LEA     EDX, [ESP+3CH+EX]
89 14 24		MOV     [ESP+3CH+VAR_3C], EDX; _EXCEPTION *
FF D0		CALL    EAX ; _STUSERMATHERR
EB 0D		JMP     SHORT LOC_401CFE
DD D8		FSTP    ST
DD D8		FSTP    ST
DD D8		FSTP    ST
83 C4 3C		ADD     ESP, 3CH
C3		RETN
8B 44 24 04		MOV     EAX, [ESP+F]
A3 70 60 40 00		MOV     DS:_STUSERMATHERR, EAX
E9 76 08 00 00		JMP     ___SETUSERMATHERR
FF 25 44 71 40 00		JMP     DS:__IMP____SETUSERMATHERR
53		PUSH    EBX
83 EC 18		SUB     ESP, 18H
8B 5C 24 20		MOV     EBX, [ESP+1CH+EXCEPTION_DATA]
8B 03		MOV     EAX, [EBX]
8B 00		MOV     EAX, [EAX]
3D 93 00 00 C0		CMP     EAX, 0C0000093H
74 1D		JZ      SHORT LOC_401D50
77 5B		JA      SHORT LOC_401D90
3D 1D 00 00 C0		CMP     EAX, 0C000001DH
0F 84 DB 00 00 00		JZ      LOC_401E1B
0F 86 8A 00 00 00		JBE     LOC_401DD0
05 73 FF FF 3F		ADD     EAX, 3FFFFF73H
83 F8 04		CMP     EAX, 4
77 25		JA      SHORT LOC_401D75
C7 44 24 04 00 00 00 00		MOV     [ESP+1CH+FUNCTION], 0; FUNCTION
C7 04 24 08 00 00 00		MOV     [ESP+1CH+SIGNAL], 8; SIGNAL
E8 C0 07 00 00		CALL    _SIGNAL
83 F8 01		CMP     OLD_HANDLER, 1
0F 84 F3 00 00 00		JZ      LOC_401E60
85 C0		TEST    OLD_HANDLER, OLD_HANDLER
0F 85 0B 01 00 00		JNZ     LOC_401E80
A1 78 60 40 00		MOV     EAX, DS:___MINGW_OLDEXCPT_HANDLER
85 C0		TEST    EAX, EAX
0F 84 CE 00 00 00		JZ      LOC_401E50
89 5C 24 20		MOV     [ESP+1CH+EXCEPTION_DATA], EBX
83 C4 18		ADD     ESP, 18H
5B		POP     EBX
FF E0		JMP     EAX
3D 94 00 00 C0		CMP     EAX, 0C0000094H
75 79		JNZ     SHORT LOC_401E10
C7 44 24 04 00 00 00 00		MOV     [ESP+1CH+FUNCTION], 0; FUNCTION
C7 04 24 08 00 00 00		MOV     [ESP+1CH+SIGNAL], 8; SIGNAL
E8 79 07 00 00		CALL    _SIGNAL
83 F8 01		CMP     OLD_HANDLER, 1
75 BD		JNZ     SHORT LOC_401D6D
C7 44 24 04 01 00 00 00		MOV     [ESP+1CH+FUNCTION], 1; FUNCTION
C7 04 24 08 00 00 00		MOV     [ESP+1CH+SIGNAL], 8; SIGNAL
E8 60 07 00 00		CALL    _SIGNAL
B8 FF FF FF FF		MOV     EAX, 0FFFFFFFFH
E9 84 00 00 00		JMP     LOC_401E52
3D 05 00 00 C0		CMP     EAX, 0C0000005H
75 9E		JNZ     SHORT LOC_401D75
C7 44 24 04 00 00 00 00		MOV     [ESP+1CH+FUNCTION], 0; FUNCTION
C7 04 24 0B 00 00 00		MOV     [ESP+1CH+SIGNAL], 0BH; SIGNAL
E8 39 07 00 00		CALL    _SIGNAL
83 F8 01		CMP     OLD_HANDLER, 1
0F 84 9C 00 00 00		JZ      LOC_401E90
85 C0		TEST    OLD_HANDLER, OLD_HANDLER
0F 84 79 FF FF FF		JZ      LOC_401D75
C7 04 24 0B 00 00 00		MOV     [ESP+1CH+SIGNAL], 0BH
FF D0		CALL    OLD_HANDLER
B8 FF FF FF FF		MOV     EAX, 0FFFFFFFFH
EB 46		JMP     SHORT LOC_401E52
3D 96 00 00 C0		CMP     EAX, 0C0000096H
0F 85 5A FF FF FF		JNZ     LOC_401D75
C7 44 24 04 00 00 00 00		MOV     [ESP+1CH+FUNCTION], 0; FUNCTION
C7 04 24 04 00 00 00		MOV     [ESP+1CH+SIGNAL], 4; SIGNAL
E8 F5 06 00 00		CALL    _SIGNAL
83 F8 01		CMP     OLD_HANDLER, 1
74 75		JZ      SHORT LOC_401EA9
85 C0		TEST    OLD_HANDLER, OLD_HANDLER
0F 84 39 FF FF FF		JZ      LOC_401D75
C7 04 24 04 00 00 00		MOV     [ESP+1CH+SIGNAL], 4
FF D0		CALL    OLD_HANDLER
B8 FF FF FF FF		MOV     EAX, 0FFFFFFFFH
EB 06		JMP     SHORT LOC_401E52
31 C0		XOR     EAX, EAX
83 C4 18		ADD     ESP, 18H
5B		POP     EBX
C2 04 00		RETN    4
C7 44 24 04 01 00 00 00		MOV     [ESP+1CH+FUNCTION], 1; FUNCTION
C7 04 24 08 00 00 00		MOV     [ESP+1CH+SIGNAL], 8; SIGNAL
E8 B0 06 00 00		CALL    _SIGNAL
E8 E7 F9 FF FF		CALL    _FPRESET
B8 FF FF FF FF		MOV     EAX, 0FFFFFFFFH
EB D2		JMP     SHORT LOC_401E52
C7 04 24 08 00 00 00		MOV     [ESP+1CH+SIGNAL], 8
FF D0		CALL    OLD_HANDLER
B8 FF FF FF FF		MOV     EAX, 0FFFFFFFFH
EB C2		JMP     SHORT LOC_401E52
C7 44 24 04 01 00 00 00		MOV     [ESP+1CH+FUNCTION], 1; FUNCTION
C7 04 24 0B 00 00 00		MOV     [ESP+1CH+SIGNAL], 0BH; SIGNAL
E8 80 06 00 00		CALL    _SIGNAL
83 C8 FF		OR      EAX, 0FFFFFFFFH
EB A9		JMP     SHORT LOC_401E52
C7 44 24 04 01 00 00 00		MOV     [ESP+1CH+FUNCTION], 1; FUNCTION
C7 04 24 04 00 00 00		MOV     [ESP+1CH+SIGNAL], 4; SIGNAL
E8 67 06 00 00		CALL    _SIGNAL
83 C8 FF		OR      EAX, 0FFFFFFFFH
EB 90		JMP     SHORT LOC_401E52
55		PUSH    EBP
57		PUSH    EDI
56		PUSH    ESI
53		PUSH    EBX
83 EC 1C		SUB     ESP, 1CH
C7 04 24 84 60 40 00		MOV     [ESP+2CH+LPCRITICALSECTION], OFFSET ___MINGWTHR_CS; LPCRITICALSECTION
FF 15 EC 70 40 00		CALL    DS:__IMP__ENTERCRITICALSECTION@4; ENTERCRITICALSECTION(X)
8B 1D 7C 60 40 00		MOV     EBX, DS:_KEY_DTOR_LIST
83 EC 04		SUB     ESP, 4
85 DB		TEST    KEYP, KEYP
74 34		JZ      SHORT LOC_401F25
8B 2D 18 71 40 00		MOV     EBP, DS:__IMP__TLSGETVALUE@4; TLSGETVALUE(X)
8B 3D F4 70 40 00		MOV     EDI, DS:__IMP__GETLASTERROR@0; GETLASTERROR()
8D 76 00		LEA     ESI, [ESI+0]
8B 03		MOV     EAX, [KEYP]
89 04 24		MOV     [ESP+2CH+LPCRITICALSECTION], EAX; DWTLSINDEX
FF D5		CALL    EBP ; TLSGETVALUE(X); TLSGETVALUE(X)
83 EC 04		SUB     ESP, 4
89 C6		MOV     ESI, EAX
FF D7		CALL    EDI ; GETLASTERROR(); GETLASTERROR()
85 C0		TEST    EAX, EAX
75 0C		JNZ     SHORT LOC_401F1E
85 F6		TEST    VALUE, VALUE
74 08		JZ      SHORT LOC_401F1E
8B 43 04		MOV     EAX, [KEYP+4]
89 34 24		MOV     [ESP+2CH+LPCRITICALSECTION], VALUE
FF D0		CALL    EAX
8B 5B 08		MOV     KEYP, [KEYP+8]
85 DB		TEST    KEYP, KEYP
75 DB		JNZ     SHORT LOC_401F00
C7 04 24 84 60 40 00		MOV     [ESP+2CH+LPCRITICALSECTION], OFFSET ___MINGWTHR_CS; LPCRITICALSECTION
FF 15 08 71 40 00		CALL    DS:__IMP__LEAVECRITICALSECTION@4; LEAVECRITICALSECTION(X)
83 EC 04		SUB     ESP, 4
83 C4 1C		ADD     ESP, 1CH
5B		POP     KEYP
5E		POP     ESI
5F		POP     EDI
5D		POP     EBP
C3		RETN
A1 80 60 40 00		MOV     EAX, DS:___MINGWTHR_CS_INIT
85 C0		TEST    EAX, EAX
75 07		JNZ     SHORT LOC_401F50
C3		RETN
53		PUSH    EBX
83 EC 18		SUB     ESP, 18H
C7 44 24 04 0C 00 00 00		MOV     [ESP+1CH+SIZE], 0CH; SIZE
C7 04 24 01 00 00 00		MOV     [ESP+1CH+COUNT], 1; COUNT
E8 FC 05 00 00		CALL    _CALLOC
89 C3		MOV     EBX, EAX
85 C0		TEST    NEW_KEY, NEW_KEY
74 42		JZ      SHORT LOC_401FB0
8B 44 24 20		MOV     NEW_KEY, [ESP+1CH+KEY]
C7 04 24 84 60 40 00		MOV     [ESP+1CH+COUNT], OFFSET ___MINGWTHR_CS; LPCRITICALSECTION
89 03		MOV     [NEW_KEY], EAX
8B 44 24 24		MOV     EAX, [ESP+1CH+DTOR]
89 43 04		MOV     [NEW_KEY+4], EAX
FF 15 EC 70 40 00		CALL    DS:__IMP__ENTERCRITICALSECTION@4; ENTERCRITICALSECTION(X)
A1 7C 60 40 00		MOV     EAX, DS:_KEY_DTOR_LIST
89 1D 7C 60 40 00		MOV     DS:_KEY_DTOR_LIST, NEW_KEY
83 EC 04		SUB     ESP, 4
89 43 08		MOV     [NEW_KEY+8], EAX
C7 04 24 84 60 40 00		MOV     [ESP+1CH+COUNT], OFFSET ___MINGWTHR_CS; LPCRITICALSECTION
FF 15 08 71 40 00		CALL    DS:__IMP__LEAVECRITICALSECTION@4; LEAVECRITICALSECTION(X)
31 C0		XOR     EAX, EAX
83 EC 04		SUB     ESP, 4
83 C4 18		ADD     ESP, 18H
5B		POP     NEW_KEY
C3		RETN
83 C8 FF		OR      NEW_KEY, 0FFFFFFFFH
EB F6		JMP     SHORT LOC_401FAB
53		PUSH    EBX
83 EC 18		SUB     ESP, 18H
A1 80 60 40 00		MOV     EAX, DS:___MINGWTHR_CS_INIT
8B 5C 24 20		MOV     EBX, [ESP+1CH+KEY]
85 C0		TEST    EAX, EAX
75 0F		JNZ     SHORT LOC_401FE0
83 C4 18		ADD     ESP, 18H
31 C0		XOR     EAX, EAX
5B		POP     EBX
C3		RETN
C7 04 24 84 60 40 00		MOV     [ESP+1CH+LPCRITICALSECTION], OFFSET ___MINGWTHR_CS; LPCRITICALSECTION
FF 15 EC 70 40 00		CALL    DS:__IMP__ENTERCRITICALSECTION@4; ENTERCRITICALSECTION(X)
A1 7C 60 40 00		MOV     EAX, DS:_KEY_DTOR_LIST
83 EC 04		SUB     ESP, 4
85 C0		TEST    CUR_KEY, CUR_KEY
74 27		JZ      SHORT LOC_402020
31 C9		XOR     ECX, ECX
EB 0B		JMP     SHORT LOC_402008
89 C1		MOV     ECX, PREV_KEY
85 D2		TEST    CUR_KEY, CUR_KEY
74 1A		JZ      SHORT LOC_402020
89 D0		MOV     PREV_KEY, CUR_KEY
8B 10		MOV     EDX, [CUR_KEY]
39 DA		CMP     EDX, EBX
8B 50 08		MOV     EDX, [CUR_KEY+8]
75 EF		JNZ     SHORT LOC_402000
85 C9		TEST    PREV_KEY, PREV_KEY
74 2B		JZ      SHORT LOC_402040
89 51 08		MOV     [PREV_KEY+8], EDX
89 04 24		MOV     [ESP+1CH+LPCRITICALSECTION], CUR_KEY; BLOCK
E8 2C 05 00 00		CALL    _FREE
C7 04 24 84 60 40 00		MOV     [ESP+1CH+LPCRITICALSECTION], OFFSET ___MINGWTHR_CS; LPCRITICALSECTION
FF 15 08 71 40 00		CALL    DS:__IMP__LEAVECRITICALSECTION@4; LEAVECRITICALSECTION(X)
31 C0		XOR     EAX, EAX
83 EC 04		SUB     ESP, 4
83 C4 18		ADD     ESP, 18H
5B		POP     EBX
C3		RETN
89 15 7C 60 40 00		MOV     DS:_KEY_DTOR_LIST, EDX
EB D0		JMP     SHORT LOC_402018
53		PUSH    EBX
83 EC 18		SUB     ESP, 18H
8B 44 24 24		MOV     EAX, [ESP+1CH+REASON]
83 F8 02		CMP     EAX, 2
0F 84 BF 00 00 00		JZ      LOC_402120
77 25		JA      SHORT LOC_402088
85 C0		TEST    EAX, EAX
74 51		JZ      SHORT LOC_4020B8
A1 80 60 40 00		MOV     EAX, DS:___MINGWTHR_CS_INIT
85 C0		TEST    EAX, EAX
74 30		JZ      SHORT LOC_4020A0
C7 05 80 60 40 00 01 00 00 00		MOV     DS:___MINGWTHR_CS_INIT, 1
83 C4 18		ADD     ESP, 18H
B8 01 00 00 00		MOV     EAX, 1
5B		POP     EBX
C3		RETN
83 F8 03		CMP     EAX, 3
75 ED		JNZ     SHORT LOC_40207A
A1 80 60 40 00		MOV     EAX, DS:___MINGWTHR_CS_INIT
85 C0		TEST    EAX, EAX
74 E4		JZ      SHORT LOC_40207A
E8 35 FE FF FF		CALL    ___MINGWTHR_RUN_KEY_DTORS_PART_0
EB DD		JMP     SHORT LOC_40207A
C7 04 24 84 60 40 00		MOV     [ESP+1CH+LPCRITICALSECTION], OFFSET ___MINGWTHR_CS; LPCRITICALSECTION
FF 15 04 71 40 00		CALL    DS:__IMP__INITIALIZECRITICALSECTION@4; INITIALIZECRITICALSECTION(X)
83 EC 04		SUB     ESP, 4
EB BE		JMP     SHORT LOC_402070
A1 80 60 40 00		MOV     EAX, DS:___MINGWTHR_CS_INIT
85 C0		TEST    EAX, EAX
74 05		JZ      SHORT LOC_4020C6
E8 0A FE FF FF		CALL    ___MINGWTHR_RUN_KEY_DTORS_PART_0
A1 80 60 40 00		MOV     EAX, DS:___MINGWTHR_CS_INIT
83 F8 01		CMP     EAX, 1
75 AA		JNZ     SHORT LOC_40207A
8B 1D 7C 60 40 00		MOV     EBX, DS:_KEY_DTOR_LIST
85 DB		TEST    KEYP, KEYP
74 17		JZ      SHORT LOC_4020F1
8D B6 00 00 00 00		LEA     ESI, [ESI+0]
89 D8		MOV     EAX, KEYP
8B 5B 08		MOV     KEYP, [KEYP+8]
89 04 24		MOV     [ESP+1CH+LPCRITICALSECTION], KEYP; BLOCK
E8 5F 04 00 00		CALL    _FREE
85 DB		TEST    T, T
75 EF		JNZ     SHORT LOC_4020E0
C7 05 7C 60 40 00 00 00 00 00		MOV     DS:_KEY_DTOR_LIST, 0
C7 05 80 60 40 00 00 00 00 00		MOV     DS:___MINGWTHR_CS_INIT, 0
C7 04 24 84 60 40 00		MOV     [ESP+1CH+LPCRITICALSECTION], OFFSET ___MINGWTHR_CS; LPCRITICALSECTION
FF 15 E8 70 40 00		CALL    DS:__IMP__DELETECRITICALSECTION@4; DELETECRITICALSECTION(X)
83 EC 04		SUB     ESP, 4
E9 60 FF FF FF		JMP     LOC_40207A
E8 3B F7 FF FF		CALL    _FPRESET
83 C4 18		ADD     ESP, 18H
B8 01 00 00 00		MOV     EAX, 1
5B		POP     EBX
C3		RETN
03 40 3C		ADD     PIMAGEBASE, [PIMAGEBASE+3CH]
81 38 50 45 00 00		CMP     DWORD PTR [PNTHEADER], 4550H
75 15		JNZ     SHORT LOC_402150
66 81 78 18 0B 01		CMP     WORD PTR [PNTHEADER+18H], 10BH
0F 94 C0		SETZ    AL
0F B6 C0		MOVZX   EAX, AL
C3		RETN
31 C0		XOR     PNTHEADER, PNTHEADER
C3		RETN
8B 44 24 04		MOV     EAX, [ESP+PDOSHEADER]
66 81 38 4D 5A		CMP     WORD PTR [EAX], 5A4DH
75 05		JNZ     SHORT LOC_402170
EB C3		JMP     SHORT __VALIDATEIMAGEBASE_PART_0
31 C0		XOR     PDOSHEADER_0, PDOSHEADER_0
C3		RETN
03 40 3C		ADD     PIMAGEBASE, [PIMAGEBASE+3CH]
56		PUSH    ESI
53		PUSH    EBX
8B 54 24 0C		MOV     EDX, [ESP+8+PIMAGEBASE]
8B 5C 24 10		MOV     EBX, [ESP+8+RVA]
03 52 3C		ADD     EDX, [EDX+3CH]
0F B7 42 14		MOVZX   EAX, WORD PTR [PNTHEADER+14H]
0F B7 72 06		MOVZX   ESI, WORD PTR [PNTHEADER+6]
8D 44 02 18		LEA     EAX, [PNTHEADER+EAX+18H]
85 F6		TEST    ESI, ESI
74 1B		JZ      SHORT LOC_4021B8
31 C9		XOR     ECX, ECX
90		NOP
8B 50 0C		MOV     EDX, [PSECTION+0CH]
39 DA		CMP     EDX, EBX
77 07		JA      SHORT LOC_4021AE
03 50 08		ADD     EDX, [PSECTION+8]
39 DA		CMP     EDX, EBX
77 0C		JA      SHORT LOC_4021BA
83 C1 01		ADD     ISECTION, 1
83 C0 28		ADD     PSECTION, 28H ; '('
39 F1		CMP     ISECTION, ESI
75 E8		JNZ     SHORT LOC_4021A0
31 C0		XOR     PSECTION, PSECTION
5B		POP     RVA_0
5E		POP     ESI
C3		RETN
55		PUSH    EBP
57		PUSH    EDI
56		PUSH    ESI
53		PUSH    EBX
31 DB		XOR     EBX, EBX
83 EC 1C		SUB     ESP, 1CH
8B 7C 24 30		MOV     EDI, [ESP+2CH+PNAME]
89 3C 24		MOV     [ESP+2CH+STR], EDI; STR
E8 47 03 00 00		CALL    _STRLEN
83 F8 08		CMP     EAX, 8
77 60		JA      SHORT LOC_40223A
66 81 3D 00 00 40 00 4D 5A		CMP     WORD PTR DS:400000H, 5A4DH
75 55		JNZ     SHORT LOC_40223A
B8 00 00 40 00		MOV     EAX, 400000H; PIMAGEBASE
E8 41 FF FF FF		CALL    __VALIDATEIMAGEBASE_PART_0
85 C0		TEST    EAX, EAX
74 47		JZ      SHORT LOC_40223A
A1 3C 00 40 00		MOV     EAX, DS:40003CH
0F B7 90 14 00 40 00		MOVZX   EDX, WORD PTR [EAX+400014H]
0F B7 A8 06 00 40 00		MOVZX   EBP, WORD PTR [EAX+400006H]
8D 9C 10 18 00 40 00		LEA     EBX, [EAX+EDX+400018H]
85 ED		TEST    EBP, EBP
74 37		JZ      SHORT LOC_402248
31 F6		XOR     ESI, ESI
EB 0D		JMP     SHORT LOC_402222
83 C6 01		ADD     ISECTION, 1
83 C3 28		ADD     PSECTION, 28H ; '('
39 EE		CMP     ISECTION, EBP
74 26		JZ      SHORT LOC_402248
C7 44 24 08 08 00 00 00		MOV     [ESP+2CH+MAXCOUNT], 8; MAXCOUNT
89 7C 24 04		MOV     [ESP+2CH+STR2], EDI; STR2
89 1C 24		MOV     [ESP+2CH+STR], PSECTION; STR1
E8 DE 02 00 00		CALL    _STRNCMP
85 C0		TEST    EAX, EAX
75 DE		JNZ     SHORT LOC_402218
83 C4 1C		ADD     ESP, 1CH
89 D8		MOV     EAX, EBX
5B		POP     EBX
5E		POP     ESI
5F		POP     EDI
5D		POP     EBP
C3		RETN
83 C4 1C		ADD     ESP, 1CH
31 DB		XOR     PSECTION, PSECTION
89 D8		MOV     EAX, EBX
5B		POP     EBX
5E		POP     ESI
5F		POP     EDI
5D		POP     EBP
C3		RETN
31 D2		XOR     EDX, EDX
66 81 3D 00 00 40 00 4D 5A		CMP     WORD PTR DS:400000H, 5A4DH
75 63		JNZ     SHORT LOC_4022D0
56		PUSH    ESI
B8 00 00 40 00		MOV     EAX, 400000H; PIMAGEBASE
53		PUSH    EBX
E8 B7 FE FF FF		CALL    __VALIDATEIMAGEBASE_PART_0
85 C0		TEST    EAX, EAX
74 4D		JZ      SHORT LOC_4022CA
A1 3C 00 40 00		MOV     EAX, DS:40003CH
8B 5C 24 0C		MOV     EBX, [ESP+8+P]
0F B7 90 14 00 40 00		MOVZX   EDX, WORD PTR [EAX+400014H]
0F B7 B0 06 00 40 00		MOVZX   ESI, WORD PTR [EAX+400006H]
81 EB 00 00 40 00		SUB     EBX, 400000H
8D 94 10 18 00 40 00		LEA     EDX, [EAX+EDX+400018H]
85 F6		TEST    ESI, ESI
74 23		JZ      SHORT LOC_4022C8
31 C9		XOR     ECX, ECX
8D B4 26 00 00 00 00		LEA     ESI, [ESI+0]
66 90		XCHG    AX, AX
8B 42 0C		MOV     EAX, [EDX+0CH]
39 C3		CMP     RVA, EAX
72 07		JB      SHORT LOC_4022BE
03 42 08		ADD     EAX, [EDX+8]
39 C3		CMP     RVA, EAX
72 0C		JB      SHORT LOC_4022CA
83 C1 01		ADD     ECX, 1
83 C2 28		ADD     EDX, 28H ; '('
39 F1		CMP     ECX, ESI
75 E8		JNZ     SHORT LOC_4022B0
31 D2		XOR     EDX, EDX
89 D0		MOV     EAX, EDX
5B		POP     EBX
5E		POP     ESI
C3		RETN
89 D0		MOV     EAX, EDX
C3		RETN
31 C0		XOR     EAX, EAX
66 81 3D 00 00 40 00 4D 5A		CMP     WORD PTR DS:400000H, 5A4DH
75 1A		JNZ     SHORT LOCRET_402307
B8 00 00 40 00		MOV     EAX, 400000H; PIMAGEBASE
E8 39 FE FF FF		CALL    __VALIDATEIMAGEBASE_PART_0
85 C0		TEST    EAX, EAX
74 0C		JZ      SHORT LOCRET_402307
A1 3C 00 40 00		MOV     EAX, DS:40003CH
0F B7 80 06 00 40 00		MOVZX   EAX, WORD PTR [EAX+400006H]
C3		RETN
31 D2		XOR     EDX, EDX
53		PUSH    EBX
8B 4C 24 08		MOV     ECX, [ESP+4+ENO]
66 81 3D 00 00 40 00 4D 5A		CMP     WORD PTR DS:400000H, 5A4DH
75 47		JNZ     SHORT LOC_402369
B8 00 00 40 00		MOV     EAX, 400000H; PIMAGEBASE
E8 04 FE FF FF		CALL    __VALIDATEIMAGEBASE_PART_0
85 C0		TEST    EAX, EAX
74 39		JZ      SHORT LOC_402369
A1 3C 00 40 00		MOV     EAX, DS:40003CH
0F B7 90 14 00 40 00		MOVZX   EDX, WORD PTR [EAX+400014H]
0F B7 98 06 00 40 00		MOVZX   EBX, WORD PTR [EAX+400006H]
8D 94 10 18 00 40 00		LEA     EDX, [EAX+EDX+400018H]
85 DB		TEST    EBX, EBX
74 19		JZ      SHORT LOC_402367
31 C0		XOR     EAX, EAX
F6 42 27 20		TEST    BYTE PTR [PSECTION+27H], 20H
74 07		JZ      SHORT LOC_40235D
85 C9		TEST    ENO_0, ENO_0
74 0F		JZ      SHORT LOC_402369
83 E9 01		SUB     ENO_0, 1
83 C0 01		ADD     ISECTION, 1
83 C2 28		ADD     PSECTION, 28H ; '('
39 D8		CMP     ISECTION, EBX
75 E9		JNZ     SHORT LOC_402350
31 D2		XOR     PSECTION, PSECTION
89 D0		MOV     EAX, EDX
5B		POP     EBX
C3		RETN
31 D2		XOR     EDX, EDX
66 81 3D 00 00 40 00 4D 5A		CMP     WORD PTR DS:400000H, 5A4DH
75 14		JNZ     SHORT LOC_402391
B8 00 00 40 00		MOV     EAX, 400000H; PIMAGEBASE
E8 A9 FD FF FF		CALL    __VALIDATEIMAGEBASE_PART_0
85 C0		TEST    EAX, EAX
B8 00 00 40 00		MOV     EAX, 400000H
0F 45 D0		CMOVNZ  EDX, EAX
89 D0		MOV     EAX, EDX
C3		RETN
31 C0		XOR     EAX, EAX
66 81 3D 00 00 40 00 4D 5A		CMP     WORD PTR DS:400000H, 5A4DH
75 63		JNZ     SHORT LOCRET_402410
56		PUSH    ESI
B8 00 00 40 00		MOV     EAX, 400000H; PIMAGEBASE
53		PUSH    EBX
E8 77 FD FF FF		CALL    __VALIDATEIMAGEBASE_PART_0
85 C0		TEST    EAX, EAX
74 4D		JZ      SHORT LOC_40240A
8B 15 3C 00 40 00		MOV     EDX, DS:40003CH
8B 5C 24 0C		MOV     EBX, [ESP+8+PTARGET]
0F B7 82 14 00 40 00		MOVZX   EAX, WORD PTR [EDX+400014H]
0F B7 B2 06 00 40 00		MOVZX   ESI, WORD PTR [EDX+400006H]
81 EB 00 00 40 00		SUB     EBX, 400000H
8D 84 02 18 00 40 00		LEA     EAX, [EDX+EAX+400018H]
85 F6		TEST    ESI, ESI
74 22		JZ      SHORT LOC_402408
31 C9		XOR     ECX, ECX
8D B4 26 00 00 00 00		LEA     ESI, [ESI+0]
90		NOP
8B 50 0C		MOV     EDX, [EAX+0CH]
39 D3		CMP     RVATARGET, EDX
72 07		JB      SHORT LOC_4023FE
03 50 08		ADD     EDX, [EAX+8]
39 D3		CMP     RVATARGET, EDX
72 1A		JB      SHORT LOC_402418
83 C1 01		ADD     ECX, 1
83 C0 28		ADD     EAX, 28H ; '('
39 F1		CMP     ECX, ESI
75 E8		JNZ     SHORT LOC_4023F0
31 C0		XOR     EAX, EAX
5B		POP     EBX
5E		POP     ESI
C3		RETN
C3		RETN
8B 40 24		MOV     PSECTION, [PSECTION+24H]
5B		POP     RVATARGET
5E		POP     ESI
F7 D0		NOT     EAX
C1 E8 1F		SHR     EAX, 1FH
C3		RETN
31 C9		XOR     ECX, ECX
57		PUSH    EDI
66 81 3D 00 00 40 00 4D 5A		CMP     WORD PTR DS:400000H, 5A4DH
56		PUSH    ESI
53		PUSH    EBX
8B 5C 24 10		MOV     EBX, [ESP+0CH+I]
75 56		JNZ     SHORT LOC_40249A
B8 00 00 40 00		MOV     EAX, 400000H; PIMAGEBASE
E8 E2 FC FF FF		CALL    __VALIDATEIMAGEBASE_PART_0
85 C0		TEST    EAX, EAX
74 48		JZ      SHORT LOC_40249A
A1 3C 00 40 00		MOV     EAX, DS:40003CH
8D B0 00 00 40 00		LEA     ESI, [EAX+400000H]
8B 80 80 00 40 00		MOV     EAX, [EAX+400080H]
85 C0		TEST    IMPORTSSTARTRVA, IMPORTSSTARTRVA
74 33		JZ      SHORT LOC_40249A
0F B7 56 14		MOVZX   EDX, WORD PTR [PNTHEADER+14H]
0F B7 7E 06		MOVZX   EDI, WORD PTR [PNTHEADER+6]
8D 54 16 18		LEA     EDX, [PNTHEADER+EDX+18H]
85 FF		TEST    EDI, EDI
74 23		JZ      SHORT LOC_40249A
31 F6		XOR     PNTHEADER, PNTHEADER
8D B4 26 00 00 00 00		LEA     ESI, [ESI+0]
8B 4A 0C		MOV     ECX, [EDX+0CH]
39 C8		CMP     IMPORTSSTARTRVA, ECX
72 07		JB      SHORT LOC_40248E
03 4A 08		ADD     ECX, [EDX+8]
39 C8		CMP     IMPORTSSTARTRVA, ECX
72 12		JB      SHORT LOC_4024A0
83 C6 01		ADD     ESI, 1
83 C2 28		ADD     EDX, 28H ; '('
39 FE		CMP     ESI, EDI
75 E8		JNZ     SHORT LOC_402480
31 C9		XOR     ECX, ECX
5B		POP     EBX
89 C8		MOV     EAX, ECX
5E		POP     ESI
5F		POP     EDI
C3		RETN
05 00 00 40 00		ADD     IMPORTSSTARTRVA, 400000H
EB 0F		JMP     SHORT LOC_4024B6
83 EB 01		SUB     I_0, 1
83 C0 14		ADD     IMPORTDESC, 14H
8B 48 04		MOV     ECX, [IMPORTDESC+4]
85 C9		TEST    ECX, ECX
75 07		JNZ     SHORT LOC_4024C4
8B 50 0C		MOV     EDX, [IMPORTDESC+0CH]
85 D2		TEST    EDX, EDX
74 D4		JZ      SHORT LOC_402498
85 DB		TEST    I_0, I_0
7F E8		JG      SHORT LOC_4024B0
8B 48 0C		MOV     ECX, [IMPORTDESC+0CH]
5B		POP     I_0
5E		POP     ESI
5F		POP     EDI
81 C1 00 00 40 00		ADD     ECX, 400000H
89 C8		MOV     IMPORTDESC, ECX
C3		RETN
51		PUSH    ECX
50		PUSH    EAX
3D 00 10 00 00		CMP     EAX, 1000H
8D 4C 24 0C		LEA     ECX, [ESP+8+ARG_0]
72 15		JB      SHORT LOC_402502
81 E9 00 10 00 00		SUB     ECX, 1000H
83 09 00		OR      DWORD PTR [ECX], 0
2D 00 10 00 00		SUB     EAX, 1000H
3D 00 10 00 00		CMP     EAX, 1000H
77 EB		JA      SHORT LOC_4024ED
29 C1		SUB     ECX, EAX
83 09 00		OR      DWORD PTR [ECX], 0
58		POP     EAX
59		POP     ECX
C3		RETN
FF 25 8C 71 40 00		JMP     DS:__IMP__VFPRINTF
FF 25 88 71 40 00		JMP     DS:__IMP__STRNCMP
FF 25 84 71 40 00		JMP     DS:__IMP__STRLEN
FF 25 80 71 40 00		JMP     DS:__IMP__SIGNAL
FF 25 7C 71 40 00		JMP     DS:__IMP__PUTS
FF 25 78 71 40 00		JMP     DS:__IMP__MEMCPY
FF 25 74 71 40 00		JMP     DS:__IMP__MALLOC
FF 25 70 71 40 00		JMP     DS:__IMP__FWRITE
FF 25 6C 71 40 00		JMP     DS:__IMP__FREE
FF 25 68 71 40 00		JMP     DS:__IMP__FPRINTF
FF 25 64 71 40 00		JMP     DS:__IMP__EXIT
FF 25 60 71 40 00		JMP     DS:__IMP__CALLOC
FF 25 5C 71 40 00		JMP     DS:__IMP__ABORT
FF 25 58 71 40 00		JMP     DS:__IMP___ONEXIT
FF 25 50 71 40 00		JMP     DS:__IMP___INITTERM
FF 25 4C 71 40 00		JMP     DS:__IMP___CEXIT
FF 25 48 71 40 00		JMP     DS:__IMP___AMSG_EXIT
FF 25 44 71 40 00		JMP     DS:__IMP____SETUSERMATHERR
FF 25 40 71 40 00		JMP     DS:__IMP____SET_APP_TYPE
FF 25 3C 71 40 00		JMP     DS:__IMP____P__FMODE
FF 25 38 71 40 00		JMP     DS:__IMP____P__COMMODE
FF 25 34 71 40 00		JMP     DS:__IMP____P__ACMDLN
FF 25 28 71 40 00		JMP     DS:__IMP____GETMAINARGS
8B 44 24 04		MOV     EAX, [ESP+INDEX]
C1 E0 05		SHL     EAX, 5
03 05 54 71 40 00		ADD     EAX, DS:__IMP___IOB
C3		RETN
A1 B0 60 40 00		MOV     EAX, DS:_BSS_0
C3		RETN
8B 44 24 04		MOV     EAX, [ESP+NEW_HANDLER]
87 05 B0 60 40 00		XCHG    EAX, DS:_BSS_0
C3		RETN
E9 EB EE FF FF		JMP     ___GCC_REGISTER_FRAME
55		PUSH    EBP
