/root/host/Pickles/ida.p
F3 C3		REP RETN
83 EC 1C		SUB     ESP, 1CH
31 C0		XOR     EAX, EAX
66 81 3D 00 00 40 00 4D 5A		CMP     WORD PTR DS:400000H, 5A4DH
C7 05 28 50 40 00 01 00 00 00		MOV     DS:_MINGW_INITLTSDROT_FORCE, 1
C7 05 24 50 40 00 01 00 00 00		MOV     DS:_MINGW_INITLTSDYN_FORCE, 1
C7 05 20 50 40 00 01 00 00 00		MOV     DS:_MINGW_INITLTSSUO_FORCE, 1
C7 05 30 50 40 00 01 00 00 00		MOV     DS:_MINGW_INITCHARMAX, 1
74 68		JZ      SHORT LOC_4010B0
A3 08 50 40 00		MOV     DS:_MANAGEDAPP, EAX
A1 34 50 40 00		MOV     EAX, DS:_MINGW_APP_TYPE
85 C0		TEST    EAX, EAX
74 4A		JZ      SHORT LOC_4010A0
C7 04 24 02 00 00 00		MOV     [ESP+1CH+TYPE], 2; TYPE
E8 2A 15 00 00		CALL    ___SET_APP_TYPE
C7 04 24 FF FF FF FF		MOV     [ESP+1CH+TYPE], 0FFFFFFFFH; PTR
E8 C2 05 00 00		CALL    __ENCODE_POINTER
8B 15 38 50 40 00		MOV     EDX, DS:__FMODE
A3 30 54 40 00		MOV     DS:___ONEXITEND, EAX
A3 34 54 40 00		MOV     DS:___ONEXITBEGIN, EAX
A1 74 61 40 00		MOV     EAX, DS:__IMP___FMODE
89 10		MOV     [EAX], EDX
E8 36 08 00 00		CALL    __SETARGV
83 3D 18 30 40 00 01		CMP     __MINGW_INSTALL_DEBUG_MATHERR, 1
74 6D		JZ      SHORT LOC_401100
31 C0		XOR     EAX, EAX
83 C4 1C		ADD     ESP, 1CH
C3		RETN
C7 04 24 01 00 00 00		MOV     [ESP+1CH+TYPE], 1; TYPE
E8 E0 14 00 00		CALL    ___SET_APP_TYPE
EB B4		JMP     SHORT LOC_401062
8B 15 3C 00 40 00		MOV     EDX, DS:40003CH
81 BA 00 00 40 00 50 45 00 00		CMP     DWORD PTR [EDX+400000H], 4550H
8D 8A 00 00 40 00		LEA     ECX, [EDX+400000H]
75 80		JNZ     SHORT LOC_401048
0F B7 51 18		MOVZX   EDX, WORD PTR [ECX+18H]
66 81 FA 0B 01		CMP     DX, 10BH
74 3F		JZ      SHORT LOC_401112
66 81 FA 0B 02		CMP     DX, 20BH
0F 85 6A FF FF FF		JNZ     LOC_401048
83 B9 84 00 00 00 0E		CMP     DWORD PTR [ECX+84H], 0EH
0F 86 5D FF FF FF		JBE     LOC_401048
8B 91 F8 00 00 00		MOV     EDX, [ECX+0F8H]
31 C0		XOR     EAX, EAX
85 D2		TEST    EDX, EDX
0F 95 C0		SETNZ   AL
E9 4B FF FF FF		JMP     LOC_401048
C7 04 24 30 19 40 00		MOV     [ESP+1CH+TYPE], OFFSET __MATHERR; F
E8 14 08 00 00		CALL    ___MINGW_SETUSERMATHERR
31 C0		XOR     EAX, EAX
83 C4 1C		ADD     ESP, 1CH
C3		RETN
83 79 74 0E		CMP     DWORD PTR [ECX+74H], 0EH
0F 86 2C FF FF FF		JBE     LOC_401048
8B 89 E8 00 00 00		MOV     ECX, [ECX+0E8H]
31 C0		XOR     EAX, EAX
85 C9		TEST    ECX, ECX
0F 95 C0		SETNZ   AL
E9 1A FF FF FF		JMP     LOC_401048
83 EC 2C		SUB     ESP, 2CH
A1 3C 50 40 00		MOV     EAX, DS:__NEWMODE
C7 44 24 10 00 50 40 00		MOV     [ESP+2CH+VAR_1C], OFFSET __BSS_START__
C7 44 24 08 14 50 40 00		MOV     [ESP+2CH+VAR_24], OFFSET _ENVP
C7 44 24 04 18 50 40 00		MOV     [ESP+2CH+VAR_28], OFFSET _ARGV
C7 04 24 1C 50 40 00		MOV     [ESP+2CH+VAR_2C], OFFSET _ARGC
A3 00 50 40 00		MOV     DS:__BSS_START__.NEWMODE, EAX
A1 40 50 40 00		MOV     EAX, DS:__DOWILDCARD
89 44 24 0C		MOV     [ESP+2CH+VAR_20], EAX
E8 2A 14 00 00		CALL    ___GETMAINARGS
A3 10 50 40 00		MOV     DS:_ARGRET, EAX
83 C4 2C		ADD     ESP, 2CH
C3		RETN
55		PUSH    EBP
31 C0		XOR     EAX, EAX
B9 11 00 00 00		MOV     ECX, 11H
89 E5		MOV     EBP, ESP
57		PUSH    EDI
56		PUSH    ESI
8D 55 A4		LEA     EDX, [EBP+VAR_5C]
53		PUSH    EBX
89 D7		MOV     EDI, EDX
83 EC 7C		SUB     ESP, 7CH
F3 AB		REP STOSD
B0 30		MOV     AL, 30H ; '0'
E8 C2 13 00 00		CALL    ___CHKSTK_MS
29 C4		SUB     ESP, EAX
8D 44 24 1B		LEA     EAX, [ESP+1BH]
83 E0 F0		AND     EAX, 0FFFFFFF0H
C7 00 CC CC CC CC		MOV     DWORD PTR [LPSZCOMMANDLINE], 0CCCCCCCCH
C7 40 04 CC CC CC CC		MOV     DWORD PTR [LPSZCOMMANDLINE+4], 0CCCCCCCCH
C7 40 08 CC CC CC CC		MOV     DWORD PTR [LPSZCOMMANDLINE+8], 0CCCCCCCCH
C7 40 0C CC CC CC CC		MOV     DWORD PTR [LPSZCOMMANDLINE+0CH], 0CCCCCCCCH
C7 40 10 CC CC CC CC		MOV     DWORD PTR [LPSZCOMMANDLINE+10H], 0CCCCCCCCH
C7 40 14 CC CC CC CC		MOV     DWORD PTR [LPSZCOMMANDLINE+14H], 0CCCCCCCCH
C7 40 18 CC CC CC CC		MOV     DWORD PTR [LPSZCOMMANDLINE+18H], 0CCCCCCCCH
C7 40 1C CC CC CC CC		MOV     DWORD PTR [LPSZCOMMANDLINE+1CH], 0CCCCCCCCH
83 E4 F0		AND     ESP, 0FFFFFFF0H
8B 35 34 50 40 00		MOV     ESI, DS:_MINGW_APP_TYPE
85 F6		TEST    ESI, ESI
0F 85 81 02 00 00		JNZ     LOC_401470
64 A1 18 00 00 00		MOV     EAX, LARGE FS:18H
31 F6		XOR     ESI, ESI
8B 58 04		MOV     EBX, [EAX+4]
8B 3D 34 61 40 00		MOV     EDI, DS:__IMP__SLEEP@4; SLEEP(X)
EB 14		JMP     SHORT LOC_401216
39 D8		CMP     LOCK_FREE, FIBERID
0F 84 07 02 00 00		JZ      LOC_401411
C7 04 24 E8 03 00 00		MOV     DWORD PTR [ESP], 3E8H; DWMILLISECONDS
FF D7		CALL    EDI ; SLEEP(X); SLEEP(X)
83 EC 04		SUB     ESP, 4
89 F0		MOV     EAX, ESI
F0 0F B1 1D 38 54 40 00		LOCK CMPXCHG DS:___NATIVE_STARTUP_LOCK, FIBERID
85 C0		TEST    LOCK_FREE, LOCK_FREE
75 DE		JNZ     SHORT LOC_401202
A1 3C 54 40 00		MOV     LOCK_FREE, DS:___NATIVE_STARTUP_STATE
31 DB		XOR     FIBERID, FIBERID
83 F8 01		CMP     EAX, 1
0F 84 F0 01 00 00		JZ      LOC_401424
A1 3C 54 40 00		MOV     EAX, DS:___NATIVE_STARTUP_STATE
85 C0		TEST    EAX, EAX
0F 84 40 02 00 00		JZ      LOC_401481
C7 05 04 50 40 00 01 00 00 00		MOV     DS:_HAS_CCTOR, 1
A1 3C 54 40 00		MOV     EAX, DS:___NATIVE_STARTUP_STATE
83 F8 01		CMP     EAX, 1
0F 84 E5 01 00 00		JZ      LOC_40143E
85 DB		TEST    NESTED, NESTED
0F 84 03 02 00 00		JZ      LOC_401464
A1 0C 40 40 00		MOV     EAX, DS:___DYN_TLS_INIT_CALLBACK
85 C0		TEST    EAX, EAX
74 1C		JZ      SHORT LOC_401286
C7 44 24 08 00 00 00 00		MOV     DWORD PTR [ESP+8], 0; LPRESERVED
C7 44 24 04 02 00 00 00		MOV     DWORD PTR [ESP+4], 2; DWREASON
C7 04 24 00 00 00 00		MOV     DWORD PTR [ESP], 0; HDLLHANDLE
FF D0		CALL    EAX ; __DYN_TLS_INIT(X,X,X); __DYN_TLS_INIT(X,X,X)
83 EC 0C		SUB     ESP, 0CH
E8 A5 08 00 00		CALL    __PEI386_RUNTIME_RELOCATOR
C7 04 24 20 17 40 00		MOV     DWORD PTR [ESP], OFFSET __GNU_EXCEPTION_HANDLER@4; LPTOPLEVELEXCEPTIONFILTER
FF 15 30 61 40 00		CALL    DS:__IMP__SETUNHANDLEDEXCEPTIONFILTER@4; SETUNHANDLEDEXCEPTIONFILTER(X)
83 EC 04		SUB     ESP, 4
A3 44 50 40 00		MOV     DS:___MINGW_OLDEXCPT_HANDLER, EAX
C7 04 24 00 10 40 00		MOV     DWORD PTR [ESP], OFFSET ___MINGW_INVALIDPARAMETERHANDLER; NEW_HANDLER
E8 04 13 00 00		CALL    __SET_INVALID_PARAMETER_HANDLER
E8 3F 0B 00 00		CALL    _FPRESET
A1 68 61 40 00		MOV     EAX, DS:__IMP___ACMDLN
C7 05 2C 54 40 00 00 00 40 00		MOV     DS:___MINGW_WINMAIN_HINSTANCE, 400000H
8B 00		MOV     EAX, [EAX]
85 C0		TEST    LPSZCOMMANDLINE, LPSZCOMMANDLINE
74 4E		JZ      SHORT LOC_401314
31 C9		XOR     ECX, ECX
EB 17		JMP     SHORT LOC_4012E1
84 D2		TEST    DL, DL
74 3B		JZ      SHORT LOC_40130F
83 E1 01		AND     INDOUBLEQUOTE, 1
74 2B		JZ      SHORT LOC_401304
B9 01 00 00 00		MOV     ECX, 1
83 C0 01		ADD     LPSZCOMMANDLINE, 1
0F B6 10		MOVZX   EDX, BYTE PTR [LPSZCOMMANDLINE]
80 FA 20		CMP     DL, 20H ; ' '
7E E7		JLE     SHORT LOC_4012D0
89 CB		MOV     EBX, INDOUBLEQUOTE
83 F3 01		XOR     EBX, 1
80 FA 22		CMP     DL, 22H ; '"'
0F 44 CB		CMOVZ   INDOUBLEQUOTE, EBX
EB E8		JMP     SHORT LOC_4012DE
84 D2		TEST    DL, DL
74 0B		JZ      SHORT LOC_40130F
83 C0 01		ADD     LPSZCOMMANDLINE, 1
0F B6 10		MOVZX   EDX, BYTE PTR [LPSZCOMMANDLINE]
80 FA 20		CMP     DL, 20H ; ' '
7E F1		JLE     SHORT LOC_401300
A3 28 54 40 00		MOV     DS:___MINGW_WINMAIN_LPCMDLINE, LPSZCOMMANDLINE
8B 1D 34 50 40 00		MOV     EBX, DS:_MINGW_APP_TYPE
85 DB		TEST    EBX, EBX
74 15		JZ      SHORT LOC_401333
0F B7 55 D4		MOVZX   EDX, [EBP+VAR_2C]
F6 45 D0 01		TEST    [EBP+VAR_30], 1
B8 0A 00 00 00		MOV     LPSZCOMMANDLINE, 0AH
0F 45 C2		CMOVNZ  EAX, EDX
A3 00 30 40 00		MOV     ___MINGW_WINMAIN_NSHOWCMD, EAX
A1 1C 50 40 00		MOV     EAX, DS:_ARGC
89 45 90		MOV     [EBP+VAR_70], EAX
89 C6		MOV     ESI, EAX
8D 04 85 04 00 00 00		LEA     EAX, DS:4[EAX*4]
89 45 8C		MOV     [EBP+VAR_74], EAX
89 04 24		MOV     [ESP], EAX; SIZE
E8 71 12 00 00		CALL    _MALLOC
85 F6		TEST    ESI, ESI
89 45 94		MOV     [EBP+VAR_6C], EAX
8B 3D 18 50 40 00		MOV     EDI, DS:_ARGV
0F 8E 44 01 00 00		JLE     LOC_4014A4
31 DB		XOR     EBX, EBX
89 FE		MOV     ESI, EDI
8B 04 9E		MOV     EAX, [ESI+EBX*4]
89 04 24		MOV     [ESP], EAX; STR
E8 59 12 00 00		CALL    _STRLEN
8D 78 01		LEA     EDI, [EAX+1]
89 3C 24		MOV     [ESP], EDI; SIZE
E8 46 12 00 00		CALL    _MALLOC
8B 4D 94		MOV     ECX, [EBP+VAR_6C]
89 04 99		MOV     [ECX+EBX*4], EAX
8B 0C 9E		MOV     ECX, [ESI+EBX*4]
83 C3 01		ADD     EBX, 1
89 7C 24 08		MOV     [ESP+8], EDI; SIZE
89 04 24		MOV     [ESP], EAX; VOID *
89 4C 24 04		MOV     [ESP+4], ECX; SRC
E8 3A 12 00 00		CALL    _MEMCPY
3B 5D 90		CMP     EBX, [EBP+VAR_70]
75 C9		JNZ     SHORT LOC_401364
8B 45 8C		MOV     EAX, [EBP+VAR_74]
83 E8 04		SUB     EAX, 4
8B 75 94		MOV     ESI, [EBP+VAR_6C]
C7 04 06 00 00 00 00		MOV     DWORD PTR [ESI+EAX], 0
89 35 18 50 40 00		MOV     DS:_ARGV, ESI
E8 CA 0A 00 00		CALL    ___MAIN
A1 58 61 40 00		MOV     EAX, DS:__IMP____INITENV
8B 15 14 50 40 00		MOV     EDX, DS:_ENVP
89 10		MOV     [EAX], EDX
A1 14 50 40 00		MOV     EAX, DS:_ENVP
89 44 24 08		MOV     [ESP+8], EAX; ENVP
A1 18 50 40 00		MOV     EAX, DS:_ARGV
89 44 24 04		MOV     [ESP+4], EAX; ARGV
A1 1C 50 40 00		MOV     EAX, DS:_ARGC
89 04 24		MOV     [ESP], EAX; ARGC
E8 1E 01 00 00		CALL    _MAIN
8B 0D 08 50 40 00		MOV     ECX, DS:_MANAGEDAPP
A3 0C 50 40 00		MOV     DS:_MAINRET, EAX
85 C9		TEST    ECX, ECX
0F 84 B6 00 00 00		JZ      LOC_4014AB
8B 15 04 50 40 00		MOV     EDX, DS:_HAS_CCTOR
85 D2		TEST    EDX, EDX
75 0A		JNZ     SHORT LOC_401409
E8 D4 11 00 00		CALL    __CEXIT
A1 0C 50 40 00		MOV     EAX, DS:_MAINRET
8D 65 F4		LEA     ESP, [EBP-0CH]
5B		POP     EBX
5E		POP     ESI
5F		POP     EDI
5D		POP     EBP
C3		RETN
A1 3C 54 40 00		MOV     LOCK_FREE, DS:___NATIVE_STARTUP_STATE
BB 01 00 00 00		MOV     FIBERID, 1
83 F8 01		CMP     EAX, 1
0F 85 10 FE FF FF		JNZ     LOC_401234
C7 04 24 1F 00 00 00		MOV     DWORD PTR [ESP], 1FH
E8 B0 11 00 00		CALL    __AMSG_EXIT
A1 3C 54 40 00		MOV     EAX, DS:___NATIVE_STARTUP_STATE
83 F8 01		CMP     EAX, 1
0F 85 1B FE FF FF		JNZ     LOC_401259
C7 44 24 04 08 70 40 00		MOV     DWORD PTR [ESP+4], OFFSET ___XC_Z; LAST
C7 04 24 00 70 40 00		MOV     DWORD PTR [ESP], OFFSET ___CRT_XC_START__; FIRST
E8 96 11 00 00		CALL    __INITTERM
85 DB		TEST    NESTED, NESTED
C7 05 3C 54 40 00 02 00 00 00		MOV     DS:___NATIVE_STARTUP_STATE, 2
0F 85 FD FD FF FF		JNZ     LOC_401261
87 1D 38 54 40 00		XCHG    NESTED, DS:___NATIVE_STARTUP_LOCK
E9 F2 FD FF FF		JMP     LOC_401261
89 14 24		MOV     [ESP], EDX; LPSTARTUPINFO
FF 15 18 61 40 00		CALL    DS:__IMP__GETSTARTUPINFOA@4; GETSTARTUPINFOA(X)
83 EC 04		SUB     ESP, 4
E9 6E FD FF FF		JMP     LOC_4011EF
C7 05 3C 54 40 00 01 00 00 00		MOV     DS:___NATIVE_STARTUP_STATE, 1
C7 44 24 04 18 70 40 00		MOV     DWORD PTR [ESP+4], OFFSET ___XI_Z; LAST
C7 04 24 0C 70 40 00		MOV     DWORD PTR [ESP], OFFSET ___CRT_XC_END__; FIRST
E8 49 11 00 00		CALL    __INITTERM
E9 A7 FD FF FF		JMP     LOC_40124B
31 C0		XOR     EAX, EAX
E9 F6 FE FF FF		JMP     LOC_4013A1
89 04 24		MOV     [ESP], EAX; CODE
E8 3D 11 00 00		CALL    _EXIT
83 EC 0C		SUB     ESP, 0CH
C7 05 34 50 40 00 01 00 00 00		MOV     DS:_MINGW_APP_TYPE, 1
E8 CE 09 00 00		CALL    ___SECURITY_INIT_COOKIE
83 C4 0C		ADD     ESP, 0CH
E9 A6 FC FF FF		JMP     ___TMAINCRTSTARTUP
55		PUSH    EBP
83 EC 0C		SUB     ESP, 0CH
C7 05 34 50 40 00 00 00 00 00		MOV     DS:_MINGW_APP_TYPE, 0
E8 AE 09 00 00		CALL    ___SECURITY_INIT_COOKIE
83 C4 0C		ADD     ESP, 0CH
E9 86 FC FF FF		JMP     ___TMAINCRTSTARTUP
55		PUSH    EBP
55		PUSH    EBP
89 E5		MOV     EBP, ESP
83 E4 F0		AND     ESP, 0FFFFFFF0H
83 EC 10		SUB     ESP, 10H
E8 72 09 00 00		CALL    ___MAIN
C7 04 24 00 40 40 00		MOV     DWORD PTR [ESP], OFFSET BUFFER; "CIAO GHIDRA"
E8 DE 10 00 00		CALL    _PUTS
B8 00 00 00 00		MOV     EAX, 0
C9		LEAVE
C3		RETN
83 EC 1C		SUB     ESP, 1CH
8B 44 24 24		MOV     EAX, [ESP+1CH+DWREASON]
85 C0		TEST    EAX, EAX
74 15		JZ      SHORT LOC_401550
83 F8 03		CMP     EAX, 3
74 10		JZ      SHORT LOC_401550
B8 01 00 00 00		MOV     EAX, 1
83 C4 1C		ADD     ESP, 1CH
C2 0C 00		RETN    0CH
8B 54 24 28		MOV     EDX, [ESP+1CH+LPRESERVED]
89 44 24 04		MOV     [ESP+1CH+REASON], EAX; REASON
8B 44 24 20		MOV     EAX, [ESP+1CH+HDLLHANDLE]
89 54 24 08		MOV     [ESP+1CH+RESERVED], EDX; RESERVED
89 04 24		MOV     [ESP+1CH+VAR_1C], EAX; HDLLHANDLE
E8 08 0C 00 00		CALL    ___MINGW_TLSCALLBACK
B8 01 00 00 00		MOV     EAX, 1
83 C4 1C		ADD     ESP, 1CH
C2 0C 00		RETN    0CH
53		PUSH    EBX
83 EC 18		SUB     ESP, 18H
83 3D 14 30 40 00 02		CMP     __CRT_MT, 2
8B 44 24 24		MOV     EAX, [ESP+1CH+DWREASON]
74 0A		JZ      SHORT LOC_40159B
C7 05 14 30 40 00 02 00 00 00		MOV     __CRT_MT, 2
83 F8 02		CMP     EAX, 2
74 11		JZ      SHORT LOC_4015B1
83 F8 01		CMP     EAX, 1
74 3B		JZ      SHORT LOC_4015E0
83 C4 18		ADD     ESP, 18H
B8 01 00 00 00		MOV     EAX, 1
5B		POP     EBX
C2 0C 00		RETN    0CH
BB 30 70 40 00		MOV     EBX, OFFSET ___XD_Z
81 FB 30 70 40 00		CMP     PS, OFFSET ___XD_Z
74 E7		JZ      SHORT LOC_4015A5
66 90		XCHG    AX, AX
8B 03		MOV     EAX, [PS]
85 C0		TEST    EAX, EAX
74 02		JZ      SHORT LOC_4015C8
FF D0		CALL    EAX
83 C3 04		ADD     PS, 4
81 FB 30 70 40 00		CMP     PS, OFFSET ___XD_Z
75 ED		JNZ     SHORT LOC_4015C0
83 C4 18		ADD     ESP, 18H
B8 01 00 00 00		MOV     EAX, 1
5B		POP     PS
C2 0C 00		RETN    0CH
8B 44 24 28		MOV     EAX, [ESP+1CH+LPRESERVED]
C7 44 24 04 01 00 00 00		MOV     [ESP+1CH+REASON], 1; REASON
89 44 24 08		MOV     [ESP+1CH+RESERVED], EAX; RESERVED
8B 44 24 20		MOV     EAX, [ESP+1CH+HDLLHANDLE]
89 04 24		MOV     [ESP+1CH+VAR_1C], EAX; HDLLHANDLE
E8 74 0B 00 00		CALL    ___MINGW_TLSCALLBACK
EB A7		JMP     SHORT LOC_4015A5
31 C0		XOR     EAX, EAX
C3		RETN
A1 5C 61 40 00		MOV     EAX, DS:__IMP____LCONV_INIT
FF E0		JMP     EAX
8B 44 24 04		MOV     EAX, [ESP+CODEDPTR]
C3		RETN
8B 44 24 04		MOV     EAX, [ESP+PTR]
C3		RETN
53		PUSH    EBX
83 EC 28		SUB     ESP, 28H
A1 34 54 40 00		MOV     EAX, DS:___ONEXITBEGIN
89 04 24		MOV     [ESP+2CH+CODEDPTR], EAX; CODEDPTR
E8 CF FF FF FF		CALL    __DECODE_POINTER
83 F8 FF		CMP     EAX, 0FFFFFFFFH
89 44 24 18		MOV     [ESP+2CH+ONEXITBEGIN], EAX
0F 84 82 00 00 00		JZ      LOC_4016E0
C7 04 24 08 00 00 00		MOV     [ESP+2CH+CODEDPTR], 8
E8 96 0F 00 00		CALL    __LOCK
A1 34 54 40 00		MOV     EAX, DS:___ONEXITBEGIN
89 04 24		MOV     [ESP+2CH+CODEDPTR], EAX; CODEDPTR
E8 A9 FF FF FF		CALL    __DECODE_POINTER
89 44 24 18		MOV     [ESP+2CH+ONEXITBEGIN], EAX
A1 30 54 40 00		MOV     EAX, DS:___ONEXITEND
89 04 24		MOV     [ESP+2CH+CODEDPTR], EAX; CODEDPTR
E8 98 FF FF FF		CALL    __DECODE_POINTER
89 44 24 1C		MOV     [ESP+2CH+ONEXITEND], EAX
8D 44 24 1C		LEA     EAX, [ESP+2CH+ONEXITEND]
89 44 24 08		MOV     [ESP+2CH+VAR_24], EAX
8D 44 24 18		LEA     EAX, [ESP+2CH+ONEXITBEGIN]
89 44 24 04		MOV     [ESP+2CH+VAR_28], EAX
8B 44 24 30		MOV     EAX, [ESP+2CH+FUNC]
89 04 24		MOV     [ESP+2CH+CODEDPTR], EAX
E8 60 0F 00 00		CALL    ___DLLONEXIT
89 C3		MOV     EBX, EAX
8B 44 24 18		MOV     RETVAL, [ESP+2CH+ONEXITBEGIN]
89 04 24		MOV     [ESP+2CH+CODEDPTR], EAX; PTR
E8 7A FF FF FF		CALL    __ENCODE_POINTER
A3 34 54 40 00		MOV     DS:___ONEXITBEGIN, EAX
8B 44 24 1C		MOV     EAX, [ESP+2CH+ONEXITEND]
89 04 24		MOV     [ESP+2CH+CODEDPTR], EAX; PTR
E8 69 FF FF FF		CALL    __ENCODE_POINTER
C7 04 24 08 00 00 00		MOV     [ESP+2CH+CODEDPTR], 8
A3 30 54 40 00		MOV     DS:___ONEXITEND, EAX
E8 38 0F 00 00		CALL    __UNLOCK
83 C4 28		ADD     ESP, 28H
89 D8		MOV     EAX, RETVAL
5B		POP     RETVAL
C3		RETN
8B 44 24 30		MOV     EAX, [ESP+2CH+FUNC]
89 04 24		MOV     [ESP+2CH+CODEDPTR], EAX; FUNC
FF 15 84 61 40 00		CALL    DS:__IMP___ONEXIT
83 C4 28		ADD     ESP, 28H
5B		POP     EBX
C3		RETN
83 EC 1C		SUB     ESP, 1CH
8B 44 24 20		MOV     EAX, [ESP+1CH+FUNC]
89 04 24		MOV     [ESP+1CH+VAR_1C], EAX; FUNC
E8 31 FF FF FF		CALL    _MINGW_ONEXIT
85 C0		TEST    EAX, EAX
0F 94 C0		SETZ    AL
83 C4 1C		ADD     ESP, 1CH
0F B6 C0		MOVZX   EAX, AL
F7 D8		NEG     EAX
C3		RETN
55		PUSH    EBP
89 E5		MOV     EBP, ESP
53		PUSH    EBX
83 EC 14		SUB     ESP, 14H
8B 5D 08		MOV     EBX, [EBP+EXCEPTION_DATA]
8B 03		MOV     EAX, [EBX]
8B 00		MOV     EAX, [EAX]
3D 91 00 00 C0		CMP     EAX, 0C0000091H
77 4B		JA      SHORT LOC_401780
3D 8D 00 00 C0		CMP     EAX, 0C000008DH
0F 83 B0 00 00 00		JNB     LOC_4017F0
3D 05 00 00 C0		CMP     EAX, 0C0000005H
0F 85 D9 00 00 00		JNZ     LOC_401824
C7 44 24 04 00 00 00 00		MOV     DWORD PTR [ESP+4], 0; FUNCTION
C7 04 24 0B 00 00 00		MOV     DWORD PTR [ESP], 0BH; SIGNAL
E8 B9 0E 00 00		CALL    _SIGNAL
83 F8 01		CMP     OLD_HANDLER, 1
0F 84 18 01 00 00		JZ      LOC_401880
85 C0		TEST    OLD_HANDLER, OLD_HANDLER
74 2D		JZ      SHORT LOC_401799
C7 04 24 0B 00 00 00		MOV     DWORD PTR [ESP], 0BH
FF D0		CALL    OLD_HANDLER
EB 63		JMP     SHORT LOC_4017DA
3D 94 00 00 C0		CMP     EAX, 0C0000094H
74 29		JZ      SHORT LOC_4017B0
3D 96 00 00 C0		CMP     EAX, 0C0000096H
0F 84 9D 00 00 00		JZ      LOC_40182F
3D 93 00 00 C0		CMP     EAX, 0C0000093H
74 57		JZ      SHORT LOC_4017F0
A1 44 50 40 00		MOV     EAX, DS:___MINGW_OLDEXCPT_HANDLER
85 C0		TEST    EAX, EAX
74 3D		JZ      SHORT LOC_4017DF
89 5D 08		MOV     [EBP+EXCEPTION_DATA], EBX
8B 5D FC		MOV     EBX, [EBP+VAR_4]
C9		LEAVE
FF E0		JMP     EAX
C7 44 24 04 00 00 00 00		MOV     DWORD PTR [ESP+4], 0; FUNCTION
C7 04 24 08 00 00 00		MOV     DWORD PTR [ESP], 8; SIGNAL
E8 54 0E 00 00		CALL    _SIGNAL
83 F8 01		CMP     OLD_HANDLER, 1
0F 84 D3 00 00 00		JZ      LOC_4018A0
85 C0		TEST    OLD_HANDLER, OLD_HANDLER
74 C8		JZ      SHORT LOC_401799
C7 04 24 08 00 00 00		MOV     DWORD PTR [ESP], 8
FF D0		CALL    OLD_HANDLER
B8 FF FF FF FF		MOV     EAX, 0FFFFFFFFH
8B 5D FC		MOV     EBX, [EBP+VAR_4]
C9		LEAVE
C2 04 00		RETN    4
C7 44 24 04 00 00 00 00		MOV     DWORD PTR [ESP+4], 0; FUNCTION
C7 04 24 08 00 00 00		MOV     DWORD PTR [ESP], 8; SIGNAL
E8 14 0E 00 00		CALL    _SIGNAL
83 F8 01		CMP     OLD_HANDLER, 1
75 C4		JNZ     SHORT LOC_4017CD
C7 44 24 04 01 00 00 00		MOV     DWORD PTR [ESP+4], 1; FUNCTION
C7 04 24 08 00 00 00		MOV     DWORD PTR [ESP], 8; SIGNAL
E8 FB 0D 00 00		CALL    _SIGNAL
E8 CE 05 00 00		CALL    _FPRESET
EB B6		JMP     SHORT LOC_4017DA
3D 1D 00 00 C0		CMP     EAX, 0C000001DH
0F 85 6A FF FF FF		JNZ     LOC_401799
C7 44 24 04 00 00 00 00		MOV     DWORD PTR [ESP+4], 0; FUNCTION
C7 04 24 04 00 00 00		MOV     DWORD PTR [ESP], 4; SIGNAL
E8 D5 0D 00 00		CALL    _SIGNAL
83 F8 01		CMP     OLD_HANDLER, 1
74 18		JZ      SHORT LOC_401860
85 C0		TEST    OLD_HANDLER, OLD_HANDLER
0F 84 49 FF FF FF		JZ      LOC_401799
C7 04 24 04 00 00 00		MOV     DWORD PTR [ESP], 4
FF D0		CALL    OLD_HANDLER
E9 7C FF FF FF		JMP     LOC_4017DA
C7 44 24 04 01 00 00 00		MOV     DWORD PTR [ESP+4], 1; FUNCTION
C7 04 24 04 00 00 00		MOV     DWORD PTR [ESP], 4; SIGNAL
E8 A4 0D 00 00		CALL    _SIGNAL
E9 61 FF FF FF		JMP     LOC_4017DA
C7 44 24 04 01 00 00 00		MOV     DWORD PTR [ESP+4], 1; FUNCTION
C7 04 24 0B 00 00 00		MOV     DWORD PTR [ESP], 0BH; SIGNAL
E8 84 0D 00 00		CALL    _SIGNAL
E9 41 FF FF FF		JMP     LOC_4017DA
C7 44 24 04 01 00 00 00		MOV     DWORD PTR [ESP+4], 1; FUNCTION
C7 04 24 08 00 00 00		MOV     DWORD PTR [ESP], 8; SIGNAL
E8 64 0D 00 00		CALL    _SIGNAL
E9 21 FF FF FF		JMP     LOC_4017DA
31 C0		XOR     EAX, EAX
C3		RETN
83 EC 3C		SUB     ESP, 3CH
A1 48 50 40 00		MOV     EAX, DS:_STUSERMATHERR
DD 44 24 48		FLD     [ESP+3CH+A1]
DD 44 24 50		FLD     [ESP+3CH+A2]
85 C0		TEST    EAX, EAX
DD 44 24 58		FLD     [ESP+3CH+RSLT]
74 29		JZ      SHORT LOC_401911
D9 CA		FXCH    ST(2)
8B 54 24 40		MOV     EDX, [ESP+3CH+TYP]
DD 5C 24 18		FSTP    [ESP+3CH+EX.ARG1]
DD 5C 24 20		FSTP    [ESP+3CH+EX.ARG2]
89 54 24 10		MOV     [ESP+3CH+EX.TYPE], EDX
8B 54 24 44		MOV     EDX, [ESP+3CH+NAME]
DD 5C 24 28		FSTP    [ESP+3CH+EX.RETVAL]
89 54 24 14		MOV     [ESP+3CH+EX.NAME], EDX
8D 54 24 10		LEA     EDX, [ESP+3CH+EX]
89 14 24		MOV     [ESP+3CH+VAR_3C], EDX; _EXCEPTION *
FF D0		CALL    EAX ; _STUSERMATHERR
EB 06		JMP     SHORT LOC_401917
DD D8		FSTP    ST
DD D8		FSTP    ST
DD D8		FSTP    ST
83 C4 3C		ADD     ESP, 3CH
C3		RETN
8B 44 24 04		MOV     EAX, [ESP+F]
A3 48 50 40 00		MOV     DS:_STUSERMATHERR, EAX
E9 F2 0C 00 00		JMP     ___SETUSERMATHERR
FF 25 64 61 40 00		JMP     DS:__IMP____SETUSERMATHERR
83 EC 3C		SUB     ESP, 3CH
B9 10 40 40 00		MOV     ECX, OFFSET AUNKNOWNERROR; "UNKNOWN ERROR"
8B 44 24 40		MOV     EAX, [ESP+3CH+PEXCEPT]
8B 10		MOV     EDX, [EAX]
83 EA 01		SUB     EDX, 1
83 FA 05		CMP     EDX, 5
77 07		JA      SHORT LOC_40194D
8B 0C 95 2C 41 40 00		MOV     ECX, DS:_CSWTCH_5[EDX*4]
DD 40 18		FLD     QWORD PTR [EAX+18H]
DD 5C 24 20		FSTP    [ESP+3CH+VAR_1C]
DD 40 10		FLD     QWORD PTR [EAX+10H]
DD 5C 24 18		FSTP    [ESP+3CH+VAR_24]
DD 40 08		FLD     QWORD PTR [EAX+8]
DD 5C 24 10		FSTP    [ESP+3CH+VAR_2C]
8B 40 04		MOV     EAX, [EAX+4]
89 4C 24 08		MOV     [ESP+3CH+VAR_34], TYPE
C7 44 24 04 20 40 40 00		MOV     [ESP+3CH+FORMAT], OFFSET FORMAT; "_MATHERR(): %S IN %S(%G, %G)  (RETVAL=%"...
89 44 24 0C		MOV     [ESP+3CH+VAR_30], EAX
A1 7C 61 40 00		MOV     EAX, DS:__IMP___IOB
83 C0 40		ADD     EAX, 40H ; '@'
89 04 24		MOV     [ESP+3CH+STREAM], EAX; STREAM
E8 A3 0C 00 00		CALL    _FPRINTF
31 C0		XOR     EAX, EAX
83 C4 3C		ADD     ESP, 3CH
C3		RETN
53		PUSH    ARGP
83 EC 18		SUB     ESP, 18H
A1 7C 61 40 00		MOV     EAX, DS:__IMP___IOB
C7 44 24 08 1B 00 00 00		MOV     [ESP+1CH+ELEMENTCOUNT], 1BH; ELEMENTCOUNT
C7 44 24 04 01 00 00 00		MOV     [ESP+1CH+ELEMENTSIZE], 1; ELEMENTSIZE
8D 5C 24 24		LEA     ARGP, [ESP+1CH+ARGLIST]
C7 04 24 44 41 40 00		MOV     [ESP+1CH+BUFFER], OFFSET AMINGWW64RUNTIM; "MINGW-W64 RUNTIME FAILURE:\N"
83 C0 40		ADD     EAX, 40H ; '@'
89 44 24 0C		MOV     [ESP+1CH+STREAM], EAX; STREAM
E8 70 0C 00 00		CALL    _FWRITE
8B 44 24 20		MOV     EAX, [ESP+1CH+MSG]
89 5C 24 08		MOV     [ESP+1CH+ELEMENTCOUNT], ARGP; ARGLIST
89 44 24 04		MOV     [ESP+1CH+ELEMENTSIZE], EAX; FORMAT
A1 7C 61 40 00		MOV     EAX, DS:__IMP___IOB
83 C0 40		ADD     EAX, 40H ; '@'
89 04 24		MOV     [ESP+1CH+BUFFER], EAX; STREAM
E8 5C 0C 00 00		CALL    _VFPRINTF
E8 5F 0C 00 00		CALL    _ABORT
57		PUSH    EDI
56		PUSH    ESI
53		PUSH    EBX
83 EC 30		SUB     ESP, 30H
8B 35 50 50 40 00		MOV     ESI, DS:_MAXSECTIONS
85 F6		TEST    ESI, ESI
0F 8E D9 00 00 00		JLE     LOC_401ADD
8B 3D 54 50 40 00		MOV     EDI, DS:_THE_SECS
31 DB		XOR     EBX, EBX
8D 57 04		LEA     EDX, [EDI+4]
90		NOP
8B 0A		MOV     ECX, [EDX]
39 C1		CMP     ECX, ADDR
77 0E		JA      SHORT LOC_401A24
8B 7A 04		MOV     EDI, [EDX+4]
03 4F 08		ADD     ECX, [EDI+8]
39 C8		CMP     ADDR, ECX
0F 82 B2 00 00 00		JB      LOC_401AD6
83 C3 01		ADD     I, 1
83 C2 0C		ADD     EDX, 0CH
39 F3		CMP     I, ESI
75 E2		JNZ     SHORT LOC_401A10
89 04 24		MOV     [ESP+3CH+P], ADDR; P
89 C3		MOV     EBX, ADDR
E8 F8 08 00 00		CALL    ___MINGW_GETSECTIONFORADDRESS
85 C0		TEST    EAX, EAX
89 C7		MOV     EDI, EAX
0F 84 D8 00 00 00		JZ      LOC_401B1A
8D 1C 76		LEA     ADDR, [ESI+ESI*2]
8B 35 54 50 40 00		MOV     ESI, DS:_THE_SECS
C1 E3 02		SHL     EBX, 2
01 DE		ADD     ESI, EBX
89 46 08		MOV     [ESI+8], H
C7 06 00 00 00 00		MOV     DWORD PTR [ESI], 0
E8 D2 09 00 00		CALL    __GETPEIMAGEBASE
03 47 0C		ADD     EAX, [H+0CH]
89 46 04		MOV     [ESI+4], EAX
8D 44 24 14		LEA     EAX, [ESP+3CH+B]
C7 44 24 08 1C 00 00 00		MOV     [ESP+3CH+DWLENGTH], 1CH; DWLENGTH
89 44 24 04		MOV     [ESP+3CH+LPBUFFER], EAX; LPBUFFER
A1 54 50 40 00		MOV     EAX, DS:_THE_SECS
8B 44 18 04		MOV     EAX, [EAX+EBX+4]
89 04 24		MOV     [ESP+3CH+P], EAX; LPADDRESS
FF 15 48 61 40 00		CALL    DS:__IMP__VIRTUALQUERY@12; VIRTUALQUERY(X,X,X)
83 EC 0C		SUB     ESP, 0CH
85 C0		TEST    EAX, EAX
74 6D		JZ      SHORT LOC_401AFA
8B 44 24 28		MOV     EAX, [ESP+3CH+B.PROTECT]
8D 50 FC		LEA     EDX, [EAX-4]
83 E2 FB		AND     EDX, 0FFFFFFFBH
74 36		JZ      SHORT LOC_401ACF
83 E8 40		SUB     EAX, 40H ; '@'
83 E0 BF		AND     EAX, 0FFFFFFBFH
74 2E		JZ      SHORT LOC_401ACF
8B 44 24 20		MOV     EAX, [ESP+3CH+B.REGIONSIZE]
03 1D 54 50 40 00		ADD     EBX, DS:_THE_SECS
C7 44 24 08 40 00 00 00		MOV     [ESP+3CH+DWLENGTH], 40H ; '@'; FLNEWPROTECT
89 44 24 04		MOV     [ESP+3CH+LPBUFFER], EAX; DWSIZE
8B 44 24 14		MOV     EAX, [ESP+3CH+B.BASEADDRESS]
89 5C 24 0C		MOV     [ESP+3CH+LPFLOLDPROTECT], EBX; LPFLOLDPROTECT
89 04 24		MOV     [ESP+3CH+P], EAX; LPADDRESS
FF 15 44 61 40 00		CALL    DS:__IMP__VIRTUALPROTECT@16; VIRTUALPROTECT(X,X,X,X)
83 EC 10		SUB     ESP, 10H
85 C0		TEST    EAX, EAX
74 15		JZ      SHORT LOC_401AE4
83 05 50 50 40 00 01		ADD     DS:_MAXSECTIONS, 1
83 C4 30		ADD     ESP, 30H
5B		POP     EBX
5E		POP     ESI
5F		POP     EDI
C3		RETN
31 F6		XOR     ESI, ESI
E9 4A FF FF FF		JMP     LOC_401A2E
FF 15 14 61 40 00		CALL    DS:__IMP__GETLASTERROR@0; GETLASTERROR()
C7 04 24 B4 41 40 00		MOV     [ESP+3CH+P], OFFSET MSG; "  VIRTUALPROTECT FAILED WITH CODE 0X%X"
89 44 24 04		MOV     [ESP+3CH+LPBUFFER], EAX
E8 96 FE FF FF		CALL    ___REPORT_ERROR
A1 54 50 40 00		MOV     EAX, DS:_THE_SECS
8B 44 18 04		MOV     EAX, [EAX+EBX+4]
89 44 24 08		MOV     [ESP+3CH+DWLENGTH], EAX
8B 47 08		MOV     EAX, [H+8]
C7 04 24 80 41 40 00		MOV     [ESP+3CH+P], OFFSET AVIRTUALQUERYFA; "  VIRTUALQUERY FAILED FOR %D BYTES AT A"...
89 44 24 04		MOV     [ESP+3CH+LPBUFFER], EAX
E8 76 FE FF FF		CALL    ___REPORT_ERROR
89 5C 24 04		MOV     [ESP+3CH+LPBUFFER], ADDR
C7 04 24 60 41 40 00		MOV     [ESP+3CH+P], OFFSET AADDRESSPHASNOI; "ADDRESS %P HAS NO IMAGE-SECTION"
E8 66 FE FF FF		CALL    ___REPORT_ERROR
A1 4C 50 40 00		MOV     EAX, DS:_WAS_INIT_60804
85 C0		TEST    EAX, EAX
74 07		JZ      SHORT LOC_401B40
C3		RETN
55		PUSH    EBP
89 E5		MOV     EBP, ESP
57		PUSH    EDI
56		PUSH    ESI
53		PUSH    EBX
83 EC 4C		SUB     ESP, 4CH
C7 05 4C 50 40 00 01 00 00 00		MOV     DS:_WAS_INIT_60804, 1
E8 28 08 00 00		CALL    ___MINGW_GETSECTIONCOUNT
8D 04 40		LEA     MSECS, [MSECS+MSECS*2]
8D 04 85 1E 00 00 00		LEA     EAX, DS:1EH[EAX*4]
83 E0 F0		AND     EAX, 0FFFFFFF0H
E8 F6 09 00 00		CALL    ___CHKSTK_MS
C7 05 50 50 40 00 00 00 00 00		MOV     DS:_MAXSECTIONS, 0
29 C4		SUB     ESP, EAX
8D 44 24 1F		LEA     EAX, [ESP+5CH+VAR_3D]
83 E0 F0		AND     EAX, 0FFFFFFF0H
A3 54 50 40 00		MOV     DS:_THE_SECS, EAX
B8 68 44 40 00		MOV     EAX, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
2D 68 44 40 00		SUB     EAX, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
83 F8 07		CMP     EAX, 7
0F 8E 9B 00 00 00		JLE     LOC_401C30
83 F8 0B		CMP     EAX, 0BH
0F 8E 55 01 00 00		JLE     LOC_401CF3
A1 68 44 40 00		MOV     EAX, DS:__RUNTIME_PSEUDO_RELOC_LIST_END___0
85 C0		TEST    EAX, EAX
0F 85 8D 00 00 00		JNZ     LOC_401C38
A1 6C 44 40 00		MOV     EAX, DS:DWORD_40446C
85 C0		TEST    EAX, EAX
0F 85 80 00 00 00		JNZ     LOC_401C38
8B 3D 70 44 40 00		MOV     EDI, DS:DWORD_404470
BB 74 44 40 00		MOV     EBX, OFFSET UNK_404474
85 FF		TEST    EDI, EDI
0F 84 2D 01 00 00		JZ      LOC_401CF8
BB 68 44 40 00		MOV     EBX, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
8B 43 08		MOV     EAX, [EBX+8]
83 F8 01		CMP     EAX, 1
0F 85 FB 01 00 00		JNZ     LOC_401DD7
83 C3 0C		ADD     EBX, 0CH
81 FB 68 44 40 00		CMP     EBX, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
73 49		JNB     SHORT LOC_401C30
8B 13		MOV     EDX, [EBX]
8B 4B 04		MOV     ECX, [EBX+4]
8B 82 00 00 40 00		MOV     EAX, [EDX+400000H]
8D B1 00 00 40 00		LEA     ESI, [ECX+400000H]
89 45 C4		MOV     [EBP-3CH], EAX
0F B6 43 08		MOVZX   EAX, BYTE PTR [EBX+8]
83 F8 10		CMP     EAX, 10H
0F 84 0A 01 00 00		JZ      LOC_401D12
83 F8 20		CMP     EAX, 20H ; ' '
0F 84 85 01 00 00		JZ      LOC_401D96
83 F8 08		CMP     EAX, 8
0F 84 4D 01 00 00		JZ      LOC_401D67
89 44 24 04		MOV     [ESP+5CH+LPBUFFER], EAX
C7 04 24 10 42 40 00		MOV     [ESP+5CH+MSG], OFFSET AUNKNOWNPSEUDOR; "  UNKNOWN PSEUDO RELOCATION BIT SIZE %D"...
E8 66 FD FF FF		CALL    ___REPORT_ERROR
8D 65 F4		LEA     ESP, [EBP-0CH]
5B		POP     EBX
5E		POP     ESI
5F		POP     EDI
5D		POP     EBP
C3		RETN
BB 68 44 40 00		MOV     EBX, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
81 FB 68 44 40 00		CMP     EBX, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
73 EB		JNB     SHORT LOC_401C30
8B 73 04		MOV     ESI, [EBX+4]
8B 13		MOV     EDX, [EBX]
83 C3 08		ADD     EBX, 8
03 96 00 00 40 00		ADD     EDX, [ESI+400000H]
8D 86 00 00 40 00		LEA     EAX, [ESI+400000H]; ADDR
89 55 CC		MOV     [EBP-34H], EDX
E8 8F FD FF FF		CALL    _MARK_SECTION_WRITABLE
8B 45 CC		MOV     EAX, [EBP-34H]
81 FB 68 44 40 00		CMP     EBX, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
89 86 00 00 40 00		MOV     [ESI+400000H], EAX
72 D3		JB      SHORT LOC_401C45
A1 50 50 40 00		MOV     EAX, DS:_MAXSECTIONS
31 DB		XOR     EBX, EBX
85 C0		TEST    EAX, EAX
7F 0E		JG      SHORT LOC_401C8B
EB B1		JMP     SHORT LOC_401C30
83 C3 01		ADD     EBX, 1
3B 1D 50 50 40 00		CMP     EBX, DS:_MAXSECTIONS
7D A5		JGE     SHORT LOC_401C30
8D 3C 5B		LEA     EDI, [EBX+EBX*2]
A1 54 50 40 00		MOV     EAX, DS:_THE_SECS
8D 34 BD 00 00 00 00		LEA     ESI, DS:0[EDI*4]
01 F0		ADD     EAX, ESI
8B 10		MOV     EDX, [EAX]
85 D2		TEST    EDX, EDX
74 DE		JZ      SHORT LOC_401C80
8D 4D CC		LEA     ECX, [EBP-34H]
C7 44 24 08 1C 00 00 00		MOV     [ESP+5CH+DWLENGTH], 1CH; DWLENGTH
89 4C 24 04		MOV     [ESP+5CH+LPBUFFER], ECX; LPBUFFER
8B 40 04		MOV     EAX, [EAX+4]
89 04 24		MOV     [ESP+5CH+MSG], EAX; LPADDRESS
FF 15 48 61 40 00		CALL    DS:__IMP__VIRTUALQUERY@12; VIRTUALQUERY(X,X,X)
83 EC 0C		SUB     ESP, 0CH
85 C0		TEST    EAX, EAX
0F 84 EA 00 00 00		JZ      LOC_401DB2
8D 45 C8		LEA     EAX, [EBP-38H]
89 44 24 0C		MOV     [ESP+5CH+LPFLOLDPROTECT], EAX; LPFLOLDPROTECT
A1 54 50 40 00		MOV     EAX, DS:_THE_SECS
8B 04 B8		MOV     EAX, [EAX+EDI*4]
89 44 24 08		MOV     [ESP+5CH+DWLENGTH], EAX; FLNEWPROTECT
8B 45 D8		MOV     EAX, [EBP-28H]
89 44 24 04		MOV     [ESP+5CH+LPBUFFER], EAX; DWSIZE
8B 45 CC		MOV     EAX, [EBP-34H]
89 04 24		MOV     [ESP+5CH+MSG], EAX; LPADDRESS
FF 15 44 61 40 00		CALL    DS:__IMP__VIRTUALPROTECT@16; VIRTUALPROTECT(X,X,X,X)
83 EC 10		SUB     ESP, 10H
EB 8D		JMP     SHORT LOC_401C80
BB 68 44 40 00		MOV     EBX, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
8B 33		MOV     ESI, [EBX]
85 F6		TEST    ESI, ESI
0F 85 3B FF FF FF		JNZ     LOC_401C3D
8B 4B 04		MOV     ECX, [EBX+4]
85 C9		TEST    ECX, ECX
0F 84 C3 FE FF FF		JZ      LOC_401BD0
E9 2B FF FF FF		JMP     LOC_401C3D
0F B7 81 00 00 40 00		MOVZX   EAX, WORD PTR [ECX+400000H]
89 4D C0		MOV     [EBP-40H], ECX
89 C7		MOV     EDI, EAX
81 CF 00 00 FF FF		OR      EDI, 0FFFF0000H
66 83 B9 00 00 40 00 00		CMP     WORD PTR [ECX+400000H], 0
0F 48 C7		CMOVS   EAX, EDI
8B 7D C4		MOV     EDI, [EBP-3CH]
2D 00 00 40 00		SUB     EAX, 400000H
29 D0		SUB     EAX, EDX
01 C7		ADD     EDI, EAX
89 F0		MOV     EAX, ESI; ADDR
89 7D CC		MOV     [EBP-34H], EDI
E8 AB FC FF FF		CALL    _MARK_SECTION_WRITABLE
0F B7 45 CC		MOVZX   EAX, WORD PTR [EBP-34H]
8B 4D C0		MOV     ECX, [EBP-40H]
66 89 81 00 00 40 00		MOV     [ECX+400000H], AX
83 C3 0C		ADD     EBX, 0CH
81 FB 68 44 40 00		CMP     EBX, OFFSET __RUNTIME_PSEUDO_RELOC_LIST_END___0
0F 82 85 FE FF FF		JB      LOC_401BE7
E9 0B FF FF FF		JMP     LOC_401C72
0F B6 06		MOVZX   EAX, BYTE PTR [ESI]
8B 7D C4		MOV     EDI, [EBP-3CH]
89 C1		MOV     ECX, EAX
81 C9 00 FF FF FF		OR      ECX, 0FFFFFF00H
80 3E 00		CMP     BYTE PTR [ESI], 0
0F 48 C1		CMOVS   EAX, ECX
2D 00 00 40 00		SUB     EAX, 400000H
29 D0		SUB     EAX, EDX
01 C7		ADD     EDI, EAX
89 F0		MOV     EAX, ESI; ADDR
89 7D CC		MOV     [EBP-34H], EDI
E8 62 FC FF FF		CALL    _MARK_SECTION_WRITABLE
0F B6 45 CC		MOVZX   EAX, BYTE PTR [EBP-34H]
88 06		MOV     [ESI], AL
EB BD		JMP     SHORT LOC_401D53
8B 06		MOV     EAX, [ESI]
8B 7D C4		MOV     EDI, [EBP-3CH]
2D 00 00 40 00		SUB     EAX, 400000H
2B 03		SUB     EAX, [EBX]
01 C7		ADD     EDI, EAX
89 F0		MOV     EAX, ESI; ADDR
89 7D CC		MOV     [EBP-34H], EDI
E8 42 FC FF FF		CALL    _MARK_SECTION_WRITABLE
89 3E		MOV     [ESI], EDI
EB A1		JMP     SHORT LOC_401D53
8B 0D 54 50 40 00		MOV     ECX, DS:_THE_SECS
01 F1		ADD     ECX, ESI
8B 41 04		MOV     EAX, [ECX+4]
89 44 24 08		MOV     [ESP+5CH+DWLENGTH], EAX
8B 41 08		MOV     EAX, [ECX+8]
8B 40 08		MOV     EAX, [EAX+8]
C7 04 24 80 41 40 00		MOV     [ESP+5CH+MSG], OFFSET AVIRTUALQUERYFA; "  VIRTUALQUERY FAILED FOR %D BYTES AT A"...
89 44 24 04		MOV     [ESP+5CH+LPBUFFER], EAX
E8 B9 FB FF FF		CALL    ___REPORT_ERROR
89 44 24 04		MOV     [ESP+5CH+LPBUFFER], EAX
C7 04 24 DC 41 40 00		MOV     [ESP+5CH+MSG], OFFSET AUNKNOWNPSEUDOR_0; "  UNKNOWN PSEUDO RELOCATION PROTOCOL VE"...
E8 A9 FB FF FF		CALL    ___REPORT_ERROR
DB E3		FNINIT
C3		RETN
A1 10 30 40 00		MOV     EAX, _P_60020
8B 00		MOV     EAX, [EAX]
85 C0		TEST    EAX, EAX
74 1F		JZ      SHORT LOCRET_401E2A
83 EC 0C		SUB     ESP, 0CH
66 90		XCHG    AX, AX
FF D0		CALL    EAX
A1 10 30 40 00		MOV     EAX, _P_60020
8D 50 04		LEA     EDX, [EAX+4]
8B 40 04		MOV     EAX, [EAX+4]
89 15 10 30 40 00		MOV     _P_60020, EDX
85 C0		TEST    EAX, EAX
75 E9		JNZ     SHORT LOC_401E10
83 C4 0C		ADD     ESP, 0CH
F3 C3		REP RETN
53		PUSH    EBX
83 EC 18		SUB     ESP, 18H
8B 1D 60 26 40 00		MOV     EBX, DS:___CTOR_LIST__
83 FB FF		CMP     NPTRS, 0FFFFFFFFH
74 21		JZ      SHORT LOC_401E60
85 DB		TEST    I, I
74 0C		JZ      SHORT LOC_401E4F
FF 14 9D 60 26 40 00		CALL    DS:___CTOR_LIST__[I*4]
83 EB 01		SUB     EBX, 1
75 F4		JNZ     SHORT LOC_401E43
C7 04 24 00 1E 40 00		MOV     [ESP+1CH+FUNC], OFFSET ___DO_GLOBAL_DTORS; FUNC
E8 A5 F8 FF FF		CALL    _ATEXIT
83 C4 18		ADD     ESP, 18H
5B		POP     I
C3		RETN
31 DB		XOR     NPTRS, NPTRS
EB 02		JMP     SHORT LOC_401E66
89 C3		MOV     NPTRS, EAX
8D 43 01		LEA     EAX, [NPTRS+1]
8B 14 85 60 26 40 00		MOV     EDX, DS:___CTOR_LIST__[EAX*4]
85 D2		TEST    EDX, EDX
75 F0		JNZ     SHORT LOC_401E64
EB C9		JMP     SHORT LOC_401E3F
A1 58 50 40 00		MOV     EAX, DS:_INITIALIZED
85 C0		TEST    EAX, EAX
74 07		JZ      SHORT LOC_401E90
F3 C3		REP RETN
C7 05 58 50 40 00 01 00 00 00		MOV     DS:_INITIALIZED, 1
EB 94		JMP     SHORT ___DO_GLOBAL_CTORS
53		PUSH    EBX
55		PUSH    EBP
57		PUSH    EDI
56		PUSH    ESI
53		PUSH    EBX
83 EC 2C		SUB     ESP, 2CH
A1 24 30 40 00		MOV     EAX, ___SECURITY_COOKIE
C7 44 24 10 00 00 00 00		MOV     DWORD PTR [ESP+3CH+SYSTIME], 0
C7 44 24 14 00 00 00 00		MOV     DWORD PTR [ESP+3CH+SYSTIME+4], 0
3D 4E E6 40 BB		CMP     EAX, 0BB40E64EH
74 0F		JZ      SHORT LOC_401ED2
F7 D0		NOT     EAX
A3 28 30 40 00		MOV     ___SECURITY_COOKIE_COMPLEMENT, EAX
83 C4 2C		ADD     ESP, 2CH
5B		POP     EBX
5E		POP     ESI
5F		POP     EDI
5D		POP     EBP
C3		RETN
8D 44 24 10		LEA     EAX, [ESP+3CH+SYSTIME]
89 04 24		MOV     [ESP+3CH+LPSYSTEMTIMEASFILETIME], EAX; LPSYSTEMTIMEASFILETIME
FF 15 1C 61 40 00		CALL    DS:__IMP__GETSYSTEMTIMEASFILETIME@4; GETSYSTEMTIMEASFILETIME(X)
83 EC 04		SUB     ESP, 4
8B 5C 24 10		MOV     EBX, DWORD PTR [ESP+3CH+SYSTIME]
33 5C 24 14		XOR     COOKIE, DWORD PTR [ESP+3CH+SYSTIME+4]
FF 15 0C 61 40 00		CALL    DS:__IMP__GETCURRENTPROCESSID@0; GETCURRENTPROCESSID()
89 C5		MOV     EBP, EAX
FF 15 10 61 40 00		CALL    DS:__IMP__GETCURRENTTHREADID@0; GETCURRENTTHREADID()
89 C7		MOV     EDI, EAX
FF 15 20 61 40 00		CALL    DS:__IMP__GETTICKCOUNT@0; GETTICKCOUNT()
89 C6		MOV     ESI, EAX
8D 44 24 18		LEA     EAX, [ESP+3CH+PERFCTR]
89 04 24		MOV     [ESP+3CH+LPSYSTEMTIMEASFILETIME], EAX; LPPERFORMANCECOUNT
FF 15 2C 61 40 00		CALL    DS:__IMP__QUERYPERFORMANCECOUNTER@4; QUERYPERFORMANCECOUNTER(X)
83 EC 04		SUB     ESP, 4
33 5C 24 18		XOR     EBX, DWORD PTR [ESP+3CH+PERFCTR]
33 5C 24 1C		XOR     EBX, DWORD PTR [ESP+3CH+PERFCTR+4]
31 EB		XOR     EBX, EBP
31 DF		XOR     EDI, EBX
31 FE		XOR     ESI, EDI
81 FE 4E E6 40 BB		CMP     COOKIE, 0BB40E64EH
74 18		JZ      SHORT LOC_401F40
89 F0		MOV     EAX, COOKIE
F7 D0		NOT     EAX
89 35 24 30 40 00		MOV     ___SECURITY_COOKIE, COOKIE
A3 28 30 40 00		MOV     ___SECURITY_COOKIE_COMPLEMENT, EAX
83 C4 2C		ADD     ESP, 2CH
5B		POP     EBX
5E		POP     COOKIE
5F		POP     EDI
5D		POP     EBP
C3		RETN
B8 B0 19 BF 44		MOV     EAX, 44BF19B0H
BE 4F E6 40 BB		MOV     COOKIE, 0BB40E64FH
EB E0		JMP     SHORT LOC_401F2C
55		PUSH    EBP
89 E5		MOV     EBP, ESP
83 EC 28		SUB     ESP, 28H
C7 05 80 53 40 00 09 04 00 C0		MOV     DS:_GS_EXCEPTIONRECORD.EXCEPTIONCODE, 0C0000409H
8B 45 04		MOV     EAX, [EBP+4]
8D 55 04		LEA     EDX, [EBP+4]
C7 05 84 53 40 00 01 00 00 00		MOV     DS:_GS_EXCEPTIONRECORD.EXCEPTIONFLAGS, 1
C7 04 24 00 00 00 00		MOV     DWORD PTR [ESP], 0; LPTOPLEVELEXCEPTIONFILTER
89 15 44 51 40 00		MOV     DS:_GS_CONTEXTRECORD._ESP, EDX
A3 38 51 40 00		MOV     DS:_GS_CONTEXTRECORD._EIP, EAX
A3 8C 53 40 00		MOV     DS:_GS_EXCEPTIONRECORD.EXCEPTIONADDRESS, EAX
8B 45 08		MOV     EAX, [EBP+STACKCOOKIE]
A3 2C 51 40 00		MOV     DS:_GS_CONTEXTRECORD._ECX, EAX
A1 24 30 40 00		MOV     EAX, ___SECURITY_COOKIE
89 45 F0		MOV     [EBP+COOKIE], EAX
A1 28 30 40 00		MOV     EAX, ___SECURITY_COOKIE_COMPLEMENT
89 45 F4		MOV     [EBP+COOKIE+4], EAX
FF 15 30 61 40 00		CALL    DS:__IMP__SETUNHANDLEDEXCEPTIONFILTER@4; SETUNHANDLEDEXCEPTIONFILTER(X)
83 EC 04		SUB     ESP, 4
C7 04 24 3C 42 40 00		MOV     DWORD PTR [ESP], OFFSET _GS_EXCEPTIONPOINTERS; EXCEPTIONINFO
FF 15 40 61 40 00		CALL    DS:__IMP__UNHANDLEDEXCEPTIONFILTER@4; UNHANDLEDEXCEPTIONFILTER(X)
83 EC 04		SUB     ESP, 4
FF 15 08 61 40 00		CALL    DS:__IMP__GETCURRENTPROCESS@0; GETCURRENTPROCESS()
C7 44 24 04 09 04 00 C0		MOV     DWORD PTR [ESP+4], 0C0000409H; UEXITCODE
89 04 24		MOV     [ESP], EAX; HPROCESS
FF 15 38 61 40 00		CALL    DS:__IMP__TERMINATEPROCESS@8; TERMINATEPROCESS(X,X)
83 EC 08		SUB     ESP, 8
E8 69 06 00 00		CALL    _ABORT
55		PUSH    EBP
57		PUSH    EDI
56		PUSH    ESI
53		PUSH    EBX
83 EC 1C		SUB     ESP, 1CH
C7 04 24 08 54 40 00		MOV     [ESP+2CH+LPCRITICALSECTION], OFFSET ___MINGWTHR_CS; LPCRITICALSECTION
FF 15 04 61 40 00		CALL    DS:__IMP__ENTERCRITICALSECTION@4; ENTERCRITICALSECTION(X)
8B 1D 00 54 40 00		MOV     EBX, DS:_KEY_DTOR_LIST
83 EC 04		SUB     ESP, 4
8B 2D 3C 61 40 00		MOV     EBP, DS:__IMP__TLSGETVALUE@4; TLSGETVALUE(X)
8B 3D 14 61 40 00		MOV     EDI, DS:__IMP__GETLASTERROR@0; GETLASTERROR()
85 DB		TEST    KEYP, KEYP
74 28		JZ      SHORT LOC_402035
8D 76 00		LEA     ESI, [ESI+0]
8B 03		MOV     EAX, [KEYP]
89 04 24		MOV     [ESP+2CH+LPCRITICALSECTION], EAX; DWTLSINDEX
FF D5		CALL    EBP ; TLSGETVALUE(X); TLSGETVALUE(X)
83 EC 04		SUB     ESP, 4
89 C6		MOV     ESI, EAX
FF D7		CALL    EDI ; GETLASTERROR(); GETLASTERROR()
85 C0		TEST    EAX, EAX
75 0C		JNZ     SHORT LOC_40202E
85 F6		TEST    VALUE, VALUE
74 08		JZ      SHORT LOC_40202E
8B 43 04		MOV     EAX, [KEYP+4]
89 34 24		MOV     [ESP+2CH+LPCRITICALSECTION], VALUE
FF D0		CALL    EAX
8B 5B 08		MOV     KEYP, [KEYP+8]
85 DB		TEST    KEYP, KEYP
75 DB		JNZ     SHORT LOC_402010
C7 04 24 08 54 40 00		MOV     [ESP+2CH+LPCRITICALSECTION], OFFSET ___MINGWTHR_CS; LPCRITICALSECTION
FF 15 28 61 40 00		CALL    DS:__IMP__LEAVECRITICALSECTION@4; LEAVECRITICALSECTION(X)
83 EC 04		SUB     ESP, 4
83 C4 1C		ADD     ESP, 1CH
5B		POP     KEYP
5E		POP     ESI
5F		POP     EDI
5D		POP     EBP
C3		RETN
A1 04 54 40 00		MOV     EAX, DS:___MINGWTHR_CS_INIT
85 C0		TEST    EAX, EAX
75 07		JNZ     SHORT LOC_402060
C3		RETN
53		PUSH    EBX
83 EC 18		SUB     ESP, 18H
C7 44 24 04 0C 00 00 00		MOV     [ESP+1CH+SIZE], 0CH; SIZE
C7 04 24 01 00 00 00		MOV     [ESP+1CH+COUNT], 1; COUNT
E8 D0 05 00 00		CALL    _CALLOC
85 C0		TEST    EAX, EAX
89 C3		MOV     EBX, EAX
74 42		JZ      SHORT LOC_4020C0
8B 44 24 20		MOV     NEW_KEY, [ESP+1CH+KEY]
C7 04 24 08 54 40 00		MOV     [ESP+1CH+COUNT], OFFSET ___MINGWTHR_CS; LPCRITICALSECTION
89 03		MOV     [NEW_KEY], EAX
8B 44 24 24		MOV     EAX, [ESP+1CH+DTOR]
89 43 04		MOV     [NEW_KEY+4], EAX
FF 15 04 61 40 00		CALL    DS:__IMP__ENTERCRITICALSECTION@4; ENTERCRITICALSECTION(X)
A1 00 54 40 00		MOV     EAX, DS:_KEY_DTOR_LIST
83 EC 04		SUB     ESP, 4
89 1D 00 54 40 00		MOV     DS:_KEY_DTOR_LIST, NEW_KEY
C7 04 24 08 54 40 00		MOV     [ESP+1CH+COUNT], OFFSET ___MINGWTHR_CS; LPCRITICALSECTION
89 43 08		MOV     [NEW_KEY+8], EAX
FF 15 28 61 40 00		CALL    DS:__IMP__LEAVECRITICALSECTION@4; LEAVECRITICALSECTION(X)
31 C0		XOR     EAX, EAX
83 EC 04		SUB     ESP, 4
83 C4 18		ADD     ESP, 18H
5B		POP     NEW_KEY
C3		RETN
B8 FF FF FF FF		MOV     NEW_KEY, 0FFFFFFFFH
EB F4		JMP     SHORT LOC_4020BB
53		PUSH    EBX
83 EC 18		SUB     ESP, 18H
A1 04 54 40 00		MOV     EAX, DS:___MINGWTHR_CS_INIT
8B 5C 24 20		MOV     EBX, [ESP+1CH+KEY]
85 C0		TEST    EAX, EAX
75 0F		JNZ     SHORT LOC_4020F0
83 C4 18		ADD     ESP, 18H
31 C0		XOR     EAX, EAX
5B		POP     EBX
C3		RETN
C7 04 24 08 54 40 00		MOV     [ESP+1CH+LPCRITICALSECTION], OFFSET ___MINGWTHR_CS; LPCRITICALSECTION
FF 15 04 61 40 00		CALL    DS:__IMP__ENTERCRITICALSECTION@4; ENTERCRITICALSECTION(X)
8B 15 00 54 40 00		MOV     EDX, DS:_KEY_DTOR_LIST
83 EC 04		SUB     ESP, 4
85 D2		TEST    CUR_KEY, CUR_KEY
74 17		JZ      SHORT LOC_402121
8B 02		MOV     EAX, [CUR_KEY]
39 D8		CMP     EAX, EBX
75 0A		JNZ     SHORT LOC_40211A
EB 4E		JMP     SHORT LOC_402160
8B 08		MOV     ECX, [CUR_KEY]
39 D9		CMP     ECX, EBX
74 28		JZ      SHORT LOC_402140
89 C2		MOV     PREV_KEY, CUR_KEY
8B 42 08		MOV     EAX, [CUR_KEY+8]
85 C0		TEST    CUR_KEY, CUR_KEY
75 F1		JNZ     SHORT LOC_402112
C7 04 24 08 54 40 00		MOV     [ESP+1CH+LPCRITICALSECTION], OFFSET ___MINGWTHR_CS; LPCRITICALSECTION
FF 15 28 61 40 00		CALL    DS:__IMP__LEAVECRITICALSECTION@4; LEAVECRITICALSECTION(X)
83 EC 04		SUB     ESP, 4
83 C4 18		ADD     ESP, 18H
31 C0		XOR     EAX, EAX
5B		POP     EBX
C3		RETN
8B 48 08		MOV     ECX, [CUR_KEY+8]
89 4A 08		MOV     [PREV_KEY+8], ECX
89 04 24		MOV     [ESP+1CH+LPCRITICALSECTION], CUR_KEY; BLOCK
E8 02 05 00 00		CALL    _FREE
C7 04 24 08 54 40 00		MOV     [ESP+1CH+LPCRITICALSECTION], OFFSET ___MINGWTHR_CS; LPCRITICALSECTION
FF 15 28 61 40 00		CALL    DS:__IMP__LEAVECRITICALSECTION@4; LEAVECRITICALSECTION(X)
83 EC 04		SUB     ESP, 4
EB D1		JMP     SHORT LOC_402131
89 D0		MOV     EAX, CUR_KEY
8B 52 08		MOV     CUR_KEY, [CUR_KEY+8]
89 15 00 54 40 00		MOV     DS:_KEY_DTOR_LIST, EDX
EB D9		JMP     SHORT LOC_402146
83 EC 1C		SUB     ESP, 1CH
8B 44 24 24		MOV     EAX, [ESP+1CH+REASON]
83 F8 01		CMP     EAX, 1
74 48		JZ      SHORT LOC_4021C4
72 17		JB      SHORT LOC_402195
83 F8 03		CMP     EAX, 3
75 09		JNZ     SHORT LOC_40218C
A1 04 54 40 00		MOV     EAX, DS:___MINGWTHR_CS_INIT
85 C0		TEST    EAX, EAX
75 66		JNZ     SHORT LOC_4021F2
B8 01 00 00 00		MOV     EAX, 1
83 C4 1C		ADD     ESP, 1CH
C3		RETN
A1 04 54 40 00		MOV     EAX, DS:___MINGWTHR_CS_INIT
85 C0		TEST    EAX, EAX
75 62		JNZ     SHORT LOC_402200
A1 04 54 40 00		MOV     EAX, DS:___MINGWTHR_CS_INIT
83 F8 01		CMP     EAX, 1
75 E4		JNZ     SHORT LOC_40218C
C7 05 04 54 40 00 00 00 00 00		MOV     DS:___MINGWTHR_CS_INIT, 0
C7 04 24 08 54 40 00		MOV     [ESP+1CH+LPCRITICALSECTION], OFFSET ___MINGWTHR_CS; LPCRITICALSECTION
FF 15 00 61 40 00		CALL    DS:__IMP__DELETECRITICALSECTION@4; DELETECRITICALSECTION(X)
83 EC 04		SUB     ESP, 4
EB C8		JMP     SHORT LOC_40218C
A1 04 54 40 00		MOV     EAX, DS:___MINGWTHR_CS_INIT
85 C0		TEST    EAX, EAX
74 13		JZ      SHORT LOC_4021E0
C7 05 04 54 40 00 01 00 00 00		MOV     DS:___MINGWTHR_CS_INIT, 1
B8 01 00 00 00		MOV     EAX, 1
83 C4 1C		ADD     ESP, 1CH
C3		RETN
C7 04 24 08 54 40 00		MOV     [ESP+1CH+LPCRITICALSECTION], OFFSET ___MINGWTHR_CS; LPCRITICALSECTION
FF 15 24 61 40 00		CALL    DS:__IMP__INITIALIZECRITICALSECTION@4; INITIALIZECRITICALSECTION(X)
83 EC 04		SUB     ESP, 4
EB DB		JMP     SHORT LOC_4021CD
E8 E9 FD FF FF		CALL    ___MINGWTHR_RUN_KEY_DTORS_PART_0
EB 93		JMP     SHORT LOC_40218C
E8 DB FD FF FF		CALL    ___MINGWTHR_RUN_KEY_DTORS_PART_0
EB 97		JMP     SHORT LOC_40219E
03 40 3C		ADD     PIMAGEBASE, [PIMAGEBASE+3CH]
81 38 50 45 00 00		CMP     DWORD PTR [PNTHEADER], 4550H
74 05		JZ      SHORT LOC_402220
31 C0		XOR     PNTHEADER, PNTHEADER
C3		RETN
66 81 78 18 0B 01		CMP     WORD PTR [PNTHEADER+18H], 10BH
0F 94 C0		SETZ    AL
0F B6 C0		MOVZX   EAX, AL
C3		RETN
8B 44 24 04		MOV     EAX, [ESP+PDOSHEADER]
66 81 38 4D 5A		CMP     WORD PTR [EAX], 5A4DH
74 05		JZ      SHORT LOC_402240
31 C0		XOR     EAX, EAX
C3		RETN
EB CE		JMP     SHORT __VALIDATEIMAGEBASE_PART_0
03 40 3C		ADD     PIMAGEBASE, [PIMAGEBASE+3CH]
56		PUSH    ESI
53		PUSH    EBX
8B 54 24 0C		MOV     EDX, [ESP+8+PIMAGEBASE]
8B 5C 24 10		MOV     EBX, [ESP+8+RVA]
03 52 3C		ADD     EDX, [EDX+3CH]
0F B7 72 06		MOVZX   ESI, WORD PTR [PNTHEADER+6]
0F B7 42 14		MOVZX   EAX, WORD PTR [PNTHEADER+14H]
85 F6		TEST    ESI, ESI
8D 44 02 18		LEA     EAX, [PNTHEADER+EAX+18H]
74 1B		JZ      SHORT LOC_402288
31 C9		XOR     ECX, ECX
90		NOP
8B 50 0C		MOV     EDX, [PSECTION+0CH]
39 DA		CMP     EDX, EBX
77 07		JA      SHORT LOC_40227E
03 50 08		ADD     EDX, [PSECTION+8]
39 D3		CMP     EBX, EDX
72 0C		JB      SHORT LOC_40228A
83 C1 01		ADD     ISECTION, 1
83 C0 28		ADD     PSECTION, 28H ; '('
39 F1		CMP     ISECTION, ESI
75 E8		JNZ     SHORT LOC_402270
31 C0		XOR     PSECTION, PSECTION
5B		POP     RVA_0
5E		POP     ESI
C3		RETN
55		PUSH    EBP
57		PUSH    EDI
56		PUSH    ESI
53		PUSH    EBX
31 F6		XOR     ESI, ESI
83 EC 1C		SUB     ESP, 1CH
8B 7C 24 30		MOV     EDI, [ESP+2CH+PNAME]
89 3C 24		MOV     [ESP+2CH+STR], EDI; STR
E8 23 03 00 00		CALL    _STRLEN
83 F8 08		CMP     EAX, 8
77 0B		JA      SHORT LOC_4022B5
66 81 3D 00 00 40 00 4D 5A		CMP     WORD PTR DS:400000H, 5A4DH
74 0B		JZ      SHORT LOC_4022C0
83 C4 1C		ADD     ESP, 1CH
89 F0		MOV     EAX, ESI
5B		POP     EBX
5E		POP     ESI
5F		POP     EDI
5D		POP     EBP
C3		RETN
B8 00 00 40 00		MOV     EAX, 400000H; PIMAGEBASE
E8 46 FF FF FF		CALL    __VALIDATEIMAGEBASE_PART_0
85 C0		TEST    EAX, EAX
74 E7		JZ      SHORT LOC_4022B5
A1 3C 00 40 00		MOV     EAX, DS:40003CH
8D 90 00 00 40 00		LEA     EDX, [EAX+400000H]
0F B7 80 14 00 40 00		MOVZX   EAX, WORD PTR [EAX+400014H]
0F B7 6A 06		MOVZX   EBP, WORD PTR [PNTHEADER+6]
8D 5C 02 18		LEA     EBX, [PNTHEADER+EAX+18H]
85 ED		TEST    EBP, EBP
75 0E		JNZ     SHORT LOC_4022FA
EB C7		JMP     SHORT LOC_4022B5
83 C6 01		ADD     ISECTION, 1
83 C3 28		ADD     PSECTION, 28H ; '('
39 EE		CMP     ISECTION, EBP
74 26		JZ      SHORT LOC_402320
C7 44 24 08 08 00 00 00		MOV     [ESP+2CH+MAXCOUNT], 8; MAXCOUNT
89 7C 24 04		MOV     [ESP+2CH+STR2], EDI; STR2
89 1C 24		MOV     [ESP+2CH+STR], PSECTION; STR1
E8 4A 03 00 00		CALL    _STRNCMP
85 C0		TEST    EAX, EAX
75 DE		JNZ     SHORT LOC_4022F0
83 C4 1C		ADD     ESP, 1CH
89 DE		MOV     ISECTION, PSECTION
89 F0		MOV     EAX, ESI
5B		POP     PSECTION
5E		POP     ESI
5F		POP     EDI
5D		POP     EBP
C3		RETN
83 C4 1C		ADD     ESP, 1CH
31 F6		XOR     ISECTION, ISECTION
5B		POP     PSECTION
89 F0		MOV     EAX, ESI
5E		POP     ESI
5F		POP     EDI
5D		POP     EBP
C3		RETN
53		PUSH    EBX
31 DB		XOR     EBX, EBX
83 EC 08		SUB     ESP, 8
66 81 3D 00 00 40 00 4D 5A		CMP     WORD PTR DS:400000H, 5A4DH
74 0F		JZ      SHORT LOC_402350
83 C4 08		ADD     ESP, 8
89 D8		MOV     EAX, EBX
5B		POP     EBX
C3		RETN
B8 00 00 40 00		MOV     EAX, 400000H; PIMAGEBASE
E8 B6 FE FF FF		CALL    __VALIDATEIMAGEBASE_PART_0
85 C0		TEST    EAX, EAX
74 E3		JZ      SHORT LOC_402341
8B 44 24 10		MOV     EAX, [ESP+0CH+P]
C7 04 24 00 00 40 00		MOV     [ESP+0CH+PIMAGEBASE], 400000H; PIMAGEBASE
2D 00 00 40 00		SUB     EAX, 400000H
89 44 24 04		MOV     [ESP+0CH+VAR_8], RVA; RVA
E8 D9 FE FF FF		CALL    __FINDPESECTION
83 C4 08		ADD     ESP, 8
89 C3		MOV     EBX, EAX
89 D8		MOV     EAX, EBX
5B		POP     EBX
C3		RETN
31 C0		XOR     EAX, EAX
66 81 3D 00 00 40 00 4D 5A		CMP     WORD PTR DS:400000H, 5A4DH
74 03		JZ      SHORT LOC_402390
F3 C3		REP RETN
B8 00 00 40 00		MOV     EAX, 400000H; PIMAGEBASE
E8 76 FE FF FF		CALL    __VALIDATEIMAGEBASE_PART_0
85 C0		TEST    EAX, EAX
74 EF		JZ      SHORT LOCRET_40238D
A1 3C 00 40 00		MOV     EAX, DS:40003CH
0F B7 80 06 00 40 00		MOVZX   EAX, WORD PTR [EAX+400006H]
C3		RETN
56		PUSH    ESI
31 F6		XOR     ESI, ESI
66 81 3D 00 00 40 00 4D 5A		CMP     WORD PTR DS:400000H, 5A4DH
53		PUSH    EBX
8B 5C 24 0C		MOV     EBX, [ESP+8+ENO]
74 0D		JZ      SHORT LOC_4023D0
89 F0		MOV     EAX, ESI
5B		POP     EBX
5E		POP     ESI
C3		RETN
B8 00 00 40 00		MOV     EAX, 400000H; PIMAGEBASE
E8 36 FE FF FF		CALL    __VALIDATEIMAGEBASE_PART_0
85 C0		TEST    EAX, EAX
74 E5		JZ      SHORT LOC_4023C3
A1 3C 00 40 00		MOV     EAX, DS:40003CH
8D 88 00 00 40 00		LEA     ECX, [EAX+400000H]
0F B7 80 14 00 40 00		MOVZX   EAX, WORD PTR [EAX+400014H]
8D 54 01 18		LEA     PSECTION, [PNTHEADER+EAX+18H]
0F B7 49 06		MOVZX   PNTHEADER, WORD PTR [PNTHEADER+6]
85 C9		TEST    ECX, ECX
74 C7		JZ      SHORT LOC_4023C3
31 C0		XOR     EAX, EAX
66 90		XCHG    AX, AX
F6 42 27 20		TEST    BYTE PTR [PSECTION+27H], 20H
74 07		JZ      SHORT LOC_40240D
85 DB		TEST    ENO_0, ENO_0
74 16		JZ      SHORT LOC_402420
83 EB 01		SUB     ENO_0, 1
83 C0 01		ADD     ISECTION, 1
83 C2 28		ADD     PSECTION, 28H ; '('
39 C8		CMP     ISECTION, ECX
75 E9		JNZ     SHORT LOC_402400
31 F6		XOR     ESI, ESI
89 F0		MOV     ISECTION, ESI
5B		POP     ENO_0
5E		POP     ESI
C3		RETN
89 D6		MOV     ESI, PSECTION
89 F0		MOV     ISECTION, ESI
5B		POP     ENO_0
5E		POP     ESI
C3		RETN
53		PUSH    EBX
31 DB		XOR     EBX, EBX
66 81 3D 00 00 40 00 4D 5A		CMP     WORD PTR DS:400000H, 5A4DH
74 04		JZ      SHORT LOC_402442
89 D8		MOV     EAX, EBX
5B		POP     EBX
C3		RETN
B8 00 00 40 00		MOV     EAX, 400000H; PIMAGEBASE
E8 C4 FD FF FF		CALL    __VALIDATEIMAGEBASE_PART_0
85 C0		TEST    EAX, EAX
B8 00 00 40 00		MOV     EAX, 400000H
0F 45 D8		CMOVNZ  EBX, EAX
89 D8		MOV     EAX, EBX
5B		POP     EBX
C3		RETN
31 C0		XOR     EAX, EAX
66 81 3D 00 00 40 00 4D 5A		CMP     WORD PTR DS:400000H, 5A4DH
74 03		JZ      SHORT LOC_402470
C3		RETN
83 EC 08		SUB     ESP, 8
B8 00 00 40 00		MOV     EAX, 400000H; PIMAGEBASE
E8 93 FD FF FF		CALL    __VALIDATEIMAGEBASE_PART_0
85 C0		TEST    EAX, EAX
74 25		JZ      SHORT LOC_4024A6
8B 44 24 0C		MOV     EAX, [ESP+8+PTARGET]
C7 04 24 00 00 40 00		MOV     [ESP+8+PIMAGEBASE], 400000H; PIMAGEBASE
2D 00 00 40 00		SUB     EAX, 400000H
89 44 24 04		MOV     [ESP+8+RVA], RVATARGET; RVA
E8 B6 FD FF FF		CALL    __FINDPESECTION
85 C0		TEST    PSECTION, PSECTION
74 12		JZ      SHORT LOC_4024B0
8B 40 24		MOV     PSECTION, [PSECTION+24H]
F7 D0		NOT     EAX
C1 E8 1F		SHR     EAX, 1FH
83 C4 08		ADD     ESP, 8
C3		RETN
31 C0		XOR     PSECTION, PSECTION
EB F2		JMP     SHORT LOC_4024A6
57		PUSH    EDI
56		PUSH    ESI
31 FF		XOR     EDI, EDI
53		PUSH    EBX
83 EC 08		SUB     ESP, 8
66 81 3D 00 00 40 00 4D 5A		CMP     WORD PTR DS:400000H, 5A4DH
8B 74 24 18		MOV     ESI, [ESP+14H+I]
74 09		JZ      SHORT LOC_4024E0
83 C4 08		ADD     ESP, 8
89 F8		MOV     EAX, EDI
5B		POP     EBX
5E		POP     ESI
5F		POP     EDI
C3		RETN
B8 00 00 40 00		MOV     EAX, 400000H; PIMAGEBASE
E8 26 FD FF FF		CALL    __VALIDATEIMAGEBASE_PART_0
85 C0		TEST    EAX, EAX
74 E9		JZ      SHORT LOC_4024D7
A1 3C 00 40 00		MOV     EAX, DS:40003CH
8B 98 80 00 40 00		MOV     EBX, [EAX+400080H]
85 DB		TEST    IMPORTSSTARTRVA, IMPORTSSTARTRVA
74 DA		JZ      SHORT LOC_4024D7
89 5C 24 04		MOV     [ESP+14H+RVA], IMPORTSSTARTRVA; RVA
C7 04 24 00 00 40 00		MOV     [ESP+14H+PIMAGEBASE], 400000H; PIMAGEBASE
E8 43 FD FF FF		CALL    __FINDPESECTION
85 C0		TEST    PSECTION, PSECTION
74 C6		JZ      SHORT LOC_4024D7
81 C3 00 00 40 00		ADD     IMPORTSSTARTRVA, 400000H
89 DA		MOV     EDX, IMPORTDESC
75 0B		JNZ     SHORT LOC_402526
EB BA		JMP     SHORT LOC_4024D7
83 EE 01		SUB     I_0, 1
83 C2 14		ADD     IMPORTDESC, 14H
8B 4A 04		MOV     ECX, [IMPORTDESC+4]
85 C9		TEST    ECX, ECX
75 07		JNZ     SHORT LOC_402534
8B 42 0C		MOV     EAX, [IMPORTDESC+0CH]
85 C0		TEST    EAX, EAX
74 1C		JZ      SHORT LOC_402550
85 F6		TEST    I_0, I_0
7F E8		JG      SHORT LOC_402520
8B 7A 0C		MOV     EDI, [IMPORTDESC+0CH]
83 C4 08		ADD     ESP, 8
5B		POP     EBX
5E		POP     I_0
81 C7 00 00 40 00		ADD     EDI, 400000H
89 F8		MOV     EAX, EDI
5F		POP     EDI
C3		RETN
83 C4 08		ADD     ESP, 8
31 FF		XOR     EDI, EDI
89 F8		MOV     EAX, EDI
5B		POP     EBX
5E		POP     I_0
5F		POP     EDI
C3		RETN
51		PUSH    ECX
50		PUSH    EAX
3D 00 10 00 00		CMP     EAX, 1000H
8D 4C 24 0C		LEA     ECX, [ESP+8+ARG_0]
72 15		JB      SHORT LOC_402582
81 E9 00 10 00 00		SUB     ECX, 1000H
83 09 00		OR      DWORD PTR [ECX], 0
2D 00 10 00 00		SUB     EAX, 1000H
3D 00 10 00 00		CMP     EAX, 1000H
77 EB		JA      SHORT LOC_40256D
29 C1		SUB     ECX, EAX
83 09 00		OR      DWORD PTR [ECX], 0
58		POP     EAX
59		POP     ECX
C3		RETN
FF 25 60 61 40 00		JMP     DS:__IMP____SET_APP_TYPE
FF 25 54 61 40 00		JMP     DS:__IMP____GETMAINARGS
A1 24 54 40 00		MOV     EAX, DS:_HANDLER
C3		RETN
8B 44 24 04		MOV     EAX, [ESP+NEW_HANDLER]
87 05 24 54 40 00		XCHG    EAX, DS:_HANDLER
C3		RETN
FF 25 A4 61 40 00		JMP     DS:__IMP__MALLOC
FF 25 B4 61 40 00		JMP     DS:__IMP__STRLEN
FF 25 A8 61 40 00		JMP     DS:__IMP__MEMCPY
FF 25 70 61 40 00		JMP     DS:__IMP___CEXIT
FF 25 6C 61 40 00		JMP     DS:__IMP___AMSG_EXIT
FF 25 78 61 40 00		JMP     DS:__IMP___INITTERM
FF 25 94 61 40 00		JMP     DS:__IMP__EXIT
FF 25 AC 61 40 00		JMP     DS:__IMP__PUTS
FF 25 80 61 40 00		JMP     DS:__IMP___LOCK
FF 25 50 61 40 00		JMP     DS:__IMP____DLLONEXIT
FF 25 88 61 40 00		JMP     DS:__IMP___UNLOCK
FF 25 B0 61 40 00		JMP     DS:__IMP__SIGNAL
FF 25 64 61 40 00		JMP     DS:__IMP____SETUSERMATHERR
FF 25 98 61 40 00		JMP     DS:__IMP__FPRINTF
FF 25 A0 61 40 00		JMP     DS:__IMP__FWRITE
FF 25 BC 61 40 00		JMP     DS:__IMP__VFPRINTF
FF 25 8C 61 40 00		JMP     DS:__IMP__ABORT
FF 25 90 61 40 00		JMP     DS:__IMP__CALLOC
FF 25 9C 61 40 00		JMP     DS:__IMP__FREE
FF 25 B8 61 40 00		JMP     DS:__IMP__STRNCMP
