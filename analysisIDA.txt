E9 CD 43 00 00		JMP     TERMINATE
E9 21 2C 00 00		JMP     SUB_13C30
E9 5C 14 00 00		JMP     ?SET_COMMODE@__SCRT_FILE_POLICY@@SAXXZ; __SCRT_FILE_POLICY::SET_COMMODE(VOID)
E9 30 44 00 00		JMP     HEAPALLOC
E9 9B 43 00 00		JMP     _REGISTER_ONEXIT_FUNCTION
E9 8D 44 00 00		JMP     __SHOULD_INITIALIZE_ENVIRONMENT_3
E9 88 14 00 00		JMP     START_0
E9 FE 43 00 00		JMP     SETUNHANDLEDEXCEPTIONFILTER
E9 BE 3E 00 00		JMP     ___REPORT_GSFAILURE
E9 19 1D 00 00		JMP     __RTC_NUMERRORS
E9 44 28 00 00		JMP     SUB_13880
E9 8F 27 00 00		JMP     SUB_137D0
E9 D3 43 00 00		JMP     GETSYSTEMTIMEASFILETIME
E9 F5 3F 00 00		JMP     ___REPORT_RANGECHECKFAILURE
E9 20 28 00 00		JMP     SUB_13870
E9 B0 42 00 00		JMP     MALLOC
E9 B6 07 00 00		JMP     SUB_11810
E9 41 2F 00 00		JMP     __GUARD_ICALL_CHECKS_ENFORCED
E9 FC 2A 00 00		JMP     ___SCRT_STUB_FOR_INITIALIZE_MTA_4
E9 62 43 00 00		JMP     _CRT_AT_QUICK_EXIT
E9 A2 20 00 00		JMP     ___SCRT_DLLMAIN_UNINITIALIZE_CRITICAL
E9 FE 42 00 00		JMP     __P___ARGC
E9 58 44 00 00		JMP     ___SCRT_STUB_FOR_INITIALIZE_MTA_5
E9 23 2D 00 00		JMP     SUB_13DA0
E9 D7 42 00 00		JMP     _INITTERM_E
E9 F9 34 00 00		JMP     ?_RTC_GETSRCLINE@@YAHPAEPA_WKPAH1K@Z; _RTC_GETSRCLINE(UCHAR *,WCHAR_T *,ULONG,INT *,WCHAR_T *,ULONG)
E9 BB 42 00 00		JMP     _INITIALIZE_NARROW_ENVIRONMENT
E9 7F 1C 00 00		JMP     SUB_12D10
E9 1D 43 00 00		JMP     _INITIALIZE_ONEXIT_TABLE
E9 A5 26 00 00		JMP     SUB_13740
E9 07 43 00 00		JMP     __STDIO_COMMON_VSPRINTF_S
E9 8B 2C 00 00		JMP     SUB_13D30
E9 15 43 00 00		JMP     _EXECUTE_ONEXIT_TABLE
E9 01 44 00 00		JMP     __SHOULD_INITIALIZE_ENVIRONMENT_3
E9 9C 13 00 00		JMP     ?SET_APP_TYPE@__SCRT_MAIN_POLICY@@SAXXZ; __SCRT_MAIN_POLICY::SET_APP_TYPE(VOID)
E9 2A 43 00 00		JMP     _WSPLITPATH_S
E9 22 1F 00 00		JMP     ___SCRT_DLLMAIN_BEFORE_INITIALIZE_C
E9 5D 29 00 00		JMP     ___SCRT_GET_SHOW_WINDOW_MODE
E9 0D 42 00 00		JMP     __CURRENT_EXCEPTION
E9 C3 0E 00 00		JMP     SUB_11F90
E9 83 43 00 00		JMP     GETPROCESSHEAP
E9 18 43 00 00		JMP     GETCURRENTTHREADID
E9 34 26 00 00		JMP     __GET_STARTUP_FILE_MODE
E9 48 42 00 00		JMP     _CRTDBGREPORTW
E9 AA 15 00 00		JMP     ?_RTC_FAILURE@@YAXPAXH@Z; _RTC_FAILURE(VOID *,INT)
E9 28 43 00 00		JMP     GETCURRENTPROCESSID
E9 71 43 00 00		JMP     FREELIBRARY
E9 40 42 00 00		JMP     _SET_APP_TYPE
E9 76 1F 00 00		JMP     ___SCRT_DLLMAIN_EXCEPTION_FILTER
E9 E1 25 00 00		JMP     ___SCRT_STUB_FOR_INITIALIZE_MTA
E9 85 42 00 00		JMP     _REGISTER_THREAD_LOCAL_EXE_ATEXIT_CALLBACK
E9 C7 1F 00 00		JMP     ___SCRT_DLLMAIN_UNINITIALIZE_C
E9 B7 42 00 00		JMP     _CRT_ATEXIT
E9 FE 41 00 00		JMP     STRNCPY_S
E9 88 43 00 00		JMP     __SHOULD_INITIALIZE_ENVIRONMENT_2
E9 12 42 00 00		JMP     _SEH_FILTER_EXE
E9 1B 43 00 00		JMP     GETMODULEHANDLEW
E9 D9 25 00 00		JMP     ___SCRT_STUB_FOR_INITIALIZE_MTA_0
E9 74 21 00 00		JMP     ___SCRT_IS_NONWRITABLE_IN_CURRENT_IMAGE
E9 7F 43 00 00		JMP     __SHOULD_INITIALIZE_ENVIRONMENT_3
E9 BA 12 00 00		JMP     SUB_123F0
E9 55 20 00 00		JMP     ___SCRT_INITIALIZE_ONEXIT_TABLES
E9 5B 42 00 00		JMP     __P__COMMODE
E9 5B 1E 00 00		JMP     ___SCRT_DLLMAIN_AFTER_INITIALIZE_C
E9 D6 25 00 00		JMP     ___SCRT_STUB_FOR_INITIALIZE_MTA_1
E9 91 38 00 00		JMP     @__SECURITY_CHECK_COOKIE@4; __SECURITY_CHECK_COOKIE(X)
E9 8D 41 00 00		JMP     MEMSET
E9 D7 1B 00 00		JMP     __RTC_GETERRDESC
E9 62 1C 00 00		JMP     __RTC_SETERRORTYPE
E9 90 41 00 00		JMP     __VCRT_GETMODULEHANDLEW
E9 18 0E 00 00		JMP     SUB_11F80
E9 40 42 00 00		JMP     _SEH_FILTER_DLL
E9 7E 26 00 00		JMP     ___SCRT_INITIALIZE_DEFAULT_LOCAL_STDIO_OPTIONS
E9 A9 22 00 00		JMP     ___SCRT_RELEASE_STARTUP_LOCK
E9 79 42 00 00		JMP     ISDEBUGGERPRESENT
E9 8C 42 00 00		JMP     QUERYPERFORMANCECOUNTER
E9 CA 22 00 00		JMP     ___SCRT_UNINITIALIZE_CRT
E9 E5 13 00 00		JMP     ?_RTC_ALLOCAFAILURE@@YAXPAXPAU_RTC_ALLOCA_NODE@@H@Z; _RTC_ALLOCAFAILURE(VOID *,_RTC_ALLOCA_NODE *,INT)
E9 71 42 00 00		JMP     MULTIBYTETOWIDECHAR
E9 0B 43 00 00		JMP     __SHOULD_INITIALIZE_ENVIRONMENT_2
E9 C6 1B 00 00		JMP     SUB_12D60
E9 D1 2A 00 00		JMP     SUB_13C70
E9 C3 42 00 00		JMP     GETPROCADDRESS
E9 D7 3C 00 00		JMP     ___SCRT_IS_UCRT_DLL_IN_USE
E9 D2 38 00 00		JMP     ___ISA_AVAILABLE_INIT
E9 0D 43 00 00		JMP     __SHOULD_INITIALIZE_ENVIRONMENT_4
E9 A8 3F 00 00		JMP     ___REPORT_SECURITYFAILUREEX
E9 9E 42 00 00		JMP     VIRTUALQUERY
E9 27 42 00 00		JMP     WCSCPY_S
E9 D9 1A 00 00		JMP     __VSPRINTF_S_L
E9 6B 42 00 00		JMP     ISPROCESSORFEATUREPRESENT
E9 C4 41 00 00		JMP     _SET_NEW_MODE
E9 BA 26 00 00		JMP     ___SCRT_FASTFAIL
E9 1E 41 00 00		JMP     __VCRT_LOADLIBRARYEXW
E9 45 42 00 00		JMP     UNHANDLEDEXCEPTIONFILTER
E9 FB 0C 00 00		JMP     @_RTC_CHECKSTACKVARS@8; _RTC_CHECKSTACKVARS(X,X)
E9 FD 40 00 00		JMP     _EXCEPT_HANDLER4_COMMON
E9 E1 42 00 00		JMP     ___SCRT_STUB_FOR_INITIALIZE_MTA_5
E9 7C 23 00 00		JMP     _ATEXIT
E9 7A 42 00 00		JMP     TERMINATEPROCESS
E9 72 2B 00 00		JMP     ___CASTGUARD_CHECK_FAILURE_FASTFAIL
E9 5C 41 00 00		JMP     EXIT
E9 B8 09 00 00		JMP     SUB_11BC0
E9 C3 11 00 00		JMP     SUB_123D0
E9 2E 26 00 00		JMP     ___SCRT_IS_USER_MATHERR_PRESENT
E9 89 22 00 00		JMP     __ONEXIT
E9 54 28 00 00		JMP     SUB_13A70
E9 FF 22 00 00		JMP     _AT_QUICK_EXIT
E9 3A 29 00 00		JMP     ___SCRT_STUB_FOR_INITIALIZE_MTA_4
E9 58 41 00 00		JMP     _C_EXIT
E9 AD 41 00 00		JMP     _WMAKEPATH_S
E9 DB 1D 00 00		JMP     ___SCRT_DLLMAIN_CRT_THREAD_ATTACH
E9 CD 41 00 00		JMP     WIDECHARTOMULTIBYTE
E9 A1 42 00 00		JMP     __FILTER_X86_SSE2_FLOATING_POINT_EXCEPTION_DEFAULT
E9 5C 0D 00 00		JMP     __RTC_INITBASE
E9 07 0D 00 00		JMP     __RTC_CHECKESP
E9 42 42 00 00		JMP     __SHOULD_INITIALIZE_ENVIRONMENT_1
E9 3C 41 00 00		JMP     _CONFIGTHREADLOCALE
E9 68 42 00 00		JMP     __SHOULD_INITIALIZE_ENVIRONMENT_4
E9 23 42 00 00		JMP     __SHOULD_INITIALIZE_ENVIRONMENT_0
E9 FE 24 00 00		JMP     SUB_13760
E9 E9 1D 00 00		JMP     SUB_13050
E9 24 42 00 00		JMP     __SHOULD_INITIALIZE_ENVIRONMENT_1
E9 8F 2A 00 00		JMP     ??1SHARED_MUTEX@STD@@QAE@XZ; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
E9 6A 0A 00 00		JMP     SUB_11CE0
E9 B5 24 00 00		JMP     ___SCRT_STUB_FOR_INITIALIZE_MTA_2
E9 00 28 00 00		JMP     ___SCRT_STUB_FOR_INITIALIZE_MTA_3
E9 2B 05 00 00		JMP     SUB_117B0
E9 F6 41 00 00		JMP     __SHOULD_INITIALIZE_ENVIRONMENT_0
E9 F1 41 00 00		JMP     __SHOULD_INITIALIZE_ENVIRONMENT_0
E9 5C 2C 00 00		JMP     SUB_13EF0
E9 F7 0A 00 00		JMP     @_RTC_ALLOCAHELPER@12; _RTC_ALLOCAHELPER(X,X,X)
E9 52 24 00 00		JMP     __GET_STARTUP_ARGV_MODE
E9 AD 2A 00 00		JMP     ___CASTGUARD_CHECK_FAILURE_DEBUGBREAK
E9 A5 40 00 00		JMP     _GET_INITIAL_NARROW_ENVIRONMENT
E9 63 29 00 00		JMP     __CRT_DEBUGGER_HOOK
E9 C5 40 00 00		JMP     __P___ARGV
E9 79 1E 00 00		JMP     ___SCRT_INITIALIZE_CRT
E9 A4 2B 00 00		JMP     ___CASTGUARD_SLOW_PATH_CHECK_DEBUGBREAK
E9 EF 2A 00 00		JMP     SUB_13DB0
E9 7D 41 00 00		JMP     GETLASTERROR
E9 D5 2B 00 00		JMP     ___CASTGUARD_SLOW_PATH_CHECK_FASTFAIL
E9 6B 40 00 00		JMP     __SETUSERMATHERR
E9 BB 41 00 00		JMP     __SHOULD_INITIALIZE_ENVIRONMENT_1
E9 06 1A 00 00		JMP     _SPRINTF_S
E9 21 06 00 00		JMP     _MAIN_0
E9 AC 11 00 00		JMP     ?SET_FMODE@__SCRT_FILE_POLICY@@SAXXZ; __SCRT_FILE_POLICY::SET_FMODE(VOID)
E9 57 1C 00 00		JMP     ___SCRT_ACQUIRE_STARTUP_LOCK
E9 E1 3F 00 00		JMP     __STD_TYPE_INFO_DESTROY_LIST
E9 8D 24 00 00		JMP     __SHOULD_INITIALIZE_ENVIRONMENT
E9 E8 0C 00 00		JMP     __RTC_SHUTDOWN
E9 93 27 00 00		JMP     ___SCRT_IS_MANAGED_APP
E9 8E 19 00 00		JMP     SUB_12C90
E9 F4 40 00 00		JMP     RAISEEXCEPTION
E9 A4 18 00 00		JMP     __RTC_UNINITUSE
E9 C0 40 00 00		JMP     _CONTROLFP_S
E9 8A 41 00 00		JMP     __SHOULD_INITIALIZE_ENVIRONMENT_2
E9 55 28 00 00		JMP     ___SCRT_UNHANDLED_EXCEPTION_FILTER@4; __SCRT_UNHANDLED_EXCEPTION_FILTER(X)
E9 F0 29 00 00		JMP     ?_ATOMIC_LOAD_UINT@?A0X344232B8@@YAIPDI@Z; `ANONYMOUS NAMESPACE'::_ATOMIC_LOAD_UINT(UINT CONST VOLATILE *)
E9 48 41 00 00		JMP     GETCURRENTPROCESS
E9 16 0A 00 00		JMP     @__CHECKFORDEBUGGERJUSTMYCODE@4; __CHECKFORDEBUGGERJUSTMYCODE(X)
E9 61 24 00 00		JMP     __INITIALIZE_DEFAULT_PRECISION
E9 0C 28 00 00		JMP     SUB_13B40
E9 57 1A 00 00		JMP     SUB_12D90
E9 92 0A 00 00		JMP     @_RTC_CHECKSTACKVARS2@12; _RTC_CHECKSTACKVARS2(X,X,X)
E9 EE 40 00 00		JMP     GETSTARTUPINFOW
E9 59 40 00 00		JMP     STRCAT_S
E9 B3 13 00 00		JMP     ?_RTC_STACKFAILURE@@YAXPAXPBD@Z; _RTC_STACKFAILURE(VOID *,CHAR CONST *)
E9 D1 3F 00 00		JMP     _CRTDBGREPORT
E9 A8 3F 00 00		JMP     PUTS
E9 A4 2B 00 00		JMP     SUB_13F00
E9 7F 24 00 00		JMP     SUB_137E0
E9 A5 3F 00 00		JMP     STRCPY_S
E9 FA 3F 00 00		JMP     _EXIT
E9 E3 3F 00 00		JMP     _INITTERM
E9 DB 3C 00 00		JMP     ___REPORT_SECURITYFAILURE
E9 61 3F 00 00		JMP     __CURRENT_EXCEPTION_CONTEXT
E9 98 3F 00 00		JMP     STRLEN
E9 69 3F 00 00		JMP     __VCRT_GETMODULEFILENAMEW
E9 A7 1B 00 00		JMP     _NTCURRENTTEB
E9 B3 3F 00 00		JMP     _CONFIGURE_NARROW_ARGV
E9 8D 19 00 00		JMP     SUB_12D20
E9 08 04 00 00		JMP     SUB_117A0
E9 23 24 00 00		JMP     SUB_137C0
E9 7D 40 00 00		JMP     INITIALIZESLISTHEAD
E9 39 41 00 00		JMP     __FILTER_X86_SSE2_FLOATING_POINT_EXCEPTION_DEFAULT
E9 BF 3F 00 00		JMP     _SET_FMODE
E9 8F 22 00 00		JMP     ___SECURITY_INIT_COOKIE
E9 0A 41 00 00		JMP     __SHOULD_INITIALIZE_ENVIRONMENT_4
E9 C2 3F 00 00		JMP     _CEXIT
E9 F0 3A 00 00		JMP     ___RAISE_SECURITYFAILURE
E9 DB 04 00 00		JMP     SUB_118A0
E9 53 3F 00 00		JMP     STRNCMP
E9 80 40 00 00		JMP     HEAPFREE
55		PUSH    EBP
8B EC		MOV     EBP, ESP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC CC 00 00 00		SUB     ESP, 0CCH
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
8D 7D F4		LEA     EDI, [EBP+VAR_C]
B9 03 00 00 00		MOV     ECX, 3
B8 CC CC CC CC		MOV     EAX, 0CCCCCCCCH
F3 AB		REP STOSD
B9 A2 C0 01 00		MOV     ECX, OFFSET UNK_1C0A2
E8 50 FB FF FF		CALL    J_@__CHECKFORDEBUGGERJUSTMYCODE@4; __CHECKFORDEBUGGERJUSTMYCODE(X)
8B 45 08		MOV     EAX, [EBP+ARG_0]
03 45 0C		ADD     EAX, [EBP+ARG_4]
89 45 F8		MOV     [EBP+VAR_8], EAX
8B 45 F8		MOV     EAX, [EBP+VAR_8]
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
81 C4 CC 00 00 00		ADD     ESP, 0CCH
3B EC		CMP     EBP, ESP
E8 53 FA FF FF		CALL    J___RTC_CHECKESP
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC D8 00 00 00		SUB     ESP, 0D8H
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
8D 7D E8		LEA     EDI, [EBP+VAR_18]
B9 06 00 00 00		MOV     ECX, 6
B8 CC CC CC CC		MOV     EAX, 0CCCCCCCCH
F3 AB		REP STOSD
8B 45 0C		MOV     EAX, [EBP+ARG_4]
50		PUSH    EAX
8B 4D 08		MOV     ECX, [EBP+ARG_0]
51		PUSH    ECX
E8 48 FA FF FF		CALL    SUB_11280
83 C4 08		ADD     ESP, 8
89 45 F8		MOV     [EBP+VAR_8], EAX
8B F4		MOV     ESI, ESP
68 30 7B 01 00		PUSH    OFFSET AIMPOSSIBLEDISA; "IMPOSSIBLE DISASSEMBLY"
FF 15 80 B1 01 00		CALL    DS:__IMP_PUTS
83 C4 04		ADD     ESP, 4
3B F4		CMP     ESI, ESP
E8 EF F9 FF FF		CALL    J___RTC_CHECKESP
EB FF		JMP     SHORT NEAR PTR LOC_11855+1
C0 48 8B 45		ROR     BYTE PTR [EAX-75H], 45H
0C 50		OR      AL, 50H
8B 4D F8		MOV     ECX, [EBP-8]
51		PUSH    ECX
E8 0B FA FF FF		CALL    SUB_11271
83 C4 08		ADD     ESP, 8
89 45 EC		MOV     [EBP-14H], EAX
8B 45 F8		MOV     EAX, [EBP-8]
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
81 C4 D8 00 00 00		ADD     ESP, 0D8H
3B EC		CMP     EBP, ESP
E8 C5 F9 FF FF		CALL    J___RTC_CHECKESP
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC CC 00 00 00		SUB     ESP, 0CCH
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
8D 7D F4		LEA     EDI, [EBP+VAR_C]
B9 03 00 00 00		MOV     ECX, 3
B8 CC CC CC CC		MOV     EAX, 0CCCCCCCCH
F3 AB		REP STOSD
B9 A2 C0 01 00		MOV     ECX, OFFSET UNK_1C0A2
E8 60 FA FF FF		CALL    J_@__CHECKFORDEBUGGERJUSTMYCODE@4; __CHECKFORDEBUGGERJUSTMYCODE(X)
6A 0A		PUSH    0AH
8B 45 08		MOV     EAX, [EBP+ARG_0]
50		PUSH    EAX
E8 85 F7 FF FF		CALL    SUB_11055
83 C4 08		ADD     ESP, 8
89 45 F8		MOV     [EBP+VAR_8], EAX
8B 45 F8		MOV     EAX, [EBP+VAR_8]
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
81 C4 CC 00 00 00		ADD     ESP, 0CCH
3B EC		CMP     EBP, ESP
E8 5B F9 FF FF		CALL    J___RTC_CHECKESP
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 00 01 00 00		SUB     ESP, 100H
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
8D 7D C0		LEA     EDI, [EBP+VAR_40]
B9 10 00 00 00		MOV     ECX, 10H
B8 CC CC CC CC		MOV     EAX, 0CCCCCCCCH
F3 AB		REP STOSD
B9 A2 C0 01 00		MOV     ECX, OFFSET UNK_1C0A2
E8 00 FA FF FF		CALL    J_@__CHECKFORDEBUGGERJUSTMYCODE@4; __CHECKFORDEBUGGERJUSTMYCODE(X)
B8 18 00 00 00		MOV     EAX, 18H
6B C8 00		IMUL    ECX, EAX, 0
C7 81 B4 A5 01 00 00 00 00 00		MOV     DWORD_1A5B4[ECX], 0
B8 18 00 00 00		MOV     EAX, 18H
C1 E0 00		SHL     EAX, 0
C7 80 B4 A5 01 00 FF FF FF FF		MOV     DWORD_1A5B4[EAX], 0FFFFFFFFH
B8 18 00 00 00		MOV     EAX, 18H
D1 E0		SHL     EAX, 1
C7 80 B4 A5 01 00 E8 03 00 00		MOV     DWORD_1A5B4[EAX], 3E8H
8B F4		MOV     ESI, ESP
6A 02		PUSH    2; MAXCOUNT
68 5C 7B 01 00		PUSH    OFFSET STR2; "P1"
6A 14		PUSH    14H; SIZEINBYTES
B8 18 00 00 00		MOV     EAX, 18H
6B C8 00		IMUL    ECX, EAX, 0
81 C1 A0 A5 01 00		ADD     ECX, OFFSET UNK_1A5A0
51		PUSH    ECX; DESTINATION
FF 15 74 B1 01 00		CALL    DS:__IMP_STRNCPY_S
83 C4 10		ADD     ESP, 10H
3B F4		CMP     ESI, ESP
E8 C0 F8 FF FF		CALL    J___RTC_CHECKESP
8B F4		MOV     ESI, ESP
6A 02		PUSH    2; MAXCOUNT
68 60 7B 01 00		PUSH    OFFSET AP2; "P2"
6A 14		PUSH    14H; SIZEINBYTES
B8 18 00 00 00		MOV     EAX, 18H
C1 E0 00		SHL     EAX, 0
05 A0 A5 01 00		ADD     EAX, OFFSET UNK_1A5A0
50		PUSH    EAX; DESTINATION
FF 15 74 B1 01 00		CALL    DS:__IMP_STRNCPY_S
83 C4 10		ADD     ESP, 10H
3B F4		CMP     ESI, ESP
E8 97 F8 FF FF		CALL    J___RTC_CHECKESP
8B F4		MOV     ESI, ESP
6A 02		PUSH    2; MAXCOUNT
68 64 7B 01 00		PUSH    OFFSET AP3; "P3"
6A 14		PUSH    14H; SIZEINBYTES
B8 18 00 00 00		MOV     EAX, 18H
D1 E0		SHL     EAX, 1
05 A0 A5 01 00		ADD     EAX, OFFSET UNK_1A5A0
50		PUSH    EAX; DESTINATION
FF 15 74 B1 01 00		CALL    DS:__IMP_STRNCPY_S
83 C4 10		ADD     ESP, 10H
3B F4		CMP     ESI, ESP
E8 6F F8 FF FF		CALL    J___RTC_CHECKESP
C7 45 F8 0F 00 00 00		MOV     [EBP+VAR_8], 0FH
C7 45 EC 14 00 00 00		MOV     [EBP+VAR_14], 14H
B8 18 00 00 00		MOV     EAX, 18H
6B C8 00		IMUL    ECX, EAX, 0
83 B9 B4 A5 01 00 0A		CMP     DWORD_1A5B4[ECX], 0AH
7D 5B		JGE     SHORT LOC_11A4F
B8 18 00 00 00		MOV     EAX, 18H
6B C8 00		IMUL    ECX, EAX, 0
8B 91 B4 A5 01 00		MOV     EDX, DWORD_1A5B4[ECX]
52		PUSH    EDX
E8 B8 F9 FF FF		CALL    SUB_113C0
83 C4 04		ADD     ESP, 4
B9 18 00 00 00		MOV     ECX, 18H
6B D1 00		IMUL    EDX, ECX, 0
89 82 B4 A5 01 00		MOV     DWORD_1A5B4[EDX], EAX
8B F4		MOV     ESI, ESP
6A 02		PUSH    2; MAXCOUNT
68 5C 7B 01 00		PUSH    OFFSET STR2; "P1"
B8 18 00 00 00		MOV     EAX, 18H
6B C8 00		IMUL    ECX, EAX, 0
81 C1 A0 A5 01 00		ADD     ECX, OFFSET UNK_1A5A0
51		PUSH    ECX; STR1
FF 15 6C B1 01 00		CALL    DS:__IMP_STRNCMP
83 C4 0C		ADD     ESP, 0CH
3B F4		CMP     ESI, ESP
E8 03 F8 FF FF		CALL    J___RTC_CHECKESP
85 C0		TEST    EAX, EAX
75 08		JNZ     SHORT LOC_11A4D
E8 B9 F7 FF FF		CALL    SUB_11203
89 45 E0		MOV     [EBP+VAR_20], EAX
EB 94		JMP     SHORT LOC_119E3
B8 18 00 00 00		MOV     EAX, 18H
C1 E0 00		SHL     EAX, 0
8B 88 B4 A5 01 00		MOV     ECX, DWORD_1A5B4[EAX]
89 8D 00 FF FF FF		MOV     [EBP+VAR_100], ECX
83 BD 00 FF FF FF FF		CMP     [EBP+VAR_100], 0FFFFFFFFH
74 30		JZ      SHORT LOC_11A9C
83 BD 00 FF FF FF 00		CMP     [EBP+VAR_100], 0
74 0E		JZ      SHORT LOC_11A83
81 BD 00 FF FF FF E8 03 00 00		CMP     [EBP+VAR_100], 3E8H
74 34		JZ      SHORT LOC_11AB5
EB 4B		JMP     SHORT LOC_11ACE
8B F4		MOV     ESI, ESP
68 68 7B 01 00		PUSH    OFFSET BUFFER; "EQUAL 0"
FF 15 80 B1 01 00		CALL    DS:__IMP_PUTS
83 C4 04		ADD     ESP, 4
3B F4		CMP     ESI, ESP
E8 AA F7 FF FF		CALL    J___RTC_CHECKESP
EB 49		JMP     SHORT LOC_11AE5
8B F4		MOV     ESI, ESP
68 74 7B 01 00		PUSH    OFFSET AEQUAL1; "EQUAL -1"
FF 15 80 B1 01 00		CALL    DS:__IMP_PUTS
83 C4 04		ADD     ESP, 4
3B F4		CMP     ESI, ESP
E8 91 F7 FF FF		CALL    J___RTC_CHECKESP
EB 30		JMP     SHORT LOC_11AE5
8B F4		MOV     ESI, ESP
68 80 7B 01 00		PUSH    OFFSET AEQUAL1000; "EQUAL 1000"
FF 15 80 B1 01 00		CALL    DS:__IMP_PUTS
83 C4 04		ADD     ESP, 4
3B F4		CMP     ESI, ESP
E8 78 F7 FF FF		CALL    J___RTC_CHECKESP
EB 17		JMP     SHORT LOC_11AE5
8B F4		MOV     ESI, ESP
68 90 7B 01 00		PUSH    OFFSET ANONEOFTHEABOVE; "NONE OF THE ABOVE"
FF 15 80 B1 01 00		CALL    DS:__IMP_PUTS
83 C4 04		ADD     ESP, 4
3B F4		CMP     ESI, ESP
E8 5F F7 FF FF		CALL    J___RTC_CHECKESP
8B 45 EC		MOV     EAX, [EBP+VAR_14]
50		PUSH    EAX
8B 4D F8		MOV     ECX, [EBP+VAR_8]
51		PUSH    ECX
E8 8E F7 FF FF		CALL    SUB_11280
83 C4 08		ADD     ESP, 8
89 45 D4		MOV     [EBP+VAR_2C], EAX
8B 45 EC		MOV     EAX, [EBP+VAR_14]
50		PUSH    EAX
8B 4D F8		MOV     ECX, [EBP+VAR_8]
51		PUSH    ECX
E8 6C F7 FF FF		CALL    SUB_11271
83 C4 08		ADD     ESP, 8
89 45 C8		MOV     [EBP+VAR_38], EAX
8B 45 EC		MOV     EAX, [EBP+VAR_14]
50		PUSH    EAX
8B 4D F8		MOV     ECX, [EBP+VAR_8]
51		PUSH    ECX
E8 3D F5 FF FF		CALL    SUB_11055
83 C4 08		ADD     ESP, 8
33 C0		XOR     EAX, EAX
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
81 C4 00 01 00 00		ADD     ESP, 100H
3B EC		CMP     EBP, ESP
E8 17 F7 FF FF		CALL    J___RTC_CHECKESP
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC FC 00 00 00		SUB     ESP, 0FCH
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
8D 7D C4		LEA     EDI, [EBP+VAR_3C]
B9 0F 00 00 00		MOV     ECX, 0FH
B8 CC CC CC CC		MOV     EAX, 0CCCCCCCCH
F3 AB		REP STOSD
B9 A2 C0 01 00		MOV     ECX, OFFSET UNK_1C0A2
E8 40 F7 FF FF		CALL    J_@__CHECKFORDEBUGGERJUSTMYCODE@4; __CHECKFORDEBUGGERJUSTMYCODE(X)
C7 45 F8 0A 00 00 00		MOV     [EBP+SIZE], 0AH
8B F4		MOV     ESI, ESP
8B 45 F8		MOV     EAX, [EBP+SIZE]
50		PUSH    EAX; SIZE
FF 15 7C B1 01 00		CALL    DS:__IMP_MALLOC
83 C4 04		ADD     ESP, 4
3B F4		CMP     ESI, ESP
E8 42 F6 FF FF		CALL    J___RTC_CHECKESP
89 45 E0		MOV     [EBP+VAR_20], EAX
68 4C 7B 01 00		PUSH    OFFSET SOURCE; "0X90"
E8 6B F7 FF FF		CALL    J_STRLEN
83 C4 04		ADD     ESP, 4
89 45 D4		MOV     [EBP+VAR_2C], EAX
C7 45 EC 00 00 00 00		MOV     [EBP+VAR_14], 0
EB 09		JMP     SHORT LOC_11C27
8B 45 EC		MOV     EAX, [EBP+VAR_14]
83 C0 01		ADD     EAX, 1
89 45 EC		MOV     [EBP+VAR_14], EAX
8B 45 F8		MOV     EAX, [EBP+SIZE]
83 E8 01		SUB     EAX, 1
39 45 EC		CMP     [EBP+VAR_14], EAX
7D 27		JGE     SHORT LOC_11C59
8B F4		MOV     ESI, ESP
68 4C 7B 01 00		PUSH    OFFSET SOURCE; "0X90"
8B 45 D4		MOV     EAX, [EBP+VAR_2C]
83 C0 01		ADD     EAX, 1
50		PUSH    EAX; SIZEINBYTES
8B 4D E0		MOV     ECX, [EBP+VAR_20]
03 4D EC		ADD     ECX, [EBP+VAR_14]
51		PUSH    ECX; DESTINATION
FF 15 78 B1 01 00		CALL    DS:__IMP_STRCPY_S
83 C4 0C		ADD     ESP, 0CH
3B F4		CMP     ESI, ESP
E8 ED F5 FF FF		CALL    J___RTC_CHECKESP
EB C5		JMP     SHORT LOC_11C1E
8B F4		MOV     ESI, ESP
68 54 7B 01 00		PUSH    OFFSET A0XC3; "0XC3"
8B 45 D4		MOV     EAX, [EBP+VAR_2C]
83 C0 01		ADD     EAX, 1
50		PUSH    EAX; SIZEINBYTES
8B 4D E0		MOV     ECX, [EBP+VAR_20]
03 4D F8		ADD     ECX, [EBP+SIZE]
51		PUSH    ECX; DESTINATION
FF 15 78 B1 01 00		CALL    DS:__IMP_STRCPY_S
83 C4 0C		ADD     ESP, 0CH
3B F4		CMP     ESI, ESP
E8 C6 F5 FF FF		CALL    J___RTC_CHECKESP
B8 01 00 00 00		MOV     EAX, 1
6B C8 05		IMUL    ECX, EAX, 5
03 4D E0		ADD     ECX, [EBP+VAR_20]
89 4D C8		MOV     [EBP+VAR_38], ECX
8B 45 C8		MOV     EAX, [EBP+VAR_38]
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
81 C4 FC 00 00 00		ADD     ESP, 0FCH
3B EC		CMP     EBP, ESP
E8 A5 F5 FF FF		CALL    J___RTC_CHECKESP
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC CC 00 00 00		SUB     ESP, 0CCH
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
8D 7D F4		LEA     EDI, [EBP+VAR_C]
B9 03 00 00 00		MOV     ECX, 3
B8 CC CC CC CC		MOV     EAX, 0CCCCCCCCH
F3 AB		REP STOSD
B9 A2 C0 01 00		MOV     ECX, OFFSET UNK_1C0A2
E8 20 F6 FF FF		CALL    J_@__CHECKFORDEBUGGERJUSTMYCODE@4; __CHECKFORDEBUGGERJUSTMYCODE(X)
8B 45 08		MOV     EAX, [EBP+ARG_0]
2B 45 0C		SUB     EAX, [EBP+ARG_4]
89 45 F8		MOV     [EBP+VAR_8], EAX
8B 45 F8		MOV     EAX, [EBP+VAR_8]
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
81 C4 CC 00 00 00		ADD     ESP, 0CCH
3B EC		CMP     EBP, ESP
E8 23 F5 FF FF		CALL    J___RTC_CHECKESP
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 08		SUB     ESP, 8
89 4D FC		MOV     [EBP+VAR_4], ECX
8B 45 FC		MOV     EAX, [EBP+VAR_4]
89 45 F8		MOV     [EBP+VAR_8], EAX
8B 4D FC		MOV     ECX, [EBP+VAR_4]
0F B6 11		MOVZX   EDX, BYTE PTR [ECX]
85 D2		TEST    EDX, EDX
74 18		JZ      SHORT LOC_11D71
83 3D 18 A6 01 00 00		CMP     DWORD_1A618, 0
74 0F		JZ      SHORT LOC_11D71
FF 15 3C B0 01 00		CALL    DS:__IMP_GETCURRENTTHREADID
39 05 18 A6 01 00		CMP     DWORD_1A618, EAX
75 01		JNZ     SHORT LOC_11D71
90		NOP
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
53		PUSH    EBX
56		PUSH    ESI
8B F1		MOV     ESI, ECX
8B DA		MOV     EBX, EDX
85 F6		TEST    ESI, ESI
74 1F		JZ      SHORT LOC_11DBC
85 DB		TEST    EBX, EBX
74 1B		JZ      SHORT LOC_11DBC
8B 55 08		MOV     EDX, [EBP+PALLOCAINFOLIST]
85 D2		TEST    EDX, EDX
74 14		JZ      SHORT LOC_11DBC
57		PUSH    EDI
B0 CC		MOV     AL, 0CCH
8B FE		MOV     EDI, ESI
8B CB		MOV     ECX, EBX
F3 AA		REP STOSB
8B 02		MOV     EAX, [EDX]
89 46 04		MOV     [ESI+4], EAX
89 5E 0C		MOV     [ESI+0CH], EBX
89 32		MOV     [EDX], ESI
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
5D		POP     EBP
C2 04 00		RETN    4
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 08		SUB     ESP, 8
89 4D FC		MOV     [EBP+VAR_4], ECX
56		PUSH    ESI
8B 75 08		MOV     ESI, [EBP+ALLOCALIST]
57		PUSH    EDI
85 D2		TEST    EDX, EDX
74 4F		JZ      SHORT LOC_11E31
33 FF		XOR     EDI, EDI
39 3A		CMP     [EDX], EDI
7E 49		JLE     SHORT LOC_11E31
53		PUSH    EBX
33 DB		XOR     EBX, EBX
8B F2		MOV     ESI, EDX
8D 49 00		LEA     ECX, [ECX+0]
8B 4E 04		MOV     ECX, [ESI+4]
8B 45 FC		MOV     EAX, [EBP+VAR_4]
8B 14 19		MOV     EDX, [ECX+EBX]
81 7C 02 FC CC CC CC CC		CMP     DWORD PTR [EDX+EAX-4], 0CCCCCCCCH
75 12		JNZ     SHORT LOC_11E15
8B 44 19 04		MOV     EAX, [ECX+EBX+4]
03 C2		ADD     EAX, EDX
8B 55 FC		MOV     EDX, [EBP+VAR_4]
81 3C 10 CC CC CC CC		CMP     DWORD PTR [EAX+EDX], 0CCCCCCCCH
74 10		JZ      SHORT LOC_11E25
FF 74 19 08		PUSH    DWORD PTR [ECX+EBX+8]; SOURCE
8B 45 04		MOV     EAX, [EBP+4]
50		PUSH    EAX; VOID *
E8 26 F5 FF FF		CALL    J_?_RTC_STACKFAILURE@@YAXPAXPBD@Z; _RTC_STACKFAILURE(VOID *,CHAR CONST *)
83 C4 08		ADD     ESP, 8
47		INC     EDI
83 C3 0C		ADD     EBX, 0CH
3B 3E		CMP     EDI, [ESI]
7C C3		JL      SHORT LOC_11DF0
8B 75 08		MOV     ESI, [EBP+ALLOCALIST]
5B		POP     EBX
33 FF		XOR     EDI, EDI
8B C6		MOV     EAX, ESI
85 F6		TEST    ESI, ESI
74 63		JZ      SHORT LOC_11E9C
8D A4 24 00 00 00 00		LEA     ESP, [ESP+0]
8B 40 04		MOV     EAX, [EAX+4]
47		INC     EDI
85 C0		TEST    EAX, EAX
75 F8		JNZ     SHORT LOC_11E40
81 3E CC CC CC CC		CMP     DWORD PTR [ESI], 0CCCCCCCCH
75 1B		JNZ     SHORT LOC_11E6B
81 7E 14 CC CC CC CC		CMP     DWORD PTR [ESI+14H], 0CCCCCCCCH
75 12		JNZ     SHORT LOC_11E6B
81 7E 18 CC CC CC CC		CMP     DWORD PTR [ESI+18H], 0CCCCCCCCH
75 09		JNZ     SHORT LOC_11E6B
81 7E 1C CC CC CC CC		CMP     DWORD PTR [ESI+1CH], 0CCCCCCCCH
74 0E		JZ      SHORT LOC_11E79
8B 45 04		MOV     EAX, [EBP+4]
57		PUSH    EDI; INT
56		PUSH    ESI; STRUCT _RTC_ALLOCA_NODE *
50		PUSH    EAX; VOID *
E8 10 F3 FF FF		CALL    J_?_RTC_ALLOCAFAILURE@@YAXPAXPAU_RTC_ALLOCA_NODE@@H@Z; _RTC_ALLOCAFAILURE(VOID *,_RTC_ALLOCA_NODE *,INT)
83 C4 0C		ADD     ESP, 0CH
8B 46 0C		MOV     EAX, [ESI+0CH]
81 7C 30 FC CC CC CC CC		CMP     DWORD PTR [EAX+ESI-4], 0CCCCCCCCH
74 0E		JZ      SHORT LOC_11E94
8B 45 04		MOV     EAX, [EBP+4]
57		PUSH    EDI; INT
56		PUSH    ESI; STRUCT _RTC_ALLOCA_NODE *
50		PUSH    EAX; VOID *
E8 F5 F2 FF FF		CALL    J_?_RTC_ALLOCAFAILURE@@YAXPAXPAU_RTC_ALLOCA_NODE@@H@Z; _RTC_ALLOCAFAILURE(VOID *,_RTC_ALLOCA_NODE *,INT)
83 C4 0C		ADD     ESP, 0CH
8B 76 04		MOV     ESI, [ESI+4]
4F		DEC     EDI
85 F6		TEST    ESI, ESI
75 AC		JNZ     SHORT LOC_11E48
5F		POP     EDI
5E		POP     ESI
8B E5		MOV     ESP, EBP
5D		POP     EBP
C2 04 00		RETN    4
55		PUSH    EBP
8B EC		MOV     EBP, ESP
51		PUSH    ECX
53		PUSH    EBX
8B DA		MOV     EBX, EDX
89 4D FC		MOV     [EBP+VAR_4], ECX
56		PUSH    ESI
33 F6		XOR     ESI, ESI
39 33		CMP     [EBX], ESI
7E 41		JLE     SHORT LOC_11F32
57		PUSH    EDI
33 FF		XOR     EDI, EDI
8B 4B 04		MOV     ECX, [EBX+4]
8B 45 FC		MOV     EAX, [EBP+VAR_4]
8B 14 39		MOV     EDX, [ECX+EDI]
81 7C 02 FC CC CC CC CC		CMP     DWORD PTR [EDX+EAX-4], 0CCCCCCCCH
75 12		JNZ     SHORT LOC_11F19
8B 44 39 04		MOV     EAX, [ECX+EDI+4]
03 C2		ADD     EAX, EDX
8B 55 FC		MOV     EDX, [EBP+VAR_4]
81 3C 10 CC CC CC CC		CMP     DWORD PTR [EAX+EDX], 0CCCCCCCCH
74 10		JZ      SHORT LOC_11F29
FF 74 39 08		PUSH    DWORD PTR [ECX+EDI+8]; SOURCE
8B 45 04		MOV     EAX, [EBP+4]
50		PUSH    EAX; VOID *
E8 22 F4 FF FF		CALL    J_?_RTC_STACKFAILURE@@YAXPAXPBD@Z; _RTC_STACKFAILURE(VOID *,CHAR CONST *)
83 C4 08		ADD     ESP, 8
46		INC     ESI
83 C7 0C		ADD     EDI, 0CH
3B 33		CMP     ESI, [EBX]
7C C3		JL      SHORT LOC_11EF4
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
75 01		JNZ     SHORT $ESPERROR$4
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 00		SUB     ESP, 0
50		PUSH    EAX
52		PUSH    EDX
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
8B 45 04		MOV     EAX, [EBP+4]
6A 00		PUSH    0; INT
50		PUSH    EAX; VOID *
E8 78 F1 FF FF		CALL    J_?_RTC_FAILURE@@YAXPAXH@Z; _RTC_FAILURE(VOID *,INT)
83 C4 08		ADD     ESP, 8
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
5A		POP     EDX
58		POP     EAX
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
B8 4D 13 01 00		MOV     EAX, OFFSET J__CRTDBGREPORT
C3		RETN
B8 DC 10 01 00		MOV     EAX, OFFSET J__CRTDBGREPORTW
C3		RETN
80 3D 40 A1 01 00 00		CMP     BYTE_1A140, 0
75 1F		JNZ     SHORT LOCRET_11FC8
6A 00		PUSH    0
6A 01		PUSH    1
6A 00		PUSH    0
6A 00		PUSH    0
6A 00		PUSH    0
C6 05 40 A1 01 00 01		MOV     BYTE_1A140, 1
E8 09 F1 FF FF		CALL    SUB_110C8
50		PUSH    EAX
E8 6F F3 FF FF		CALL    SUB_11334
83 C4 18		ADD     ESP, 18H
C3		RETN
6A 01		PUSH    1
6A 01		PUSH    1
6A 00		PUSH    0
6A 00		PUSH    0
6A 00		PUSH    0
E8 D9 F0 FF FF		CALL    SUB_110C8
83 C4 14		ADD     ESP, 14H
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 A7 F0 FF FF		CALL    J_?SET_APP_TYPE@__SCRT_MAIN_POLICY@@SAXXZ; __SCRT_MAIN_POLICY::SET_APP_TYPE(VOID)
E8 D2 F2 FF FF		CALL    J_?SET_FMODE@__SCRT_FILE_POLICY@@SAXXZ; __SCRT_FILE_POLICY::SET_FMODE(VOID)
E8 FD EF FF FF		CALL    J_?SET_COMMODE@__SCRT_FILE_POLICY@@SAXXZ; __SCRT_FILE_POLICY::SET_COMMODE(VOID)
6A 01		PUSH    1
E8 1D F1 FF FF		CALL    J____SCRT_INITIALIZE_ONEXIT_TABLES
83 C4 04		ADD     ESP, 4
0F B6 C0		MOVZX   EAX, AL
85 C0		TEST    EAX, EAX
75 07		JNZ     SHORT LOC_1202A
6A 07		PUSH    7
E8 A7 F1 FF FF		CALL    J____SCRT_FASTFAIL
DB E2		FNCLEX
E8 D9 EF FF FF		CALL    SUB_1100A
68 9A 11 01 00		PUSH    OFFSET SUB_1119A; VOID (__CDECL *)()
E8 B4 F1 FF FF		CALL    J__ATEXIT
83 C4 04		ADD     ESP, 4
E8 C5 F1 FF FF		CALL    SUB_11208
85 C0		TEST    EAX, EAX
74 07		JZ      SHORT LOC_1204E
6A 07		PUSH    7
E8 83 F1 FF FF		CALL    J____SCRT_FASTFAIL
E8 43 F0 FF FF		CALL    SUB_11096
E8 B5 F1 FF FF		CALL    J____SCRT_IS_USER_MATHERR_PRESENT
85 C0		TEST    EAX, EAX
74 0D		JZ      SHORT LOC_12069
68 FA 10 01 00		PUSH    OFFSET USERMATHERRORFUNCTION; USERMATHERRORFUNCTION
E8 65 F2 FF FF		CALL    J___SETUSERMATHERR
83 C4 04		ADD     ESP, 4
E8 2A F3 FF FF		CALL    SUB_11398
E8 C9 EF FF FF		CALL    SUB_1103C
E8 B2 F2 FF FF		CALL    J___INITIALIZE_DEFAULT_PRECISION
E8 F9 F1 FF FF		CALL    J____SCRT_STUB_FOR_INITIALIZE_MTA_2
50		PUSH    EAX; FLAG
E8 CB F1 FF FF		CALL    J__CONFIGTHREADLOCALE
83 C4 04		ADD     ESP, 4
E8 63 F2 FF FF		CALL    J___SHOULD_INITIALIZE_ENVIRONMENT
0F B6 C8		MOVZX   ECX, AL
85 C9		TEST    ECX, ECX
74 05		JZ      SHORT LOC_12097
E8 9A F0 FF FF		CALL    SUB_11131
E8 DF F1 FF FF		CALL    J____SCRT_STUB_FOR_INITIALIZE_MTA_3
E8 76 F1 FF FF		CALL    SUB_11217
85 C0		TEST    EAX, EAX
74 07		JZ      SHORT LOC_120AC
6A 07		PUSH    7
E8 25 F1 FF FF		CALL    J____SCRT_FASTFAIL
33 C0		XOR     EAX, EAX
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 85 F0 FF FF		CALL    J____SCRT_INITIALIZE_DEFAULT_LOCAL_STDIO_OPTIONS
33 C0		XOR     EAX, EAX
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 37 F2 FF FF		CALL    SUB_1132F
E8 48 F0 FF FF		CALL    J____SCRT_STUB_FOR_INITIALIZE_MTA_1
50		PUSH    EAX; NEWMODE
E8 C9 F0 FF FF		CALL    J__SET_NEW_MODE
83 C4 04		ADD     ESP, 4
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 94 F2 FF FF		CALL    J____SECURITY_INIT_COOKIE
E8 13 00 00 00		CALL    ?__SCRT_COMMON_MAIN_SEH@@YAHXZ; __SCRT_COMMON_MAIN_SEH(VOID)
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
6A FE		PUSH    0FFFFFFFEH
68 38 92 01 00		PUSH    OFFSET STRU_19238
68 B0 3C 01 00		PUSH    OFFSET __EXCEPT_HANDLER4
64 A1 00 00 00 00		MOV     EAX, LARGE FS:0
50		PUSH    EAX
83 C4 CC		ADD     ESP, 0FFFFFFCCH
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
A1 20 A0 01 00		MOV     EAX, ___SECURITY_COOKIE
31 45 F8		XOR     [EBP+MS_EXC.REGISTRATION.SCOPETABLE], EAX
33 C5		XOR     EAX, EBP
50		PUSH    EAX
8D 45 F0		LEA     EAX, [EBP+MS_EXC.REGISTRATION]
64 A3 00 00 00 00		MOV     LARGE FS:0, EAX
89 65 E8		MOV     [EBP+MS_EXC.OLD_ESP], ESP
6A 01		PUSH    1
E8 48 F1 FF FF		CALL    J____SCRT_INITIALIZE_CRT
83 C4 04		ADD     ESP, 4
0F B6 C0		MOVZX   EAX, AL
85 C0		TEST    EAX, EAX
75 07		JNZ     SHORT LOC_1217B
6A 07		PUSH    7
E8 56 F0 FF FF		CALL    J____SCRT_FASTFAIL
C6 45 E7 00		MOV     [EBP+VAR_19], 0
C7 45 FC 00 00 00 00		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0
E8 59 F1 FF FF		CALL    J____SCRT_ACQUIRE_STARTUP_LOCK
88 45 E6		MOV     [EBP+VAR_1A], AL
83 3D 60 A1 01 00 01		CMP     DWORD_1A160, 1
75 09		JNZ     SHORT LOC_121A0
6A 07		PUSH    7
E8 33 F0 FF FF		CALL    J____SCRT_FASTFAIL
EB 61		JMP     SHORT LOC_12201
83 3D 60 A1 01 00 00		CMP     DWORD_1A160, 0
75 54		JNZ     SHORT LOC_121FD
C7 05 60 A1 01 00 01 00 00 00		MOV     DWORD_1A160, 1
68 18 76 01 00		PUSH    OFFSET LAST; LAST
68 0C 73 01 00		PUSH    OFFSET FIRST; FIRST
E8 BB EE FF FF		CALL    J__INITTERM_E
83 C4 08		ADD     ESP, 8
85 C0		TEST    EAX, EAX
74 16		JZ      SHORT LOC_121DF
C7 45 C8 FF 00 00 00		MOV     [EBP+VAR_38], 0FFH
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
8B 45 C8		MOV     EAX, [EBP+VAR_38]
E9 53 01 00 00		JMP     LOC_12332
68 08 72 01 00		PUSH    OFFSET DWORD_17208; LAST
68 00 70 01 00		PUSH    OFFSET DWORD_17000; FIRST
E8 7D F1 FF FF		CALL    J__INITTERM
83 C4 08		ADD     ESP, 8
C7 05 60 A1 01 00 02 00 00 00		MOV     DWORD_1A160, 2
EB 04		JMP     SHORT LOC_12201
C6 45 E7 01		MOV     [EBP+VAR_19], 1
0F B6 4D E6		MOVZX   ECX, [EBP+VAR_1A]
51		PUSH    ECX
E8 67 EF FF FF		CALL    J____SCRT_RELEASE_STARTUP_LOCK
83 C4 04		ADD     ESP, 4
E8 38 EE FF FF		CALL    SUB_1104B
89 45 E0		MOV     [EBP+VAR_20], EAX
8B 55 E0		MOV     EDX, [EBP+VAR_20]
83 3A 00		CMP     DWORD PTR [EDX], 0
74 33		JZ      SHORT LOC_12251
8B 45 E0		MOV     EAX, [EBP+VAR_20]
50		PUSH    EAX
E8 00 EF FF FF		CALL    J____SCRT_IS_NONWRITABLE_IN_CURRENT_IMAGE
83 C4 04		ADD     ESP, 4
0F B6 C8		MOVZX   ECX, AL
85 C9		TEST    ECX, ECX
74 20		JZ      SHORT LOC_12251
8B 55 E0		MOV     EDX, [EBP+VAR_20]
8B 02		MOV     EAX, [EDX]
89 45 C4		MOV     [EBP+VAR_3C], EAX
6A 00		PUSH    0
6A 02		PUSH    2
6A 00		PUSH    0
8B 4D C4		MOV     ECX, [EBP+VAR_3C]
89 4D D8		MOV     [EBP+VAR_28], ECX
8B 4D D8		MOV     ECX, [EBP+VAR_28]; THIS
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
FF 55 D8		CALL    [EBP+VAR_28]
E8 E1 ED FF FF		CALL    SUB_11037
89 45 DC		MOV     [EBP+VAR_24], EAX
8B 55 DC		MOV     EDX, [EBP+VAR_24]
83 3A 00		CMP     DWORD PTR [EDX], 0
74 21		JZ      SHORT LOC_12282
8B 45 DC		MOV     EAX, [EBP+VAR_24]
50		PUSH    EAX
E8 BD EE FF FF		CALL    J____SCRT_IS_NONWRITABLE_IN_CURRENT_IMAGE
83 C4 04		ADD     ESP, 4
0F B6 C8		MOVZX   ECX, AL
85 C9		TEST    ECX, ECX
74 0E		JZ      SHORT LOC_12282
8B 55 DC		MOV     EDX, [EBP+VAR_24]
8B 02		MOV     EAX, [EDX]
50		PUSH    EAX; CALLBACK
E8 80 EE FF FF		CALL    J__REGISTER_THREAD_LOCAL_EXE_ATEXIT_CALLBACK
83 C4 04		ADD     ESP, 4
E8 79 01 00 00		CALL    ?INVOKE_MAIN@@YAHXZ; INVOKE_MAIN(VOID)
89 45 D4		MOV     [EBP+CODE], EAX
E8 69 F0 FF FF		CALL    J____SCRT_IS_MANAGED_APP
0F B6 C8		MOVZX   ECX, AL
85 C9		TEST    ECX, ECX
75 09		JNZ     SHORT LOC_1229F
8B 55 D4		MOV     EDX, [EBP+CODE]
52		PUSH    EDX; CODE
E8 5F EF FF FF		CALL    J_EXIT
0F B6 45 E7		MOVZX   EAX, [EBP+VAR_19]
85 C0		TEST    EAX, EAX
75 05		JNZ     SHORT LOC_122AC
E8 0A F1 FF FF		CALL    J__CEXIT
6A 00		PUSH    0
6A 01		PUSH    1
E8 CC EE FF FF		CALL    J____SCRT_UNINITIALIZE_CRT
83 C4 08		ADD     ESP, 8
8B 4D D4		MOV     ECX, [EBP+CODE]
89 4D C0		MOV     [EBP+VAR_40], ECX
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
8B 45 C0		MOV     EAX, [EBP+VAR_40]
EB 68		JMP     SHORT LOC_12332
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
EB 5F		JMP     SHORT LOC_12332
8B 55 EC		MOV     EDX, [EBP+MS_EXC.EXC_PTR]
8B 02		MOV     EAX, [EDX]
8B 08		MOV     ECX, [EAX]
89 4D D0		MOV     [EBP+EXCEPTIONNUM], ECX
8B 55 EC		MOV     EDX, [EBP+MS_EXC.EXC_PTR]
52		PUSH    EDX; EXCEPTIONPTR
8B 45 D0		MOV     EAX, [EBP+EXCEPTIONNUM]
50		PUSH    EAX; EXCEPTIONNUM
E8 2E EE FF FF		CALL    J__SEH_FILTER_EXE
83 C4 08		ADD     ESP, 8
C3		RETN
8B 65 E8		MOV     ESP, [EBP+MS_EXC.OLD_ESP]
8B 4D D0		MOV     ECX, [EBP+EXCEPTIONNUM]
89 4D CC		MOV     [EBP+VAR_34], ECX
E8 FC EF FF FF		CALL    J____SCRT_IS_MANAGED_APP
0F B6 D0		MOVZX   EDX, AL
85 D2		TEST    EDX, EDX
75 09		JNZ     SHORT LOC_1230C
8B 45 CC		MOV     EAX, [EBP+VAR_34]
50		PUSH    EAX; CODE
E8 5A F0 FF FF		CALL    J__EXIT
0F B6 4D E7		MOVZX   ECX, [EBP+VAR_19]
85 C9		TEST    ECX, ECX
75 05		JNZ     SHORT LOC_12319
E8 0D EF FF FF		CALL    J__C_EXIT
8B 55 CC		MOV     EDX, [EBP+VAR_34]
89 55 BC		MOV     [EBP+VAR_44], EDX
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
8B 45 BC		MOV     EAX, [EBP+VAR_44]
EB 07		JMP     SHORT LOC_12332
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
8B 4D F0		MOV     ECX, [EBP+MS_EXC.REGISTRATION.NEXT]
64 89 0D 00 00 00 00		MOV     LARGE FS:0, ECX
59		POP     ECX
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 C1 EE FF FF		CALL    J___GET_STARTUP_ARGV_MODE
50		PUSH    EAX; MODE
E8 AB EF FF FF		CALL    J__CONFIGURE_NARROW_ARGV
83 C4 04		ADD     ESP, 4
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 8F EC FF FF		CALL    J__INITIALIZE_NARROW_ENVIRONMENT
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 0C		SUB     ESP, 0CH
E8 98 EE FF FF		CALL    J__GET_INITIAL_NARROW_ENVIRONMENT
89 45 FC		MOV     [EBP+ENVP], EAX
E8 9A EE FF FF		CALL    J___P___ARGV
8B 00		MOV     EAX, [EAX]
89 45 F8		MOV     [EBP+ARGV], EAX
E8 51 EC FF FF		CALL    J___P___ARGC
8B 08		MOV     ECX, [EAX]
89 4D F4		MOV     [EBP+ARGC], ECX
8B 55 FC		MOV     EDX, [EBP+ENVP]
52		PUSH    EDX; ENVP
8B 45 F8		MOV     EAX, [EBP+ARGV]
50		PUSH    EAX; ARGV
8B 4D F4		MOV     ECX, [EBP+ARGC]
51		PUSH    ECX; ARGC
E8 A7 EE FF FF		CALL    _MAIN
83 C4 0C		ADD     ESP, 0CH
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
6A 01		PUSH    1; TYPE
E8 96 EC FF FF		CALL    J__SET_APP_TYPE
83 C4 04		ADD     ESP, 4
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
51		PUSH    ECX
E8 A9 EC FF FF		CALL    J____SCRT_STUB_FOR_INITIALIZE_MTA_0
89 45 FC		MOV     [EBP+VAR_4], EAX
E8 BA EC FF FF		CALL    J___P__COMMODE
8B 4D FC		MOV     ECX, [EBP+VAR_4]
89 08		MOV     [EAX], ECX
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 3F EC FF FF		CALL    J___GET_STARTUP_FILE_MODE
50		PUSH    EAX; MODE
E8 09 EF FF FF		CALL    J__SET_FMODE
83 C4 04		ADD     ESP, 4
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 58 FC FF FF		CALL    ?__SCRT_COMMON_MAIN@@YAHXZ; __SCRT_COMMON_MAIN(VOID)
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 1C		SUB     ESP, 1CH
8B 45 08		MOV     EAX, [EBP+ARG_0]
89 45 E8		MOV     [EBP+VAR_18], EAX
8D 45 FF		LEA     EAX, [EBP+VAR_1]
89 45 EC		MOV     [EBP+VAR_14], EAX
8D 45 E4		LEA     EAX, [EBP+ARGUMENTS]
50		PUSH    EAX; LPARGUMENTS
C6 45 FF 00		MOV     [EBP+VAR_1], 0
C7 45 E4 01 10 00 00		MOV     [EBP+ARGUMENTS], 1001H
E8 2A 06 00 00		CALL    ?NOTIFY_DEBUGGER@@YAXABUTAGEXCEPTION_VISUALCPP_DEBUG_INFO@@@Z; NOTIFY_DEBUGGER(TAGEXCEPTION_VISUALCPP_DEBUG_INFO CONST &)
83 C4 04		ADD     ESP, 4
80 7D FF 00		CMP     [EBP+VAR_1], 0
0F 95 C0		SETNZ   AL
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 1C		SUB     ESP, 1CH
8B 45 08		MOV     EAX, [EBP+ARG_0]
89 45 E8		MOV     [EBP+VAR_18], EAX
8B 45 0C		MOV     EAX, [EBP+ARG_4]
89 45 EC		MOV     [EBP+VAR_14], EAX
8B 45 10		MOV     EAX, [EBP+ARG_8]
89 45 F0		MOV     [EBP+VAR_10], EAX
8D 45 FF		LEA     EAX, [EBP+VAR_1]
89 45 F4		MOV     [EBP+VAR_C], EAX
8B 45 14		MOV     EAX, [EBP+ARG_C]
89 45 F8		MOV     [EBP+VAR_8], EAX
8D 45 E4		LEA     EAX, [EBP+ARGUMENTS]
50		PUSH    EAX; LPARGUMENTS
C6 45 FF 00		MOV     [EBP+VAR_1], 0
C7 45 E4 02 10 00 00		MOV     [EBP+ARGUMENTS], 1002H
E8 C8 05 00 00		CALL    ?NOTIFY_DEBUGGER@@YAXABUTAGEXCEPTION_VISUALCPP_DEBUG_INFO@@@Z; NOTIFY_DEBUGGER(TAGEXCEPTION_VISUALCPP_DEBUG_INFO CONST &)
83 C4 04		ADD     ESP, 4
80 7D FF 00		CMP     [EBP+VAR_1], 0
0F 95 C0		SETNZ   AL
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 44 01 00 00		SUB     ESP, 144H
A1 20 A0 01 00		MOV     EAX, ___SECURITY_COOKIE
33 C5		XOR     EAX, EBP
89 45 FC		MOV     [EBP+VAR_4], EAX
8B 45 08		MOV     EAX, [EBP+ARG_0]
53		PUSH    EBX
8B 5D 0C		MOV     EBX, [EBP+ARG_4]
57		PUSH    EDI
8B 3D 10 A0 01 00		MOV     EDI, DWORD_1A010
89 85 BC FE FF FF		MOV     [EBP+VAR_144], EAX
83 FF FF		CMP     EDI, 0FFFFFFFFH
0F 84 A6 00 00 00		JZ      LOC_12646
85 DB		TEST    EBX, EBX
75 21		JNZ     SHORT LOC_125C5
68 F0 80 01 00		PUSH    OFFSET MULTIBYTESTR; "STACK AREA AROUND _ALLOCA MEMORY RESERV"...
6A 04		PUSH    4; INT
57		PUSH    EDI; INT
50		PUSH    EAX; VOID *
E8 DE 02 00 00		CALL    ?FAILWITHMESSAGE@@YAXPAXHHPBD@Z; FAILWITHMESSAGE(VOID *,INT,INT,CHAR CONST *)
83 C4 10		ADD     ESP, 10H
5F		POP     EDI
5B		POP     EBX
8B 4D FC		MOV     ECX, [EBP+VAR_4]
33 CD		XOR     ECX, EBP; STACKCOOKIE
E8 89 EB FF FF		CALL    J_@__SECURITY_CHECK_COOKIE@4; __SECURITY_CHECK_COOKIE(X)
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
8B 43 0C		MOV     EAX, [EBX+0CH]
56		PUSH    ESI
83 E8 24		SUB     EAX, 24H ; '$'
8D 73 20		LEA     ESI, [EBX+20H]
50		PUSH    EAX; UNSIGNED INT
56		PUSH    ESI; CHAR *
8D 45 B4		LEA     EAX, [EBP+VAR_4C]
50		PUSH    EAX; CHAR *
8D 45 E8		LEA     EAX, [EBP+VAR_18]
50		PUSH    EAX; CHAR *
E8 02 02 00 00		CALL    ?_GETMEMBLOCKDATASTRING@@YAXPAD0PBDI@Z; _GETMEMBLOCKDATASTRING(CHAR *,CHAR *,CHAR CONST *,UINT)
68 48 81 01 00		PUSH    OFFSET ASC_18148; "\N"
8D 45 B4		LEA     EAX, [EBP+VAR_4C]
50		PUSH    EAX
68 4C 81 01 00		PUSH    OFFSET ASC_1814C; "> "
8D 45 E8		LEA     EAX, [EBP+VAR_18]
50		PUSH    EAX
8B 43 0C		MOV     EAX, [EBX+0CH]
68 50 81 01 00		PUSH    OFFSET ADATA; "\NDATA: <"
FF 75 10		PUSH    [EBP+ARG_8]
83 E8 24		SUB     EAX, 24H ; '$'
68 5C 81 01 00		PUSH    OFFSET AALLOCATIONNUMB; "\NALLOCATION NUMBER WITHIN THIS FUNCTIO"...
50		PUSH    EAX
68 90 81 01 00		PUSH    OFFSET ASIZE; "\NSIZE: "
56		PUSH    ESI
68 9C 81 01 00		PUSH    OFFSET AADDRESS0X; "\NADDRESS: 0X"
68 B0 81 01 00		PUSH    OFFSET ASTACKAREAAROUN_0; "STACK AREA AROUND _ALLOCA MEMORY RESERV"...
68 08 82 01 00		PUSH    OFFSET FORMAT; "%S%S%P%S%ZD%S%D%S%S%S%S%S"
8D 85 C0 FE FF FF		LEA     EAX, [EBP+BUFFER]
68 F4 00 00 00		PUSH    0F4H; BUFFERCOUNT
50		PUSH    EAX; BUFFER
E8 AB EC FF FF		CALL    J__SPRINTF_S
83 C4 4C		ADD     ESP, 4CH
8D 85 C0 FE FF FF		LEA     EAX, [EBP+BUFFER]
50		PUSH    EAX; LPMULTIBYTESTR
6A 04		PUSH    4; INT
57		PUSH    EDI; INT
FF B5 BC FE FF FF		PUSH    [EBP+VAR_144]; VOID *
E8 4E 02 00 00		CALL    ?FAILWITHMESSAGE@@YAXPAXHHPBD@Z; FAILWITHMESSAGE(VOID *,INT,INT,CHAR CONST *)
83 C4 10		ADD     ESP, 10H
5E		POP     ESI
8B 4D FC		MOV     ECX, [EBP+VAR_4]
5F		POP     EDI
33 CD		XOR     ECX, EBP; STACKCOOKIE
5B		POP     EBX
E8 F8 EA FF FF		CALL    J_@__SECURITY_CHECK_COOKIE@4; __SECURITY_CHECK_COOKIE(X)
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 0C		MOV     EAX, [EBP+ARG_4]
83 F8 04		CMP     EAX, 4
77 23		JA      SHORT LOC_126BE
8B 0C 85 00 A0 01 00		MOV     ECX, DWORD_1A000[EAX*4]
8B 14 85 A8 7B 01 00		MOV     EDX, DS:LPMULTIBYTESTR[EAX*4]
83 F9 FF		CMP     ECX, 0FFFFFFFFH
74 2E		JZ      SHORT LOC_126DC
52		PUSH    EDX; LPMULTIBYTESTR
50		PUSH    EAX; INT
51		PUSH    ECX; INT
FF 75 08		PUSH    [EBP+ARG_0]; VOID *
E8 D7 01 00 00		CALL    ?FAILWITHMESSAGE@@YAXPAXHHPBD@Z; FAILWITHMESSAGE(VOID *,INT,INT,CHAR CONST *)
83 C4 10		ADD     ESP, 10H
5D		POP     EBP
C3		RETN
8B 15 BC 7B 01 00		MOV     EDX, DS:OFF_17BBC; "UNKNOWN RUNTIME CHECK ERROR\R\N"
B8 05 00 00 00		MOV     EAX, 5
52		PUSH    EDX; LPMULTIBYTESTR
50		PUSH    EAX; INT
B9 01 00 00 00		MOV     ECX, 1
51		PUSH    ECX; INT
FF 75 08		PUSH    [EBP+ARG_0]; VOID *
E8 B7 01 00 00		CALL    ?FAILWITHMESSAGE@@YAXPAXHHPBD@Z; FAILWITHMESSAGE(VOID *,INT,INT,CHAR CONST *)
83 C4 10		ADD     ESP, 10H
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 04 04 00 00		SUB     ESP, 404H
A1 20 A0 01 00		MOV     EAX, ___SECURITY_COOKIE
33 C5		XOR     EAX, EBP
89 45 FC		MOV     [EBP+VAR_4], EAX
53		PUSH    EBX
8B 5D 08		MOV     EBX, [EBP+ARG_0]
56		PUSH    ESI
8B 75 0C		MOV     ESI, [EBP+SOURCE]
57		PUSH    EDI
8B 3D 08 A0 01 00		MOV     EDI, DWORD_1A008
83 FF FF		CMP     EDI, 0FFFFFFFFH
74 73		JZ      SHORT LOC_1279A
80 3E 00		CMP     BYTE PTR [ESI], 0
74 5C		JZ      SHORT LOC_12788
56		PUSH    ESI; CHAR *
E8 3E 01 00 00		CALL    ?_STRLEN_PRIV@@YAIPBD@Z; _STRLEN_PRIV(CHAR CONST *)
83 C0 2D		ADD     EAX, 2DH ; '-'
83 C4 04		ADD     ESP, 4
3D 00 04 00 00		CMP     EAX, 400H
77 49		JA      SHORT LOC_12788
68 D8 7B 01 00		PUSH    OFFSET ASTACKAROUNDTHE; "STACK AROUND THE VARIABLE '"
8D 85 FC FB FF FF		LEA     EAX, [EBP+DESTINATION]
68 00 04 00 00		PUSH    400H; SIZEINBYTES
50		PUSH    EAX; DESTINATION
E8 0C EC FF FF		CALL    J_STRCPY_S
56		PUSH    ESI; SOURCE
8D 85 FC FB FF FF		LEA     EAX, [EBP+DESTINATION]
68 00 04 00 00		PUSH    400H; SIZEINBYTES
50		PUSH    EAX; DESTINATION
E8 DC EB FF FF		CALL    J_STRCAT_S
68 F4 7B 01 00		PUSH    OFFSET AWASCORRUPTED; "' WAS CORRUPTED."
8D 85 FC FB FF FF		LEA     EAX, [EBP+DESTINATION]
68 00 04 00 00		PUSH    400H; SIZEINBYTES
50		PUSH    EAX; DESTINATION
E8 C6 EB FF FF		CALL    J_STRCAT_S
83 C4 24		ADD     ESP, 24H
8D 85 FC FB FF FF		LEA     EAX, [EBP+DESTINATION]
EB 05		JMP     SHORT LOC_1278D
B8 B8 80 01 00		MOV     EAX, OFFSET ASTACKCORRUPTED; "STACK CORRUPTED NEAR UNKNOWN VARIABLE"
50		PUSH    EAX; LPMULTIBYTESTR
6A 02		PUSH    2; INT
57		PUSH    EDI; INT
53		PUSH    EBX; VOID *
E8 F9 00 00 00		CALL    ?FAILWITHMESSAGE@@YAXPAXHHPBD@Z; FAILWITHMESSAGE(VOID *,INT,INT,CHAR CONST *)
83 C4 10		ADD     ESP, 10H
8B 4D FC		MOV     ECX, [EBP+VAR_4]
5F		POP     EDI
5E		POP     ESI
33 CD		XOR     ECX, EBP; STACKCOOKIE
5B		POP     EBX
E8 A3 E9 FF FF		CALL    J_@__SECURITY_CHECK_COOKIE@4; __SECURITY_CHECK_COOKIE(X)
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
51		PUSH    ECX
53		PUSH    EBX
8B 5D 10		MOV     EBX, [EBP+ARG_8]
33 D2		XOR     EDX, EDX
56		PUSH    ESI
8B 75 08		MOV     ESI, [EBP+ARG_0]
57		PUSH    EDI
33 FF		XOR     EDI, EDI
2B DE		SUB     EBX, ESI
89 5D 10		MOV     [EBP+ARG_8], EBX
8B 45 14		MOV     EAX, [EBP+ARG_C]
89 55 FC		MOV     [EBP+VAR_4], EDX
83 F8 10		CMP     EAX, 10H
72 05		JB      SHORT LOC_12806
B8 10 00 00 00		MOV     EAX, 10H
8B 4D 0C		MOV     ECX, [EBP+ARG_4]
03 CF		ADD     ECX, EDI
3B D0		CMP     EDX, EAX
73 2C		JNB     SHORT LOC_1283B
8A 1C 33		MOV     BL, [EBX+ESI]
0F B6 C3		MOVZX   EAX, BL
50		PUSH    EAX
B8 31 00 00 00		MOV     EAX, 31H ; '1'
68 E8 80 01 00		PUSH    OFFSET A2X; "%.2X "
2B C7		SUB     EAX, EDI
50		PUSH    EAX; BUFFERCOUNT
51		PUSH    ECX; BUFFER
E8 AC EA FF FF		CALL    J__SPRINTF_S
8B 55 FC		MOV     EDX, [EBP+VAR_4]
83 C4 10		ADD     ESP, 10H
88 1E		MOV     [ESI], BL
42		INC     EDX
8B 5D 10		MOV     EBX, [EBP+ARG_8]
46		INC     ESI
83 C7 03		ADD     EDI, 3
EB BB		JMP     SHORT LOC_127F6
5F		POP     EDI
C6 06 00		MOV     BYTE PTR [ESI], 0
5E		POP     ESI
C6 01 00		MOV     BYTE PTR [ECX], 0
5B		POP     EBX
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 55 08		MOV     EDX, [EBP+ARG_0]
8B C2		MOV     EAX, EDX
8A 08		MOV     CL, [EAX]
40		INC     EAX
84 C9		TEST    CL, CL
75 F9		JNZ     SHORT LOC_12878
2B C2		SUB     EAX, EDX
48		DEC     EAX
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 3C 0E 00 00		SUB     ESP, 0E3CH
A1 20 A0 01 00		MOV     EAX, ___SECURITY_COOKIE
33 C5		XOR     EAX, EBP
89 45 FC		MOV     [EBP+VAR_4], EAX
8B 45 10		MOV     EAX, [EBP+ARG_8]
53		PUSH    EBX
8B 5D 14		MOV     EBX, [EBP+LPMULTIBYTESTR]
56		PUSH    ESI
8B 75 08		MOV     ESI, [EBP+ARG_0]
57		PUSH    EDI
56		PUSH    ESI
89 85 D0 F1 FF FF		MOV     [EBP+VAR_E30], EAX
89 9D C4 F1 FF FF		MOV     [EBP+VAR_E3C], EBX
C7 85 CC F1 FF FF 00 00 00 00		MOV     [EBP+VAR_E34], 0
E8 C3 EA FF FF		CALL    SUB_1138E
8B F8		MOV     EDI, EAX
83 C4 04		ADD     ESP, 4
85 FF		TEST    EDI, EDI
75 0F		JNZ     SHORT LOC_128E3
56		PUSH    ESI
E8 B2 E7 FF FF		CALL    SUB_1108C
83 C4 04		ADD     ESP, 4
89 85 CC F1 FF FF		MOV     [EBP+VAR_E34], EAX
6A 00		PUSH    0; CCHWIDECHAR
6A 00		PUSH    0; LPWIDECHARSTR
6A FF		PUSH    0FFFFFFFFH; CBMULTIBYTE
53		PUSH    EBX; LPMULTIBYTESTR
6A 00		PUSH    0; DWFLAGS
68 E9 FD 00 00		PUSH    0FDE9H; CODEPAGE
FF 15 0C B0 01 00		CALL    DS:__IMP_MULTIBYTETOWIDECHAR
3D 00 02 00 00		CMP     EAX, 200H
73 22		JNB     SHORT LOC_12920
50		PUSH    EAX; CCHWIDECHAR
8D 85 D4 F1 FF FF		LEA     EAX, [EBP+WIDECHARSTR]
50		PUSH    EAX; LPWIDECHARSTR
6A FF		PUSH    0FFFFFFFFH; CBMULTIBYTE
53		PUSH    EBX; LPMULTIBYTESTR
6A 00		PUSH    0; DWFLAGS
68 E9 FD 00 00		PUSH    0FDE9H; CODEPAGE
FF 15 0C B0 01 00		CALL    DS:__IMP_MULTIBYTETOWIDECHAR
8D 9D D4 F1 FF FF		LEA     EBX, [EBP+WIDECHARSTR]
85 C0		TEST    EAX, EAX
75 05		JNZ     SHORT LOC_12925
BB 90 7F 01 00		MOV     EBX, OFFSET ARUNTIMECHECKER; "RUNTIME CHECK ERROR.\R\N UNABLE TO DISP"...
68 02 10 00 00		PUSH    1002H; UNSIGNED INT
E8 91 FB FF FF		CALL    ?DEBUGGERPROBE@@YA_NK@Z; DEBUGGERPROBE(ULONG)
83 C4 04		ADD     ESP, 4
84 C0		TEST    AL, AL
74 22		JZ      SHORT LOC_12958
8B 85 D0 F1 FF FF		MOV     EAX, [EBP+VAR_E30]
53		PUSH    EBX; WCHAR_T *
56		PUSH    ESI; VOID *
FF 34 85 C0 7B 01 00		PUSH    DS:DWORD_17BC0[EAX*4]; INT
50		PUSH    EAX; UNSIGNED INT
E8 C5 FB FF FF		CALL    ?DEBUGGERRUNTIME@@YA_NKHPAXPB_W@Z; DEBUGGERRUNTIME(ULONG,INT,VOID *,WCHAR_T CONST *)
83 C4 10		ADD     ESP, 10H
84 C0		TEST    AL, AL
0F 85 27 01 00 00		JNZ     LOC_12A7D
EB 02		JMP     SHORT LOC_1295A
B0 01		MOV     AL, 1
83 BD CC F1 FF FF 00		CMP     [EBP+VAR_E34], 0
75 08		JNZ     SHORT LOC_1296B
85 FF		TEST    EDI, EDI
0F 84 11 01 00 00		JZ      LOC_12A7C
84 C0		TEST    AL, AL
74 0E		JZ      SHORT LOC_1297D
FF 15 04 B0 01 00		CALL    DS:__IMP_ISDEBUGGERPRESENT
85 C0		TEST    EAX, EAX
0F 85 FF 00 00 00		JNZ     LOC_12A7C
68 04 01 00 00		PUSH    104H; UNSIGNED INT
8D 85 EC FB FF FF		LEA     EAX, [EBP+VAR_414]
50		PUSH    EAX; WCHAR_T *
8D 85 C8 F1 FF FF		LEA     EAX, [EBP+VAR_E38]
50		PUSH    EAX; INT *
68 04 01 00 00		PUSH    104H; CHAR
8D 85 F4 FD FF FF		LEA     EAX, [EBP+VAR_20C]
50		PUSH    EAX; WCHAR_T *
8D 46 FB		LEA     EAX, [ESI-5]
50		PUSH    EAX; UNSIGNED __INT8 *
E8 DD E6 FF FF		CALL    J_?_RTC_GETSRCLINE@@YAHPAEPA_WKPAH1K@Z; _RTC_GETSRCLINE(UCHAR *,WCHAR_T *,ULONG,INT *,WCHAR_T *,ULONG)
83 C4 18		ADD     ESP, 18H
85 FF		TEST    EDI, EDI
74 32		JZ      SHORT LOC_129DE
53		PUSH    EBX
FF B5 D0 F1 FF FF		PUSH    [EBP+VAR_E30]
8D 85 EC FB FF FF		LEA     EAX, [EBP+VAR_414]
8B CF		MOV     ECX, EDI; THIS
68 18 80 01 00		PUSH    OFFSET ARUNTIMECHECKFA; "RUN-TIME CHECK FAILURE #%D - %S"
50		PUSH    EAX
FF B5 C8 F1 FF FF		PUSH    [EBP+VAR_E38]
8D 85 F4 FD FF FF		LEA     EAX, [EBP+VAR_20C]
50		PUSH    EAX
FF 75 0C		PUSH    [EBP+ARG_4]
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
FF D7		CALL    EDI
E9 96 00 00 00		JMP     LOC_12A74
6A 00		PUSH    0; LPUSEDDEFAULTCHAR
6A 00		PUSH    0; LPDEFAULTCHAR
68 0A 03 00 00		PUSH    30AH; CBMULTIBYTE
8D 85 E0 F8 FF FF		LEA     EAX, [EBP+MULTIBYTESTR]
BE 64 80 01 00		MOV     ESI, OFFSET AUNKNOWNFILENAM; "UNKNOWN FILENAME"
50		PUSH    EAX; LPMULTIBYTESTR
6A FF		PUSH    0FFFFFFFFH; CCHWIDECHAR
8D 85 F4 FD FF FF		LEA     EAX, [EBP+VAR_20C]
50		PUSH    EAX; LPWIDECHARSTR
6A 00		PUSH    0; DWFLAGS
68 E9 FD 00 00		PUSH    0FDE9H; CODEPAGE
FF 15 10 B0 01 00		CALL    DS:__IMP_WIDECHARTOMULTIBYTE
85 C0		TEST    EAX, EAX
74 06		JZ      SHORT LOC_12A13
8D B5 E0 F8 FF FF		LEA     ESI, [EBP+MULTIBYTESTR]
6A 00		PUSH    0; LPUSEDDEFAULTCHAR
6A 00		PUSH    0; LPDEFAULTCHAR
68 0A 03 00 00		PUSH    30AH; CBMULTIBYTE
8D 85 D4 F5 FF FF		LEA     EAX, [EBP+VAR_A2C]
BF 78 80 01 00		MOV     EDI, OFFSET AUNKNOWNMODULEN; "UNKNOWN MODULE NAME"
50		PUSH    EAX; LPMULTIBYTESTR
6A FF		PUSH    0FFFFFFFFH; CCHWIDECHAR
8D 85 EC FB FF FF		LEA     EAX, [EBP+VAR_414]
50		PUSH    EAX; LPWIDECHARSTR
6A 00		PUSH    0; DWFLAGS
68 E9 FD 00 00		PUSH    0FDE9H; CODEPAGE
FF 15 10 B0 01 00		CALL    DS:__IMP_WIDECHARTOMULTIBYTE
85 C0		TEST    EAX, EAX
74 06		JZ      SHORT LOC_12A48
8D BD D4 F5 FF FF		LEA     EDI, [EBP+VAR_A2C]
FF B5 C4 F1 FF FF		PUSH    [EBP+VAR_E3C]
8B 9D CC F1 FF FF		MOV     EBX, [EBP+VAR_E34]
8B CB		MOV     ECX, EBX; THIS
FF B5 D0 F1 FF FF		PUSH    [EBP+VAR_E30]
68 90 80 01 00		PUSH    OFFSET ARUNTIMECHECKFA_0; "RUN-TIME CHECK FAILURE #%D - %S"
57		PUSH    EDI
FF B5 C8 F1 FF FF		PUSH    [EBP+VAR_E38]
56		PUSH    ESI
FF 75 0C		PUSH    [EBP+ARG_4]
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
FF D3		CALL    EBX
83 C4 1C		ADD     ESP, 1CH
83 F8 01		CMP     EAX, 1
75 01		JNZ     SHORT LOC_12A7D
CC		INT     3; TRAP TO DEBUGGER
8B 4D FC		MOV     ECX, [EBP+VAR_4]
5F		POP     EDI
5E		POP     ESI
33 CD		XOR     ECX, EBP; STACKCOOKIE
5B		POP     EBX
E8 C0 E6 FF FF		CALL    J_@__SECURITY_CHECK_COOKIE@4; __SECURITY_CHECK_COOKIE(X)
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
6A FE		PUSH    0FFFFFFFEH
68 58 92 01 00		PUSH    OFFSET STRU_19258
68 00 4A 01 00		PUSH    OFFSET __EXCEPT_HANDLER4_NOEXCEPT
64 A1 00 00 00 00		MOV     EAX, LARGE FS:0
50		PUSH    EAX
83 EC 08		SUB     ESP, 8
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
A1 20 A0 01 00		MOV     EAX, ___SECURITY_COOKIE
31 45 F8		XOR     [EBP+MS_EXC.REGISTRATION.SCOPETABLE], EAX
33 C5		XOR     EAX, EBP
50		PUSH    EAX
8D 45 F0		LEA     EAX, [EBP+MS_EXC.REGISTRATION]
64 A3 00 00 00 00		MOV     LARGE FS:0, EAX
89 65 E8		MOV     [EBP+MS_EXC.OLD_ESP], ESP
C7 45 FC 00 00 00 00		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0
FF 75 08		PUSH    [EBP+LPARGUMENTS]; LPARGUMENTS
6A 06		PUSH    6; NNUMBEROFARGUMENTS
6A 00		PUSH    0; DWEXCEPTIONFLAGS
68 88 13 6D 40		PUSH    406D1388H; DWEXCEPTIONCODE
FF 15 08 B0 01 00		CALL    DS:__IMP_RAISEEXCEPTION
EB 16		JMP     SHORT LOC_12B74
8B 45 EC		MOV     EAX, [EBP+MS_EXC.EXC_PTR]
8B 00		MOV     EAX, [EAX]
33 C9		XOR     ECX, ECX
81 38 88 13 6D 40		CMP     DWORD PTR [EAX], 406D1388H
0F 94 C1		SETZ    CL
8B C1		MOV     EAX, ECX
C3		RETN
8B 65 E8		MOV     ESP, [EBP+MS_EXC.OLD_ESP]
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
8B 4D F0		MOV     ECX, [EBP+MS_EXC.REGISTRATION.NEXT]
64 89 0D 00 00 00 00		MOV     LARGE FS:0, ECX
59		POP     ECX
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 04 04 00 00		SUB     ESP, 404H
A1 20 A0 01 00		MOV     EAX, ___SECURITY_COOKIE
33 C5		XOR     EAX, EBP
89 45 FC		MOV     [EBP+VAR_4], EAX
56		PUSH    ESI
8B 75 08		MOV     ESI, [EBP+VARNAME]
57		PUSH    EDI
8B 3D 0C A0 01 00		MOV     EDI, DWORD_1A00C
83 FF FF		CMP     EDI, 0FFFFFFFFH
74 75		JZ      SHORT LOC_12C48
85 F6		TEST    ESI, ESI
74 5C		JZ      SHORT LOC_12C33
56		PUSH    ESI; CHAR *
E8 93 FC FF FF		CALL    ?_STRLEN_PRIV@@YAIPBD@Z; _STRLEN_PRIV(CHAR CONST *)
83 C0 3A		ADD     EAX, 3AH ; ':'
83 C4 04		ADD     ESP, 4
3D 00 04 00 00		CMP     EAX, 400H
77 49		JA      SHORT LOC_12C33
68 08 7C 01 00		PUSH    OFFSET ATHEVARIABLE; "THE VARIABLE '"
8D 85 FC FB FF FF		LEA     EAX, [EBP+DESTINATION]
68 00 04 00 00		PUSH    400H; SIZEINBYTES
50		PUSH    EAX; DESTINATION
E8 61 E7 FF FF		CALL    J_STRCPY_S
56		PUSH    ESI; SOURCE
8D 85 FC FB FF FF		LEA     EAX, [EBP+DESTINATION]
68 00 04 00 00		PUSH    400H; SIZEINBYTES
50		PUSH    EAX; DESTINATION
E8 31 E7 FF FF		CALL    J_STRCAT_S
68 18 7C 01 00		PUSH    OFFSET AISBEINGUSEDWIT; "' IS BEING USED WITHOUT BEING INITIALIZ"...
8D 85 FC FB FF FF		LEA     EAX, [EBP+DESTINATION]
68 00 04 00 00		PUSH    400H; SIZEINBYTES
50		PUSH    EAX; DESTINATION
E8 1B E7 FF FF		CALL    J_STRCAT_S
83 C4 24		ADD     ESP, 24H
8D 85 FC FB FF FF		LEA     EAX, [EBP+DESTINATION]
EB 05		JMP     SHORT LOC_12C38
B8 28 82 01 00		MOV     EAX, OFFSET AAVARIABLEISBEI; "A VARIABLE IS BEING USED WITHOUT BEING "...
50		PUSH    EAX; LPMULTIBYTESTR
8B 45 04		MOV     EAX, [EBP+4]
6A 03		PUSH    3; INT
57		PUSH    EDI; INT
50		PUSH    EAX; VOID *
E8 4B FC FF FF		CALL    ?FAILWITHMESSAGE@@YAXPAXHHPBD@Z; FAILWITHMESSAGE(VOID *,INT,INT,CHAR CONST *)
83 C4 10		ADD     ESP, 10H
8B 4D FC		MOV     ECX, [EBP+VAR_4]
5F		POP     EDI
33 CD		XOR     ECX, EBP; STACKCOOKIE
5E		POP     ESI
E8 F6 E4 FF FF		CALL    J_@__SECURITY_CHECK_COOKIE@4; __SECURITY_CHECK_COOKIE(X)
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
B8 48 A1 01 00		MOV     EAX, OFFSET UNK_1A148
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 55 E6 FF FF		CALL    SUB_112FD
FF 75 18		PUSH    [EBP+ARGLIST]; ARGLIST
FF 75 14		PUSH    [EBP+LOCALE]; LOCALE
FF 75 10		PUSH    [EBP+FORMAT]; FORMAT
FF 75 0C		PUSH    [EBP+BUFFERCOUNT]; BUFFERCOUNT
FF 75 08		PUSH    [EBP+BUFFER]; BUFFER
FF 70 04		PUSH    DWORD PTR [EAX+4]
FF 30		PUSH    DWORD PTR [EAX]; OPTIONS
E8 DA E3 FF FF		CALL    J___STDIO_COMMON_VSPRINTF_S
83 C4 1C		ADD     ESP, 1CH
85 C0		TEST    EAX, EAX
79 03		JNS     SHORT LOC_12CCB
83 C8 FF		OR      EAX, 0FFFFFFFFH
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8D 45 14		LEA     EAX, [EBP+ARGLIST]
50		PUSH    EAX; ARGLIST
6A 00		PUSH    0; LOCALE
FF 75 10		PUSH    [EBP+FORMAT]; FORMAT
FF 75 0C		PUSH    [EBP+BUFFERCOUNT]; BUFFERCOUNT
FF 75 08		PUSH    [EBP+BUFFER]; BUFFER
E8 CB E4 FF FF		CALL    J___VSPRINTF_S_L
83 C4 14		ADD     ESP, 14H
5D		POP     EBP
C3		RETN
A1 54 A1 01 00		MOV     EAX, DWORD_1A154
C3		RETN
A1 58 A1 01 00		MOV     EAX, DWORD_1A158
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ERRNUM]
83 F8 04		CMP     EAX, 4
77 09		JA      SHORT LOC_12D44
8B 04 85 68 82 01 00		MOV     EAX, DS:OFF_18268[EAX*4]; "STACK POINTER CORRUPTION"
5D		POP     EBP
C3		RETN
33 C0		XOR     EAX, EAX
5D		POP     EBP
C3		RETN
B8 05 00 00 00		MOV     EAX, 5
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
A1 54 A1 01 00		MOV     EAX, DWORD_1A154
8B 4D 08		MOV     ECX, [EBP+ARG_0]
89 0D 54 A1 01 00		MOV     DWORD_1A154, ECX
C7 05 58 A1 01 00 00 00 00 00		MOV     DWORD_1A158, 0
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
A1 58 A1 01 00		MOV     EAX, DWORD_1A158
8B 4D 08		MOV     ECX, [EBP+ARG_0]
89 0D 58 A1 01 00		MOV     DWORD_1A158, ECX
C7 05 54 A1 01 00 00 00 00 00		MOV     DWORD_1A154, 0
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 55 08		MOV     EDX, [EBP+ERRNUM]
83 FA 04		CMP     EDX, 4
77 13		JA      SHORT LOC_12DDE
8B 04 95 00 A0 01 00		MOV     EAX, DWORD_1A000[EDX*4]
8B 4D 0C		MOV     ECX, [EBP+ERRTYPE]
89 0C 95 00 A0 01 00		MOV     DWORD_1A000[EDX*4], ECX
5D		POP     EBP
C3		RETN
83 C8 FF		OR      EAX, 0FFFFFFFFH
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 18		SUB     ESP, 18H
8B 45 08		MOV     EAX, [EBP+ARG_0]
89 45 F4		MOV     [EBP+VAR_C], EAX
8B 4D F4		MOV     ECX, [EBP+VAR_C]
8B 55 F4		MOV     EDX, [EBP+VAR_C]
03 51 3C		ADD     EDX, [ECX+3CH]
89 55 EC		MOV     [EBP+VAR_14], EDX
8B 45 EC		MOV     EAX, [EBP+VAR_14]
89 45 F8		MOV     [EBP+VAR_8], EAX
8B 4D F8		MOV     ECX, [EBP+VAR_8]
0F B7 51 14		MOVZX   EDX, WORD PTR [ECX+14H]
8B 45 F8		MOV     EAX, [EBP+VAR_8]
8D 4C 10 18		LEA     ECX, [EAX+EDX+18H]
89 4D F0		MOV     [EBP+VAR_10], ECX
8B 55 F8		MOV     EDX, [EBP+VAR_8]
0F B7 42 06		MOVZX   EAX, WORD PTR [EDX+6]
6B C8 28		IMUL    ECX, EAX, 28H ; '('
03 4D F0		ADD     ECX, [EBP+VAR_10]
89 4D E8		MOV     [EBP+VAR_18], ECX
8B 55 F0		MOV     EDX, [EBP+VAR_10]
89 55 FC		MOV     [EBP+VAR_4], EDX
EB 09		JMP     SHORT LOC_12E40
8B 45 FC		MOV     EAX, [EBP+VAR_4]
83 C0 28		ADD     EAX, 28H ; '('
89 45 FC		MOV     [EBP+VAR_4], EAX
8B 4D FC		MOV     ECX, [EBP+VAR_4]
3B 4D E8		CMP     ECX, [EBP+VAR_18]
74 23		JZ      SHORT LOC_12E6B
8B 55 FC		MOV     EDX, [EBP+VAR_4]
8B 45 0C		MOV     EAX, [EBP+ARG_4]
3B 42 0C		CMP     EAX, [EDX+0CH]
72 16		JB      SHORT LOC_12E69
8B 4D FC		MOV     ECX, [EBP+VAR_4]
8B 51 0C		MOV     EDX, [ECX+0CH]
8B 45 FC		MOV     EAX, [EBP+VAR_4]
03 50 08		ADD     EDX, [EAX+8]
39 55 0C		CMP     [EBP+ARG_4], EDX
73 05		JNB     SHORT LOC_12E69
8B 45 FC		MOV     EAX, [EBP+VAR_4]
EB 04		JMP     SHORT LOC_12E6D
EB CC		JMP     SHORT LOC_12E37
33 C0		XOR     EAX, EAX
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 10		SUB     ESP, 10H
83 7D 08 00		CMP     [EBP+ARG_0], 0
75 04		JNZ     SHORT LOC_12EB0
32 C0		XOR     AL, AL
EB 55		JMP     SHORT LOC_12F05
8B 45 08		MOV     EAX, [EBP+ARG_0]
89 45 FC		MOV     [EBP+VAR_4], EAX
8B 4D FC		MOV     ECX, [EBP+VAR_4]
0F B7 11		MOVZX   EDX, WORD PTR [ECX]
81 FA 4D 5A 00 00		CMP     EDX, 5A4DH
74 04		JZ      SHORT LOC_12EC8
32 C0		XOR     AL, AL
EB 3D		JMP     SHORT LOC_12F05
8B 45 FC		MOV     EAX, [EBP+VAR_4]
8B 4D FC		MOV     ECX, [EBP+VAR_4]
03 48 3C		ADD     ECX, [EAX+3CH]
89 4D F4		MOV     [EBP+VAR_C], ECX
8B 55 F4		MOV     EDX, [EBP+VAR_C]
89 55 F8		MOV     [EBP+VAR_8], EDX
8B 45 F8		MOV     EAX, [EBP+VAR_8]
81 38 50 45 00 00		CMP     DWORD PTR [EAX], 4550H
74 04		JZ      SHORT LOC_12EE9
32 C0		XOR     AL, AL
EB 1C		JMP     SHORT LOC_12F05
8B 4D F8		MOV     ECX, [EBP+VAR_8]
83 C1 18		ADD     ECX, 18H
89 4D F0		MOV     [EBP+VAR_10], ECX
8B 55 F0		MOV     EDX, [EBP+VAR_10]
0F B7 02		MOVZX   EAX, WORD PTR [EDX]
3D 0B 01 00 00		CMP     EAX, 10BH
74 04		JZ      SHORT LOC_12F03
32 C0		XOR     AL, AL
EB 02		JMP     SHORT LOC_12F05
B0 01		MOV     AL, 1
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
64 A1 18 00 00 00		MOV     EAX, LARGE FS:18H
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 08		SUB     ESP, 8
E8 59 E2 FF FF		CALL    J____SCRT_IS_UCRT_DLL_IN_USE
85 C0		TEST    EAX, EAX
75 04		JNZ     SHORT LOC_12F53
32 C0		XOR     AL, AL
EB 32		JMP     SHORT LOC_12F85
E8 2C E4 FF FF		CALL    J__NTCURRENTTEB
8B 40 04		MOV     EAX, [EAX+4]
89 45 FC		MOV     [EBP+VAR_4], EAX
8B 4D FC		MOV     ECX, [EBP+VAR_4]
BA 64 A1 01 00		MOV     EDX, OFFSET UNK_1A164
33 C0		XOR     EAX, EAX
F0 0F B1 0A		LOCK CMPXCHG [EDX], ECX
89 45 F8		MOV     [EBP+VAR_8], EAX
83 7D F8 00		CMP     [EBP+VAR_8], 0
74 0E		JZ      SHORT LOC_12F83
8B 45 FC		MOV     EAX, [EBP+VAR_4]
3B 45 F8		CMP     EAX, [EBP+VAR_8]
75 04		JNZ     SHORT LOC_12F81
B0 01		MOV     AL, 1
EB 04		JMP     SHORT LOC_12F85
EB DB		JMP     SHORT LOC_12F5E
32 C0		XOR     AL, AL
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 FC E1 FF FF		CALL    J____SCRT_IS_UCRT_DLL_IN_USE
85 C0		TEST    EAX, EAX
74 07		JZ      SHORT LOC_12FB3
E8 F8 E1 FF FF		CALL    J____ISA_AVAILABLE_INIT
EB 12		JMP     SHORT LOC_12FC5
E8 50 E2 FF FF		CALL    SUB_11208
85 C0		TEST    EAX, EAX
74 04		JZ      SHORT LOC_12FC0
32 C0		XOR     AL, AL
EB 07		JMP     SHORT LOC_12FC7
E8 6C E1 FF FF		CALL    SUB_11131
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
6A 00		PUSH    0
E8 4C E1 FF FF		CALL    J____SCRT_INITIALIZE_ONEXIT_TABLES
83 C4 04		ADD     ESP, 4
0F B6 C0		MOVZX   EAX, AL
85 C0		TEST    EAX, EAX
75 04		JNZ     SHORT LOC_12FF8
32 C0		XOR     AL, AL
EB 02		JMP     SHORT LOC_12FFA
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 31 E2 FF FF		CALL    J___SHOULD_INITIALIZE_ENVIRONMENT_1
0F B6 C0		MOVZX   EAX, AL
85 C0		TEST    EAX, EAX
75 04		JNZ     SHORT LOC_13023
32 C0		XOR     AL, AL
EB 17		JMP     SHORT LOC_1303A
E8 3F E2 FF FF		CALL    J___SHOULD_INITIALIZE_ENVIRONMENT_1_0
0F B6 C8		MOVZX   ECX, AL
85 C9		TEST    ECX, ECX
75 09		JNZ     SHORT LOC_13038
E8 DF E0 FF FF		CALL    J___SHOULD_INITIALIZE_ENVIRONMENT_2
32 C0		XOR     AL, AL
EB 02		JMP     SHORT LOC_1303A
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 38 E1 FF FF		CALL    J___SHOULD_INITIALIZE_ENVIRONMENT_2_0
E8 B6 E0 FF FF		CALL    J___SHOULD_INITIALIZE_ENVIRONMENT_2
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 08		SUB     ESP, 8
E8 29 E1 FF FF		CALL    J____SCRT_IS_UCRT_DLL_IN_USE
85 C0		TEST    EAX, EAX
75 28		JNZ     SHORT LOC_130A7
83 7D 0C 01		CMP     [EBP+ARG_4], 1
75 22		JNZ     SHORT LOC_130A7
8B 45 14		MOV     EAX, [EBP+ARG_C]
89 45 F8		MOV     [EBP+VAR_8], EAX
8B 4D 10		MOV     ECX, [EBP+ARG_8]
51		PUSH    ECX
6A 00		PUSH    0
8B 55 08		MOV     EDX, [EBP+ARG_0]
52		PUSH    EDX
8B 45 F8		MOV     EAX, [EBP+VAR_8]
89 45 FC		MOV     [EBP+VAR_4], EAX
8B 4D FC		MOV     ECX, [EBP+VAR_4]; THIS
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
FF 55 FC		CALL    [EBP+VAR_4]
8B 4D 1C		MOV     ECX, [EBP+EXCEPTIONPTR]
51		PUSH    ECX; EXCEPTIONPTR
8B 55 18		MOV     EDX, [EBP+EXCEPTIONNUM]
52		PUSH    EDX; EXCEPTIONNUM
E8 B4 E0 FF FF		CALL    J__SEH_FILTER_DLL
83 C4 08		ADD     ESP, 8
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 CC E0 FF FF		CALL    J____SCRT_IS_UCRT_DLL_IN_USE
85 C0		TEST    EAX, EAX
74 0F		JZ      SHORT LOC_130EB
68 6C A1 01 00		PUSH    OFFSET TABLE; TABLE
E8 BF DF FF FF		CALL    J__EXECUTE_ONEXIT_TABLE
83 C4 04		ADD     ESP, 4
EB 0E		JMP     SHORT LOC_130F9
E8 FA E0 FF FF		CALL    J____SCRT_STUB_FOR_INITIALIZE_MTA_5
85 C0		TEST    EAX, EAX
75 05		JNZ     SHORT LOC_130F9
E8 BD E2 FF FF		CALL    J__CEXIT
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
6A 00		PUSH    0
E8 97 E2 FF FF		CALL    J___SHOULD_INITIALIZE_ENVIRONMENT_4_0
83 C4 04		ADD     ESP, 4
E8 31 E1 FF FF		CALL    J___SHOULD_INITIALIZE_ENVIRONMENT_4
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 7D 08 00		CMP     [EBP+ARG_0], 0
75 07		JNZ     SHORT LOC_13140
C6 05 68 A1 01 00 01		MOV     BYTE_1A168, 1
E8 64 E0 FF FF		CALL    J____ISA_AVAILABLE_INIT
E8 3B E1 FF FF		CALL    J___SHOULD_INITIALIZE_ENVIRONMENT_0
0F B6 C0		MOVZX   EAX, AL
85 C0		TEST    EAX, EAX
75 04		JNZ     SHORT LOC_13155
32 C0		XOR     AL, AL
EB 1C		JMP     SHORT LOC_13171
E8 30 E1 FF FF		CALL    J___SHOULD_INITIALIZE_ENVIRONMENT_0_0
0F B6 C8		MOVZX   ECX, AL
85 C9		TEST    ECX, ECX
75 0E		JNZ     SHORT LOC_1316F
6A 00		PUSH    0
E8 B6 DE FF FF		CALL    J___SHOULD_INITIALIZE_ENVIRONMENT_3
83 C4 04		ADD     ESP, 4
32 C0		XOR     AL, AL
EB 02		JMP     SHORT LOC_13171
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 1C		SUB     ESP, 1CH
0F B6 05 69 A1 01 00		MOVZX   EAX, BYTE_1A169
85 C0		TEST    EAX, EAX
74 07		JZ      SHORT LOC_131A8
B0 01		MOV     AL, 1
E9 B6 00 00 00		JMP     LOC_1325E
83 7D 08 00		CMP     [EBP+ARG_0], 0
74 0D		JZ      SHORT LOC_131BB
83 7D 08 01		CMP     [EBP+ARG_0], 1
74 07		JZ      SHORT LOC_131BB
6A 05		PUSH    5
E8 16 E0 FF FF		CALL    J____SCRT_FASTFAIL
E8 E4 DF FF FF		CALL    J____SCRT_IS_UCRT_DLL_IN_USE
85 C0		TEST    EAX, EAX
74 32		JZ      SHORT LOC_131F6
83 7D 08 00		CMP     [EBP+ARG_0], 0
75 2C		JNZ     SHORT LOC_131F6
68 6C A1 01 00		PUSH    OFFSET TABLE; TABLE
E8 BD DE FF FF		CALL    J__INITIALIZE_ONEXIT_TABLE
83 C4 04		ADD     ESP, 4
85 C0		TEST    EAX, EAX
74 04		JZ      SHORT LOC_131DF
32 C0		XOR     AL, AL
EB 7F		JMP     SHORT LOC_1325E
68 78 A1 01 00		PUSH    OFFSET STRU_1A178; TABLE
E8 A8 DE FF FF		CALL    J__INITIALIZE_ONEXIT_TABLE
83 C4 04		ADD     ESP, 4
85 C0		TEST    EAX, EAX
74 04		JZ      SHORT LOC_131F4
32 C0		XOR     AL, AL
EB 6A		JMP     SHORT LOC_1325E
EB 5F		JMP     SHORT LOC_13255
C7 45 FC FF FF FF FF		MOV     [EBP+VAR_4], 0FFFFFFFFH
8B 4D FC		MOV     ECX, [EBP+VAR_4]
89 4D F0		MOV     [EBP+VAR_10], ECX
8B 55 FC		MOV     EDX, [EBP+VAR_4]
89 55 F4		MOV     [EBP+VAR_C], EDX
8B 45 FC		MOV     EAX, [EBP+VAR_4]
89 45 F8		MOV     [EBP+VAR_8], EAX
8B 4D F0		MOV     ECX, [EBP+VAR_10]
89 0D 6C A1 01 00		MOV     TABLE._FIRST, ECX
8B 55 F4		MOV     EDX, [EBP+VAR_C]
89 15 70 A1 01 00		MOV     TABLE._LAST, EDX
8B 45 F8		MOV     EAX, [EBP+VAR_8]
A3 74 A1 01 00		MOV     TABLE._END, EAX
8B 4D FC		MOV     ECX, [EBP+VAR_4]
89 4D E4		MOV     [EBP+VAR_1C], ECX
8B 55 FC		MOV     EDX, [EBP+VAR_4]
89 55 E8		MOV     [EBP+VAR_18], EDX
8B 45 FC		MOV     EAX, [EBP+VAR_4]
89 45 EC		MOV     [EBP+VAR_14], EAX
8B 4D E4		MOV     ECX, [EBP+VAR_1C]
89 0D 78 A1 01 00		MOV     STRU_1A178._FIRST, ECX
8B 55 E8		MOV     EDX, [EBP+VAR_18]
89 15 7C A1 01 00		MOV     STRU_1A178._LAST, EDX
8B 45 EC		MOV     EAX, [EBP+VAR_14]
A3 80 A1 01 00		MOV     STRU_1A178._END, EAX
C6 05 69 A1 01 00 01		MOV     BYTE_1A169, 1
B0 01		MOV     AL, 1
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
6A FE		PUSH    0FFFFFFFEH
68 78 92 01 00		PUSH    OFFSET STRU_19278
68 B0 3C 01 00		PUSH    OFFSET __EXCEPT_HANDLER4
64 A1 00 00 00 00		MOV     EAX, LARGE FS:0
50		PUSH    EAX
83 C4 D8		ADD     ESP, 0FFFFFFD8H
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
A1 20 A0 01 00		MOV     EAX, ___SECURITY_COOKIE
31 45 F8		XOR     [EBP+MS_EXC.REGISTRATION.SCOPETABLE], EAX
33 C5		XOR     EAX, EBP
50		PUSH    EAX
8D 45 F0		LEA     EAX, [EBP+MS_EXC.REGISTRATION]
64 A3 00 00 00 00		MOV     LARGE FS:0, EAX
89 65 E8		MOV     [EBP+MS_EXC.OLD_ESP], ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
89 45 D0		MOV     [EBP+VAR_30], EAX
C7 45 DC 00 00 00 00		MOV     [EBP+VAR_24], 0
C7 45 FC 00 00 00 00		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0
8B 4D DC		MOV     ECX, [EBP+VAR_24]
51		PUSH    ECX; VOID *
E8 B0 FB FF FF		CALL    ?IS_POTENTIALLY_VALID_IMAGE_BASE@@YA_NQAX@Z; IS_POTENTIALLY_VALID_IMAGE_BASE(VOID * CONST)
83 C4 04		ADD     ESP, 4
0F B6 D0		MOVZX   EDX, AL
85 D2		TEST    EDX, EDX
75 13		JNZ     SHORT LOC_1330D
C6 45 E7 00		MOV     [EBP+VAR_19], 0
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
8A 45 E7		MOV     AL, [EBP+VAR_19]
E9 AA 00 00 00		JMP     LOC_133B7
8B 45 D0		MOV     EAX, [EBP+VAR_30]
2B 45 DC		SUB     EAX, [EBP+VAR_24]
89 45 CC		MOV     [EBP+VAR_34], EAX
8B 4D CC		MOV     ECX, [EBP+VAR_34]
51		PUSH    ECX; UNSIGNED INT
8B 55 DC		MOV     EDX, [EBP+VAR_24]
52		PUSH    EDX; UNSIGNED __INT8 *
E8 CD FA FF FF		CALL    ?FIND_PE_SECTION@@YAPAU_IMAGE_SECTION_HEADER@@QAEI@Z; FIND_PE_SECTION(UCHAR * CONST,UINT)
83 C4 08		ADD     ESP, 8
89 45 D8		MOV     [EBP+VAR_28], EAX
83 7D D8 00		CMP     [EBP+VAR_28], 0
75 10		JNZ     SHORT LOC_1333F
C6 45 E6 00		MOV     [EBP+VAR_1A], 0
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
8A 45 E6		MOV     AL, [EBP+VAR_1A]
EB 78		JMP     SHORT LOC_133B7
8B 45 D8		MOV     EAX, [EBP+VAR_28]
8B 48 24		MOV     ECX, [EAX+24H]
81 E1 00 00 00 80		AND     ECX, 80000000H
74 10		JZ      SHORT LOC_1335D
C6 45 E5 00		MOV     [EBP+VAR_1B], 0
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
8A 45 E5		MOV     AL, [EBP+VAR_1B]
EB 5A		JMP     SHORT LOC_133B7
C6 45 E4 01		MOV     [EBP+VAR_1C], 1
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
8A 45 E4		MOV     AL, [EBP+VAR_1C]
EB 4A		JMP     SHORT LOC_133B7
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
EB 41		JMP     SHORT LOC_133B7
8B 55 EC		MOV     EDX, [EBP+MS_EXC.EXC_PTR]
8B 02		MOV     EAX, [EDX]
8B 08		MOV     ECX, [EAX]
89 4D C8		MOV     [EBP+VAR_38], ECX
81 7D C8 05 00 00 C0		CMP     [EBP+VAR_38], 0C0000005H
75 09		JNZ     SHORT LOC_13392
C7 45 D4 01 00 00 00		MOV     [EBP+VAR_2C], 1
EB 07		JMP     SHORT LOC_13399
C7 45 D4 00 00 00 00		MOV     [EBP+VAR_2C], 0
8B 45 D4		MOV     EAX, [EBP+VAR_2C]
C3		RETN
8B 65 E8		MOV     ESP, [EBP+MS_EXC.OLD_ESP]
C6 45 E3 00		MOV     [EBP+VAR_1D], 0
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
8A 45 E3		MOV     AL, [EBP+VAR_1D]
EB 07		JMP     SHORT LOC_133B7
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
8B 4D F0		MOV     ECX, [EBP+MS_EXC.REGISTRATION.NEXT]
64 89 0D 00 00 00 00		MOV     LARGE FS:0, ECX
59		POP     ECX
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 7C DD FF FF		CALL    J____SCRT_IS_UCRT_DLL_IN_USE
85 C0		TEST    EAX, EAX
75 02		JNZ     SHORT LOC_1342E
EB 13		JMP     SHORT LOC_13441
0F B6 45 08		MOVZX   EAX, [EBP+ARG_0]
85 C0		TEST    EAX, EAX
74 02		JZ      SHORT LOC_13438
EB 09		JMP     SHORT LOC_13441
33 C9		XOR     ECX, ECX
BA 64 A1 01 00		MOV     EDX, OFFSET UNK_1A164
87 0A		XCHG    ECX, [EDX]
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
0F B6 05 68 A1 01 00		MOVZX   EAX, BYTE_1A168
85 C0		TEST    EAX, EAX
74 0C		JZ      SHORT LOC_1346A
0F B6 4D 0C		MOVZX   ECX, [EBP+ARG_4]
85 C9		TEST    ECX, ECX
74 04		JZ      SHORT LOC_1346A
B0 01		MOV     AL, 1
EB 1C		JMP     SHORT LOC_13486
0F B6 55 08		MOVZX   EDX, [EBP+ARG_0]
52		PUSH    EDX
E8 B8 DC FF FF		CALL    J___SHOULD_INITIALIZE_ENVIRONMENT_3_0
83 C4 04		ADD     ESP, 4
0F B6 45 08		MOVZX   EAX, [EBP+ARG_0]
50		PUSH    EAX
E8 9D DB FF FF		CALL    J___SHOULD_INITIALIZE_ENVIRONMENT_3
83 C4 04		ADD     ESP, 4
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 0C		SUB     ESP, 0CH
A1 6C A1 01 00		MOV     EAX, TABLE._FIRST
89 45 F4		MOV     [EBP+VAR_C], EAX
83 7D F4 FF		CMP     [EBP+VAR_C], 0FFFFFFFFH
75 26		JNZ     SHORT LOC_134DA
8B 4D 08		MOV     ECX, [EBP+FUNCTION]
51		PUSH    ECX; FUNCTION
E8 4C DC FF FF		CALL    J__CRT_ATEXIT
83 C4 04		ADD     ESP, 4
85 C0		TEST    EAX, EAX
75 08		JNZ     SHORT LOC_134CC
8B 55 08		MOV     EDX, [EBP+FUNCTION]
89 55 FC		MOV     [EBP+VAR_4], EDX
EB 07		JMP     SHORT LOC_134D3
C7 45 FC 00 00 00 00		MOV     [EBP+VAR_4], 0
8B 45 FC		MOV     EAX, [EBP+VAR_4]
EB 29		JMP     SHORT LOC_13501
EB 27		JMP     SHORT LOC_13501
8B 45 08		MOV     EAX, [EBP+FUNCTION]
50		PUSH    EAX; FUNCTION
68 6C A1 01 00		PUSH    OFFSET TABLE; TABLE
E8 31 DB FF FF		CALL    J__REGISTER_ONEXIT_FUNCTION
83 C4 08		ADD     ESP, 8
85 C0		TEST    EAX, EAX
75 08		JNZ     SHORT LOC_134F7
8B 4D 08		MOV     ECX, [EBP+FUNCTION]
89 4D F8		MOV     [EBP+VAR_8], ECX
EB 07		JMP     SHORT LOC_134FE
C7 45 F8 00 00 00 00		MOV     [EBP+VAR_8], 0
8B 45 F8		MOV     EAX, [EBP+VAR_8]
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 08		SUB     ESP, 8
A1 78 A1 01 00		MOV     EAX, STRU_1A178._FIRST
89 45 FC		MOV     [EBP+VAR_4], EAX
83 7D FC FF		CMP     [EBP+VAR_4], 0FFFFFFFFH
75 10		JNZ     SHORT LOC_13544
8B 4D 08		MOV     ECX, [EBP+FUNCTION]
51		PUSH    ECX; FUNCTION
E8 27 DB FF FF		CALL    J__CRT_AT_QUICK_EXIT
83 C4 04		ADD     ESP, 4
EB 19		JMP     SHORT LOC_1355B
EB 17		JMP     SHORT LOC_1355B
8B 55 08		MOV     EDX, [EBP+FUNCTION]
89 55 F8		MOV     [EBP+VAR_8], EDX
8B 45 F8		MOV     EAX, [EBP+VAR_8]
50		PUSH    EAX; FUNCTION
68 78 A1 01 00		PUSH    OFFSET STRU_1A178; TABLE
E8 C1 DA FF FF		CALL    J__REGISTER_ONEXIT_FUNCTION
83 C4 08		ADD     ESP, 8
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
51		PUSH    ECX
8B 45 08		MOV     EAX, [EBP+FUNC]
50		PUSH    EAX; FUNC
E8 95 DC FF FF		CALL    J___ONEXIT
83 C4 04		ADD     ESP, 4
85 C0		TEST    EAX, EAX
74 09		JZ      SHORT LOC_1358D
C7 45 FC 00 00 00 00		MOV     [EBP+VAR_4], 0
EB 07		JMP     SHORT LOC_13594
C7 45 FC FF FF FF FF		MOV     [EBP+VAR_4], 0FFFFFFFFH
8B 45 FC		MOV     EAX, [EBP+VAR_4]
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 14		SUB     ESP, 14H
33 C0		XOR     EAX, EAX
89 45 F4		MOV     [EBP+SYSTEMTIMEASFILETIME.DWLOWDATETIME], EAX
89 45 F8		MOV     [EBP+SYSTEMTIMEASFILETIME.DWHIGHDATETIME], EAX
8D 4D F4		LEA     ECX, [EBP+SYSTEMTIMEASFILETIME]
51		PUSH    ECX; LPSYSTEMTIMEASFILETIME
FF 15 1C B0 01 00		CALL    DS:__IMP_GETSYSTEMTIMEASFILETIME
8B 55 F4		MOV     EDX, [EBP+SYSTEMTIMEASFILETIME.DWLOWDATETIME]
89 55 FC		MOV     [EBP+VAR_4], EDX
8B 45 FC		MOV     EAX, [EBP+VAR_4]
33 45 F8		XOR     EAX, [EBP+SYSTEMTIMEASFILETIME.DWHIGHDATETIME]
89 45 FC		MOV     [EBP+VAR_4], EAX
FF 15 3C B0 01 00		CALL    DS:__IMP_GETCURRENTTHREADID
33 45 FC		XOR     EAX, [EBP+VAR_4]
89 45 FC		MOV     [EBP+VAR_4], EAX
FF 15 18 B0 01 00		CALL    DS:__IMP_GETCURRENTPROCESSID
33 45 FC		XOR     EAX, [EBP+VAR_4]
89 45 FC		MOV     [EBP+VAR_4], EAX
8D 4D EC		LEA     ECX, [EBP+PERFORMANCECOUNT]
51		PUSH    ECX; LPPERFORMANCECOUNT
FF 15 14 B0 01 00		CALL    DS:__IMP_QUERYPERFORMANCECOUNTER
8B 55 FC		MOV     EDX, [EBP+VAR_4]
33 55 EC		XOR     EDX, DWORD PTR [EBP+PERFORMANCECOUNT]
89 55 FC		MOV     [EBP+VAR_4], EDX
8B 45 FC		MOV     EAX, [EBP+VAR_4]
33 45 F0		XOR     EAX, DWORD PTR [EBP+PERFORMANCECOUNT+4]
89 45 FC		MOV     [EBP+VAR_4], EAX
8B 4D FC		MOV     ECX, [EBP+VAR_4]
8D 55 FC		LEA     EDX, [EBP+VAR_4]
33 CA		XOR     ECX, EDX
89 4D FC		MOV     [EBP+VAR_4], ECX
8B 45 FC		MOV     EAX, [EBP+VAR_4]
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
51		PUSH    ECX
81 3D 20 A0 01 00 4E E6 40 BB		CMP     ___SECURITY_COOKIE, 0BB40E64EH
74 1C		JZ      SHORT LOC_1366C
A1 20 A0 01 00		MOV     EAX, ___SECURITY_COOKIE
25 00 00 FF FF		AND     EAX, 0FFFF0000H
74 10		JZ      SHORT LOC_1366C
8B 0D 20 A0 01 00		MOV     ECX, ___SECURITY_COOKIE
F7 D1		NOT     ECX
89 0D 24 A0 01 00		MOV     DWORD_1A024, ECX
EB 4A		JMP     SHORT LOC_136B6
E8 3F FF FF FF		CALL    ___GET_ENTROPY
89 45 FC		MOV     [EBP+VAR_4], EAX
81 7D FC 4E E6 40 BB		CMP     [EBP+VAR_4], 0BB40E64EH
75 09		JNZ     SHORT LOC_13686
C7 45 FC 4F E6 40 BB		MOV     [EBP+VAR_4], 0BB40E64FH
EB 1C		JMP     SHORT LOC_136A2
8B 55 FC		MOV     EDX, [EBP+VAR_4]
81 E2 00 00 FF FF		AND     EDX, 0FFFF0000H
75 11		JNZ     SHORT LOC_136A2
8B 45 FC		MOV     EAX, [EBP+VAR_4]
0D 11 47 00 00		OR      EAX, 4711H
C1 E0 10		SHL     EAX, 10H
0B 45 FC		OR      EAX, [EBP+VAR_4]
89 45 FC		MOV     [EBP+VAR_4], EAX
8B 4D FC		MOV     ECX, [EBP+VAR_4]
89 0D 20 A0 01 00		MOV     ___SECURITY_COOKIE, ECX
8B 55 FC		MOV     EDX, [EBP+VAR_4]
F7 D2		NOT     EDX
89 15 24 A0 01 00		MOV     DWORD_1A024, EDX
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
33 C0		XOR     EAX, EAX
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
B8 01 00 00 00		MOV     EAX, 1
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
33 C0		XOR     EAX, EAX
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
B8 00 40 00 00		MOV     EAX, 4000H
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
33 C0		XOR     EAX, EAX
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
33 C0		XOR     EAX, EAX
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
68 90 A1 01 00		PUSH    OFFSET LISTHEAD; LISTHEAD
FF 15 58 B0 01 00		CALL    DS:__IMP_INITIALIZESLISTHEAD
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
68 90 A1 01 00		PUSH    OFFSET LISTHEAD
E8 7C DB FF FF		CALL    J___STD_TYPE_INFO_DESTROY_LIST
83 C4 04		ADD     ESP, 4
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
68 00 00 03 00		PUSH    30000H; MASK
68 00 00 01 00		PUSH    10000H; NEWVALUE
6A 00		PUSH    0; CURRENTSTATE
E8 68 DB FF FF		CALL    J__CONTROLFP_S
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
74 07		JZ      SHORT LOC_137B2
6A 07		PUSH    7
E8 1F DA FF FF		CALL    J____SCRT_FASTFAIL
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
B8 A0 A1 01 00		MOV     EAX, OFFSET UNK_1A1A0
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 08		SUB     ESP, 8
E8 02 DB FF FF		CALL    SUB_112FD
89 45 FC		MOV     [EBP+VAR_4], EAX
8B 45 FC		MOV     EAX, [EBP+VAR_4]
8B 08		MOV     ECX, [EAX]
83 C9 24		OR      ECX, 24H
8B 50 04		MOV     EDX, [EAX+4]
8B 45 FC		MOV     EAX, [EBP+VAR_4]
89 08		MOV     [EAX], ECX
89 50 04		MOV     [EAX+4], EDX
E8 46 DB FF FF		CALL    SUB_1135C
89 45 F8		MOV     [EBP+VAR_8], EAX
8B 4D F8		MOV     ECX, [EBP+VAR_8]
8B 11		MOV     EDX, [ECX]
83 CA 02		OR      EDX, 2
8B 41 04		MOV     EAX, [ECX+4]
8B 4D F8		MOV     ECX, [EBP+VAR_8]
89 11		MOV     [ECX], EDX
89 41 04		MOV     [ECX+4], EAX
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
51		PUSH    ECX
83 3D 1C A0 01 00 00		CMP     DWORD_1A01C, 0
75 09		JNZ     SHORT LOC_13856
C7 45 FC 01 00 00 00		MOV     [EBP+VAR_4], 1
EB 07		JMP     SHORT LOC_1385D
C7 45 FC 00 00 00 00		MOV     [EBP+VAR_4], 0
8B 45 FC		MOV     EAX, [EBP+VAR_4]
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
B8 0C A6 01 00		MOV     EAX, OFFSET UNK_1A60C
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
B8 00 A6 01 00		MOV     EAX, OFFSET UNK_1A600
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 2C 03 00 00		SUB     ESP, 32CH
6A 17		PUSH    17H; PROCESSORFEATURE
FF 15 48 B0 01 00		CALL    DS:__IMP_ISPROCESSORFEATUREPRESENT
85 C0		TEST    EAX, EAX
74 05		JZ      SHORT LOC_138AA
8B 4D 08		MOV     ECX, [EBP+ARG_0]
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
6A 03		PUSH    3
E8 F7 D9 FF FF		CALL    J___CRT_DEBUGGER_HOOK
83 C4 04		ADD     ESP, 4
68 CC 02 00 00		PUSH    2CCH; SIZE
6A 00		PUSH    0; VAL
8D 85 D4 FC FF FF		LEA     EAX, [EBP+VAR_32C]
50		PUSH    EAX; VOID *
E8 88 D8 FF FF		CALL    J_MEMSET
83 C4 0C		ADD     ESP, 0CH
89 85 84 FD FF FF		MOV     [EBP+VAR_27C], EAX
89 8D 80 FD FF FF		MOV     [EBP+VAR_280], ECX
89 95 7C FD FF FF		MOV     [EBP+VAR_284], EDX
89 9D 78 FD FF FF		MOV     [EBP+VAR_288], EBX
89 B5 74 FD FF FF		MOV     [EBP+VAR_28C], ESI
89 BD 70 FD FF FF		MOV     [EBP+VAR_290], EDI
66 8C 95 9C FD FF FF		MOV     [EBP+VAR_264], SS
66 8C 8D 90 FD FF FF		MOV     [EBP+VAR_270], CS
66 8C 9D 6C FD FF FF		MOV     [EBP+VAR_294], DS
66 8C 85 68 FD FF FF		MOV     [EBP+VAR_298], ES
66 8C A5 64 FD FF FF		MOV     [EBP+VAR_29C], FS
66 8C AD 60 FD FF FF		MOV     [EBP+VAR_2A0], GS
9C		PUSHF
8F 85 94 FD FF FF		POP     [EBP+VAR_26C]
C7 85 D4 FC FF FF 01 00 01 00		MOV     [EBP+VAR_32C], 10001H
8B 4D 04		MOV     ECX, [EBP+4]
89 8D 8C FD FF FF		MOV     [EBP+VAR_274], ECX
8D 55 04		LEA     EDX, [EBP+4]
89 95 98 FD FF FF		MOV     [EBP+VAR_268], EDX
8D 45 04		LEA     EAX, [EBP+4]
8B 48 FC		MOV     ECX, [EAX-4]
89 8D 88 FD FF FF		MOV     [EBP+VAR_278], ECX
6A 50		PUSH    50H ; 'P'; SIZE
6A 00		PUSH    0; VAL
8D 55 A0		LEA     EDX, [EBP+VAR_60]
52		PUSH    EDX; VOID *
E8 FB D7 FF FF		CALL    J_MEMSET
83 C4 0C		ADD     ESP, 0CH
C7 45 A0 15 00 00 40		MOV     [EBP+VAR_60], 40000015H
C7 45 A4 01 00 00 00		MOV     [EBP+VAR_5C], 1
8B 45 04		MOV     EAX, [EBP+4]
89 45 AC		MOV     [EBP+VAR_54], EAX
FF 15 04 B0 01 00		CALL    DS:__IMP_ISDEBUGGERPRESENT
83 F8 01		CMP     EAX, 1
75 06		JNZ     SHORT LOC_1397C
C6 45 FF 01		MOV     [EBP+VAR_1], 1
EB 04		JMP     SHORT LOC_13980
C6 45 FF 00		MOV     [EBP+VAR_1], 0
8A 4D FF		MOV     CL, [EBP+VAR_1]
88 4D FE		MOV     [EBP+VAR_2], CL
8D 55 A0		LEA     EDX, [EBP+VAR_60]
89 55 F0		MOV     [EBP+EXCEPTIONINFO.EXCEPTIONRECORD], EDX
8D 85 D4 FC FF FF		LEA     EAX, [EBP+VAR_32C]
89 45 F4		MOV     [EBP+EXCEPTIONINFO.CONTEXTRECORD], EAX
6A 00		PUSH    0; LPTOPLEVELEXCEPTIONFILTER
FF 15 50 B0 01 00		CALL    DS:__IMP_SETUNHANDLEDEXCEPTIONFILTER
8D 4D F0		LEA     ECX, [EBP+EXCEPTIONINFO]
51		PUSH    ECX; EXCEPTIONINFO
FF 15 54 B0 01 00		CALL    DS:__IMP_UNHANDLEDEXCEPTIONFILTER
89 45 F8		MOV     [EBP+VAR_8], EAX
83 7D F8 00		CMP     [EBP+VAR_8], 0
75 12		JNZ     SHORT LOC_139C2
0F B6 55 FE		MOVZX   EDX, [EBP+VAR_2]
85 D2		TEST    EDX, EDX
75 0A		JNZ     SHORT LOC_139C2
6A 03		PUSH    3
E8 E9 D8 FF FF		CALL    J___CRT_DEBUGGER_HOOK
83 C4 04		ADD     ESP, 4
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 48		SUB     ESP, 48H
6A 44		PUSH    44H ; 'D'; SIZE
6A 00		PUSH    0; VAL
8D 45 B8		LEA     EAX, [EBP+STARTUPINFO]
50		PUSH    EAX; VOID *
E8 1C D7 FF FF		CALL    J_MEMSET
83 C4 0C		ADD     ESP, 0CH
8D 4D B8		LEA     ECX, [EBP+STARTUPINFO]
51		PUSH    ECX; LPSTARTUPINFO
FF 15 4C B0 01 00		CALL    DS:__IMP_GETSTARTUPINFOW
8B 55 E4		MOV     EDX, [EBP+STARTUPINFO.DWFLAGS]
83 E2 01		AND     EDX, 1
74 09		JZ      SHORT LOC_13A51
0F B7 45 E8		MOVZX   EAX, [EBP+STARTUPINFO.WSHOWWINDOW]
89 45 FC		MOV     [EBP+VAR_4], EAX
EB 07		JMP     SHORT LOC_13A58
C7 45 FC 0A 00 00 00		MOV     [EBP+VAR_4], 0AH
66 8B 45 FC		MOV     AX, WORD PTR [EBP+VAR_4]
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 E7 D5 FF FF		CALL    J____SCRT_STUB_FOR_INITIALIZE_MTA_4
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
33 C0		XOR     EAX, EAX
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 08		SUB     ESP, 8
6A 00		PUSH    0; LPMODULENAME
FF 15 44 B0 01 00		CALL    DS:__IMP_GETMODULEHANDLEW
89 45 FC		MOV     [EBP+VAR_4], EAX
83 7D FC 00		CMP     [EBP+VAR_4], 0
75 04		JNZ     SHORT LOC_13AAB
32 C0		XOR     AL, AL
EB 64		JMP     SHORT LOC_13B0F
8B 45 FC		MOV     EAX, [EBP+VAR_4]
0F B7 08		MOVZX   ECX, WORD PTR [EAX]
81 F9 4D 5A 00 00		CMP     ECX, 5A4DH
74 04		JZ      SHORT LOC_13ABD
32 C0		XOR     AL, AL
EB 52		JMP     SHORT LOC_13B0F
8B 55 FC		MOV     EDX, [EBP+VAR_4]
8B 45 FC		MOV     EAX, [EBP+VAR_4]
03 42 3C		ADD     EAX, [EDX+3CH]
89 45 F8		MOV     [EBP+VAR_8], EAX
8B 4D F8		MOV     ECX, [EBP+VAR_8]
81 39 50 45 00 00		CMP     DWORD PTR [ECX], 4550H
74 04		JZ      SHORT LOC_13AD8
32 C0		XOR     AL, AL
EB 37		JMP     SHORT LOC_13B0F
8B 55 F8		MOV     EDX, [EBP+VAR_8]
0F B7 42 18		MOVZX   EAX, WORD PTR [EDX+18H]
3D 0B 01 00 00		CMP     EAX, 10BH
74 04		JZ      SHORT LOC_13AEA
32 C0		XOR     AL, AL
EB 25		JMP     SHORT LOC_13B0F
8B 4D F8		MOV     ECX, [EBP+VAR_8]
83 79 74 0E		CMP     DWORD PTR [ECX+74H], 0EH
77 04		JA      SHORT LOC_13AF7
32 C0		XOR     AL, AL
EB 18		JMP     SHORT LOC_13B0F
BA 08 00 00 00		MOV     EDX, 8
6B C2 0E		IMUL    EAX, EDX, 0EH
8B 4D F8		MOV     ECX, [EBP+VAR_8]
83 7C 01 78 00		CMP     DWORD PTR [ECX+EAX+78H], 0
75 04		JNZ     SHORT LOC_13B0D
32 C0		XOR     AL, AL
EB 02		JMP     SHORT LOC_13B0F
B0 01		MOV     AL, 1
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
68 16 13 01 00		PUSH    OFFSET TOPLEVELEXCEPTIONFILTER; LPTOPLEVELEXCEPTIONFILTER
FF 15 50 B0 01 00		CALL    DS:__IMP_SETUNHANDLEDEXCEPTIONFILTER
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
33 C0		XOR     EAX, EAX
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 08		SUB     ESP, 8
8B 45 08		MOV     EAX, [EBP+ARG_0]
8B 08		MOV     ECX, [EAX]
89 4D FC		MOV     [EBP+VAR_4], ECX
8B 55 FC		MOV     EDX, [EBP+VAR_4]
81 3A 63 73 6D E0		CMP     DWORD PTR [EDX], 0E06D7363H
75 5B		JNZ     SHORT LOC_13BE4
8B 45 FC		MOV     EAX, [EBP+VAR_4]
83 78 10 03		CMP     DWORD PTR [EAX+10H], 3
75 52		JNZ     SHORT LOC_13BE4
8B 4D FC		MOV     ECX, [EBP+VAR_4]
81 79 14 20 05 93 19		CMP     DWORD PTR [ECX+14H], 19930520H
74 24		JZ      SHORT LOC_13BC2
8B 55 FC		MOV     EDX, [EBP+VAR_4]
81 7A 14 21 05 93 19		CMP     DWORD PTR [EDX+14H], 19930521H
74 18		JZ      SHORT LOC_13BC2
8B 45 FC		MOV     EAX, [EBP+VAR_4]
81 78 14 22 05 93 19		CMP     DWORD PTR [EAX+14H], 19930522H
74 0C		JZ      SHORT LOC_13BC2
8B 4D FC		MOV     ECX, [EBP+VAR_4]
81 79 14 00 40 99 01		CMP     DWORD PTR [ECX+14H], 1994000H
75 22		JNZ     SHORT LOC_13BE4
E8 FC D4 FF FF		CALL    J___CURRENT_EXCEPTION
8B 55 FC		MOV     EDX, [EBP+VAR_4]
89 10		MOV     [EAX], EDX
8B 45 08		MOV     EAX, [EBP+ARG_0]
8B 48 04		MOV     ECX, [EAX+4]
89 4D F8		MOV     [EBP+VAR_8], ECX
E8 9B D7 FF FF		CALL    J___CURRENT_EXCEPTION_CONTEXT
8B 55 F8		MOV     EDX, [EBP+VAR_8]
89 10		MOV     [EAX], EDX
E8 21 D4 FF FF		CALL    J_TERMINATE
33 C0		XOR     EAX, EAX
8B E5		MOV     ESP, EBP
5D		POP     EBP
C2 04 00		RETN    4
55		PUSH    EBP
8B EC		MOV     EBP, ESP
C7 05 AC A1 01 00 00 00 00 00		MOV     DWORD_1A1AC, 0
5D		POP     EBP
C3		RETN
56		PUSH    ESI
BE 24 8C 01 00		MOV     ESI, OFFSET UNK_18C24
8B C6		MOV     EAX, ESI
3D 28 8E 01 00		CMP     EAX, OFFSET UNK_18E28
73 1D		JNB     SHORT LOC_13C5C
57		PUSH    EDI
8B 3E		MOV     EDI, [ESI]
85 FF		TEST    EDI, EDI
74 0A		JZ      SHORT LOC_13C50
8B CF		MOV     ECX, EDI; THIS
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
FF D7		CALL    EDI
83 C6 04		ADD     ESI, 4
81 FE 28 8E 01 00		CMP     ESI, OFFSET UNK_18E28
72 E5		JB      SHORT LOC_13C40
5F		POP     EDI
5E		POP     ESI
C3		RETN
56		PUSH    ESI
BE 30 8F 01 00		MOV     ESI, OFFSET UNK_18F30
8B C6		MOV     EAX, ESI
3D 34 91 01 00		CMP     EAX, OFFSET UNK_19134
73 1D		JNB     SHORT LOC_13C9C
57		PUSH    EDI
8B 3E		MOV     EDI, [ESI]
85 FF		TEST    EDI, EDI
74 0A		JZ      SHORT LOC_13C90
8B CF		MOV     ECX, EDI; THIS
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
FF D7		CALL    EDI
83 C6 04		ADD     ESI, 4
81 FE 34 91 01 00		CMP     ESI, OFFSET UNK_19134
72 E5		JB      SHORT LOC_13C80
5F		POP     EDI
5E		POP     ESI
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
8B 08		MOV     ECX, [EAX]
51		PUSH    ECX
E8 E4 D6 FF FF		CALL    J___FILTER_X86_SSE2_FLOATING_POINT_EXCEPTION_DEFAULT
83 C4 04		ADD     ESP, 4
8B 55 08		MOV     EDX, [EBP+ARG_0]
89 02		MOV     [EDX], EAX
8B 45 14		MOV     EAX, [EBP+ARG_C]
50		PUSH    EAX
8B 4D 10		MOV     ECX, [EBP+ARG_8]
51		PUSH    ECX
8B 55 0C		MOV     EDX, [EBP+ARG_4]
52		PUSH    EDX
8B 45 08		MOV     EAX, [EBP+ARG_0]
50		PUSH    EAX
68 4A 11 01 00		PUSH    OFFSET J_@__SECURITY_CHECK_COOKIE@4; __SECURITY_CHECK_COOKIE(X)
68 20 A0 01 00		PUSH    OFFSET ___SECURITY_COOKIE
E8 00 D5 FF FF		CALL    J__EXCEPT_HANDLER4_COMMON
83 C4 18		ADD     ESP, 18H
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
51		PUSH    ECX
89 4D FC		MOV     [EBP+VAR_4], ECX
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
51		PUSH    ECX
8B 45 08		MOV     EAX, [EBP+THIS]
8B 08		MOV     ECX, [EAX]
89 4D FC		MOV     [EBP+VAR_4], ECX
8B 45 FC		MOV     EAX, [EBP+VAR_4]
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP; VOLATILE UNSIGNED INT *
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
50		PUSH    EAX; THIS
E8 DF D5 FF FF		CALL    J_?_ATOMIC_LOAD_UINT@?A0X344232B8@@YAIPDI@Z; `ANONYMOUS NAMESPACE'::_ATOMIC_LOAD_UINT(UINT CONST VOLATILE *)
83 C4 04		ADD     ESP, 4
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
50		PUSH    EAX
E8 B4 00 00 00		CALL    ___CASTGUARD_COMPAT_CHECK
83 C4 04		ADD     ESP, 4
85 C0		TEST    EAX, EAX
74 01		JZ      SHORT LOC_13D64
CC		INT     3; TRAP TO DEBUGGER
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
50		PUSH    EAX
E8 94 00 00 00		CALL    ___CASTGUARD_COMPAT_CHECK
83 C4 04		ADD     ESP, 4
85 C0		TEST    EAX, EAX
74 07		JZ      SHORT LOC_13D8A
B9 41 00 00 00		MOV     ECX, 41H ; 'A'
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
50		PUSH    EAX
E8 54 00 00 00		CALL    ___CASTGUARD_COMPAT_CHECK
83 C4 04		ADD     ESP, 4
85 C0		TEST    EAX, EAX
74 0C		JZ      SHORT LOC_13DCF
8B 4D 08		MOV     ECX, [EBP+ARG_0]
51		PUSH    ECX
E8 14 00 00 00		CALL    SUB_13DE0
83 C4 04		ADD     ESP, 4
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 3D 08 D0 01 00 00		CMP     DS:___CASTGUARD_CHECK_FAILURE_OS_HANDLED_FPTR, 0
74 0F		JZ      SHORT LOC_13DFB
8B 45 08		MOV     EAX, [EBP+ARG_0]
50		PUSH    EAX
8B 0D 08 D0 01 00		MOV     ECX, DS:___CASTGUARD_CHECK_FAILURE_OS_HANDLED_FPTR
FF D1		CALL    ECX ; ___CASTGUARD_CHECK_FAILURE_OS_HANDLED_FPTR
83 C4 04		ADD     ESP, 4
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 10		SUB     ESP, 10H
C7 45 FC 00 88 01 00		MOV     [EBP+VAR_4], OFFSET UNK_18800
C7 45 F4 40 89 01 00		MOV     [EBP+VAR_C], OFFSET UNK_18940
8B 45 F4		MOV     EAX, [EBP+VAR_C]
2B 45 FC		SUB     EAX, [EBP+VAR_4]
89 45 F0		MOV     [EBP+VAR_10], EAX
8B 4D 08		MOV     ECX, [EBP+ARG_0]
2B 4D FC		SUB     ECX, [EBP+VAR_4]
3B 4D F0		CMP     ECX, [EBP+VAR_10]
77 09		JA      SHORT LOC_13E41
C7 45 F8 01 00 00 00		MOV     [EBP+VAR_8], 1
EB 07		JMP     SHORT LOC_13E48
C7 45 F8 00 00 00 00		MOV     [EBP+VAR_8], 0
8B 45 F8		MOV     EAX, [EBP+VAR_8]
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 10		MOV     EAX, [EBP+ARG_8]
50		PUSH    EAX
8B 4D 0C		MOV     ECX, [EBP+ARG_4]
51		PUSH    ECX
8B 55 08		MOV     EDX, [EBP+ARG_0]
52		PUSH    EDX
E8 DC 00 00 00		CALL    ___CASTGUARD_SLOW_PATH_COMPAT_CHECK
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
74 11		JZ      SHORT LOC_13E8C
8B 45 08		MOV     EAX, [EBP+ARG_0]
50		PUSH    EAX
E8 8C FF FF FF		CALL    ___CASTGUARD_COMPAT_CHECK
83 C4 04		ADD     ESP, 4
85 C0		TEST    EAX, EAX
74 01		JZ      SHORT LOC_13E8C
CC		INT     3; TRAP TO DEBUGGER
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 10		MOV     EAX, [EBP+ARG_8]
50		PUSH    EAX
8B 4D 0C		MOV     ECX, [EBP+ARG_4]
51		PUSH    ECX
8B 55 08		MOV     EDX, [EBP+ARG_0]
52		PUSH    EDX
E8 9C 00 00 00		CALL    ___CASTGUARD_SLOW_PATH_COMPAT_CHECK
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
74 17		JZ      SHORT LOC_13ED2
8B 45 08		MOV     EAX, [EBP+ARG_0]
50		PUSH    EAX
E8 4C FF FF FF		CALL    ___CASTGUARD_COMPAT_CHECK
83 C4 04		ADD     ESP, 4
85 C0		TEST    EAX, EAX
74 07		JZ      SHORT LOC_13ED2
B9 41 00 00 00		MOV     ECX, 41H ; 'A'
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 10		MOV     EAX, [EBP+ARG_8]
50		PUSH    EAX
8B 4D 0C		MOV     ECX, [EBP+ARG_4]
51		PUSH    ECX
8B 55 08		MOV     EDX, [EBP+ARG_0]
52		PUSH    EDX
E8 3C 00 00 00		CALL    ___CASTGUARD_SLOW_PATH_COMPAT_CHECK
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
74 1C		JZ      SHORT LOC_13F37
8B 45 08		MOV     EAX, [EBP+ARG_0]
50		PUSH    EAX
E8 EC FE FF FF		CALL    ___CASTGUARD_COMPAT_CHECK
83 C4 04		ADD     ESP, 4
85 C0		TEST    EAX, EAX
74 0C		JZ      SHORT LOC_13F37
8B 4D 08		MOV     ECX, [EBP+ARG_0]
51		PUSH    ECX
E8 AC FE FF FF		CALL    SUB_13DE0
83 C4 04		ADD     ESP, 4
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 0C		SUB     ESP, 0CH
C7 45 F8 00 88 01 00		MOV     [EBP+VAR_8], OFFSET UNK_18800
8B 45 F8		MOV     EAX, [EBP+VAR_8]
03 45 0C		ADD     EAX, [EBP+ARG_4]
89 45 F4		MOV     [EBP+VAR_C], EAX
8B 4D 08		MOV     ECX, [EBP+ARG_0]
2B 4D F4		SUB     ECX, [EBP+VAR_C]
3B 4D 10		CMP     ECX, [EBP+ARG_8]
76 09		JBE     SHORT LOC_13F7A
C7 45 FC 01 00 00 00		MOV     [EBP+VAR_4], 1
EB 07		JMP     SHORT LOC_13F81
C7 45 FC 00 00 00 00		MOV     [EBP+VAR_4], 0
8B 45 FC		MOV     EAX, [EBP+VAR_4]
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
51		PUSH    ECX
68 00 D0 01 00		PUSH    OFFSET ___GUARD_CHECK_ICALL_FPTR
E8 F2 D0 FF FF		CALL    SUB_110A0
83 C4 04		ADD     ESP, 4
3D 6C 12 01 00		CMP     EAX, OFFSET J_??1SHARED_MUTEX@STD@@QAE@XZ; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
74 09		JZ      SHORT LOC_13FC1
C7 45 FC 01 00 00 00		MOV     [EBP+VAR_4], 1
EB 07		JMP     SHORT LOC_13FC8
C7 45 FC 00 00 00 00		MOV     [EBP+VAR_4], 0
8B 45 FC		MOV     EAX, [EBP+VAR_4]
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 14 04 00 00		SUB     ESP, 414H
A1 20 A0 01 00		MOV     EAX, ___SECURITY_COOKIE
33 C5		XOR     EAX, EBP
89 45 FC		MOV     [EBP+VAR_4], EAX
80 3D B4 A1 01 00 00		CMP     BYTE_1A1B4, 0
0F 85 1A 01 00 00		JNZ     LOC_1411A
C6 05 B4 A1 01 00 01		MOV     BYTE_1A1B4, 1
E8 74 01 00 00		CALL    ?GETPDBDLLFROMINSTALLPATH@@YAPAUHINSTANCE__@@XZ; GETPDBDLLFROMINSTALLPATH(VOID)
85 C0		TEST    EAX, EAX
0F 85 08 01 00 00		JNZ     LOC_1411C
68 70 83 01 00		PUSH    OFFSET AVCRUNTIME140DD; "VCRUNTIME140D.DLL"
E8 40 D1 FF FF		CALL    J___VCRT_GETMODULEHANDLEW
83 C4 04		ADD     ESP, 4
85 C0		TEST    EAX, EAX
74 78		JZ      SHORT LOC_1409D
68 04 01 00 00		PUSH    104H
8D 8D EC FB FF FF		LEA     ECX, [EBP+FULLPATH]
51		PUSH    ECX
50		PUSH    EAX
E8 48 D3 FF FF		CALL    J___VCRT_GETMODULEFILENAMEW
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
74 5F		JZ      SHORT LOC_1409D
68 04 01 00 00		PUSH    104H; BUFFERCOUNT
8D 85 F4 FD FF FF		LEA     EAX, [EBP+BUFFER]
50		PUSH    EAX; BUFFER
8D 85 EC FB FF FF		LEA     EAX, [EBP+FULLPATH]
50		PUSH    EAX; FULLPATH
E8 1A 04 00 00		CALL    ?GETPDBDLLPATHFROMFILEPATH@@YAHPB_WPA_WI@Z; GETPDBDLLPATHFROMFILEPATH(WCHAR_T CONST *,WCHAR_T *,UINT)
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
74 40		JZ      SHORT LOC_1409D
68 00 09 00 00		PUSH    900H
8D 85 F4 FD FF FF		LEA     EAX, [EBP+BUFFER]
6A 00		PUSH    0
50		PUSH    EAX
E8 66 D1 FF FF		CALL    J___VCRT_LOADLIBRARYEXW
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
0F 85 A1 00 00 00		JNZ     LOC_1411C
FF 15 40 B0 01 00		CALL    DS:__IMP_GETLASTERROR
83 F8 57		CMP     EAX, 57H ; 'W'
75 17		JNZ     SHORT LOC_1409D
6A 08		PUSH    8
8D 85 F4 FD FF FF		LEA     EAX, [EBP+BUFFER]
6A 00		PUSH    0
50		PUSH    EAX
E8 40 D1 FF FF		CALL    J___VCRT_LOADLIBRARYEXW
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
75 7F		JNZ     SHORT LOC_1411C
68 00 0A 00 00		PUSH    0A00H
6A 00		PUSH    0
68 24 85 01 00		PUSH    OFFSET AMSPDB140; "MSPDB140"
E8 28 D1 FF FF		CALL    J___VCRT_LOADLIBRARYEXW
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
75 67		JNZ     SHORT LOC_1411C
FF 15 40 B0 01 00		CALL    DS:__IMP_GETLASTERROR
83 F8 57		CMP     EAX, 57H ; 'W'
75 5A		JNZ     SHORT LOC_1411A
68 04 01 00 00		PUSH    104H
8D 85 EC FB FF FF		LEA     EAX, [EBP+FULLPATH]
50		PUSH    EAX
6A 00		PUSH    0
E8 AC D2 FF FF		CALL    J___VCRT_GETMODULEFILENAMEW
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
74 40		JZ      SHORT LOC_1411A
68 04 01 00 00		PUSH    104H; BUFFERCOUNT
8D 85 F4 FD FF FF		LEA     EAX, [EBP+BUFFER]
50		PUSH    EAX; BUFFER
8D 85 EC FB FF FF		LEA     EAX, [EBP+FULLPATH]
50		PUSH    EAX; FULLPATH
E8 7E 03 00 00		CALL    ?GETPDBDLLPATHFROMFILEPATH@@YAHPB_WPA_WI@Z; GETPDBDLLPATHFROMFILEPATH(WCHAR_T CONST *,WCHAR_T *,UINT)
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
74 21		JZ      SHORT LOC_1411A
6A 08		PUSH    8
8D 85 F4 FD FF FF		LEA     EAX, [EBP+BUFFER]
6A 00		PUSH    0
50		PUSH    EAX
E8 CD D0 FF FF		CALL    J___VCRT_LOADLIBRARYEXW
83 C4 0C		ADD     ESP, 0CH
8B 4D FC		MOV     ECX, [EBP+VAR_4]
33 CD		XOR     ECX, EBP; STACKCOOKIE
E8 34 D0 FF FF		CALL    J_@__SECURITY_CHECK_COOKIE@4; __SECURITY_CHECK_COOKIE(X)
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
33 C0		XOR     EAX, EAX
8B 4D FC		MOV     ECX, [EBP+VAR_4]
33 CD		XOR     ECX, EBP; STACKCOOKIE
E8 24 D0 FF FF		CALL    J_@__SECURITY_CHECK_COOKIE@4; __SECURITY_CHECK_COOKIE(X)
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 1C 02 00 00		SUB     ESP, 21CH
A1 20 A0 01 00		MOV     EAX, ___SECURITY_COOKIE
33 C5		XOR     EAX, EBP
89 45 FC		MOV     [EBP+VAR_4], EAX
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
68 00 08 00 00		PUSH    800H
6A 00		PUSH    0
68 A8 83 01 00		PUSH    OFFSET AAPIMSWINCORERE; "API-MS-WIN-CORE-REGISTRY-L1-1-0.DLL"
E8 2F D0 FF FF		CALL    J___VCRT_LOADLIBRARYEXW
8B F8		MOV     EDI, EAX
83 C4 0C		ADD     ESP, 0CH
85 FF		TEST    EDI, EDI
75 39		JNZ     SHORT LOC_141E9
68 00 08 00 00		PUSH    800H
50		PUSH    EAX
68 00 84 01 00		PUSH    OFFSET AADVAPI32DLL; "ADVAPI32.DLL"
E8 16 D0 FF FF		CALL    J___VCRT_LOADLIBRARYEXW
8B F8		MOV     EDI, EAX
83 C4 0C		ADD     ESP, 0CH
85 FF		TEST    EDI, EDI
75 20		JNZ     SHORT LOC_141E9
FF 15 40 B0 01 00		CALL    DS:__IMP_GETLASTERROR
83 F8 57		CMP     EAX, 57H ; 'W'
75 79		JNZ     SHORT LOC_1424D
57		PUSH    EDI
57		PUSH    EDI
68 00 84 01 00		PUSH    OFFSET AADVAPI32DLL; "ADVAPI32.DLL"
E8 F6 CF FF FF		CALL    J___VCRT_LOADLIBRARYEXW
8B F8		MOV     EDI, EAX
83 C4 0C		ADD     ESP, 0CH
85 FF		TEST    EDI, EDI
74 64		JZ      SHORT LOC_1424D
68 20 84 01 00		PUSH    OFFSET PROCNAME; "REGOPENKEYEXW"
57		PUSH    EDI; HMODULE
FF 15 28 B0 01 00		CALL    DS:__IMP_GETPROCADDRESS
8B F0		MOV     ESI, EAX
85 F6		TEST    ESI, ESI
74 52		JZ      SHORT LOC_1424D
68 30 84 01 00		PUSH    OFFSET AREGQUERYVALUEE; "REGQUERYVALUEEXW"
57		PUSH    EDI; HMODULE
FF 15 28 B0 01 00		CALL    DS:__IMP_GETPROCADDRESS
8B D8		MOV     EBX, EAX
85 DB		TEST    EBX, EBX
74 40		JZ      SHORT LOC_1424D
68 44 84 01 00		PUSH    OFFSET AREGCLOSEKEY; "REGCLOSEKEY"
57		PUSH    EDI; HMODULE
FF 15 28 B0 01 00		CALL    DS:__IMP_GETPROCADDRESS
89 85 E8 FD FF FF		MOV     [EBP+VAR_218], EAX
85 C0		TEST    EAX, EAX
74 2A		JZ      SHORT LOC_1424D
8D 85 F0 FD FF FF		LEA     EAX, [EBP+VAR_210]
8B CE		MOV     ECX, ESI; THIS
50		PUSH    EAX
6A 01		PUSH    1
6A 00		PUSH    0
68 58 84 01 00		PUSH    OFFSET ASOFTWAREWOW643; "SOFTWARE\\WOW6432NODE\\MICROSOFT\\VISUA"...
68 02 00 00 80		PUSH    80000002H
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
FF D6		CALL    ESI
85 C0		TEST    EAX, EAX
74 1A		JZ      SHORT LOC_14260
57		PUSH    EDI; HLIBMODULE
FF 15 2C B0 01 00		CALL    DS:__IMP_FREELIBRARY
5F		POP     EDI
5E		POP     ESI
33 C0		XOR     EAX, EAX
5B		POP     EBX
8B 4D FC		MOV     ECX, [EBP+VAR_4]
33 CD		XOR     ECX, EBP; STACKCOOKIE
E8 EE CE FF FF		CALL    J_@__SECURITY_CHECK_COOKIE@4; __SECURITY_CHECK_COOKIE(X)
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
8D 85 EC FD FF FF		LEA     EAX, [EBP+VAR_214]
C7 85 EC FD FF FF 08 02 00 00		MOV     [EBP+VAR_214], 208H
50		PUSH    EAX
8D 85 F4 FD FF FF		LEA     EAX, [EBP+VAR_20C]
8B CB		MOV     ECX, EBX; THIS
50		PUSH    EAX
8D 85 E4 FD FF FF		LEA     EAX, [EBP+VAR_21C]
50		PUSH    EAX
6A 00		PUSH    0
68 E4 84 01 00		PUSH    OFFSET APRODUCTDIR; "PRODUCTDIR"
FF B5 F0 FD FF FF		PUSH    [EBP+VAR_210]
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
FF D3		CALL    EBX
FF B5 F0 FD FF FF		PUSH    [EBP+VAR_210]
8B 9D E8 FD FF FF		MOV     EBX, [EBP+VAR_218]
8B F0		MOV     ESI, EAX
8B CB		MOV     ECX, EBX; THIS
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
FF D3		CALL    EBX
57		PUSH    EDI; HLIBMODULE
FF 15 2C B0 01 00		CALL    DS:__IMP_FREELIBRARY
85 F6		TEST    ESI, ESI
75 94		JNZ     SHORT LOC_1424D
83 BD E4 FD FF FF 01		CMP     [EBP+VAR_21C], 1
75 8B		JNZ     SHORT LOC_1424D
8B 8D EC FD FF FF		MOV     ECX, [EBP+VAR_214]
F6 C1 01		TEST    CL, 1
75 80		JNZ     SHORT LOC_1424D
D1 E9		SHR     ECX, 1
8B D1		MOV     EDX, ECX
83 F9 02		CMP     ECX, 2
0F 82 73 FF FF FF		JB      LOC_1424D
49		DEC     ECX
8D 85 F4 FD FF FF		LEA     EAX, [EBP+VAR_20C]
66 39 34 48		CMP     [EAX+ECX*2], SI
8D 04 48		LEA     EAX, [EAX+ECX*2]
0F 85 5F FF FF FF		JNZ     LOC_1424D
66 83 78 FE 5C		CMP     WORD PTR [EAX-2], 5CH ; '\'
74 0A		JZ      SHORT LOC_142FF
B9 5C 00 00 00		MOV     ECX, 5CH ; '\'
66 89 08		MOV     [EAX], CX
8B CA		MOV     ECX, EDX
8B C1		MOV     EAX, ECX
F7 D0		NOT     EAX
83 F8 12		CMP     EAX, 12H
0F 82 41 FF FF FF		JB      LOC_1424D
8D 41 11		LEA     EAX, [ECX+11H]
3D 04 01 00 00		CMP     EAX, 104H
0F 87 33 FF FF FF		JA      LOC_1424D
A1 4C 83 01 00		MOV     EAX, DS:DWORD_1834C
89 84 4D F4 FD FF FF		MOV     [EBP+ECX*2+VAR_20C], EAX
A1 50 83 01 00		MOV     EAX, DS:DWORD_18350
89 84 4D F8 FD FF FF		MOV     [EBP+ECX*2+VAR_208], EAX
A1 54 83 01 00		MOV     EAX, DS:DWORD_18354
89 84 4D FC FD FF FF		MOV     [EBP+ECX*2+VAR_204], EAX
A1 58 83 01 00		MOV     EAX, DS:DWORD_18358
89 84 4D 00 FE FF FF		MOV     [EBP+ECX*2+VAR_200], EAX
A1 5C 83 01 00		MOV     EAX, DS:DWORD_1835C
89 84 4D 04 FE FF FF		MOV     [EBP+ECX*2+VAR_1FC], EAX
A1 60 83 01 00		MOV     EAX, DS:DWORD_18360
89 84 4D 08 FE FF FF		MOV     [EBP+ECX*2+VAR_1F8], EAX
A1 64 83 01 00		MOV     EAX, DS:DWORD_18364
89 84 4D 0C FE FF FF		MOV     [EBP+ECX*2+VAR_1F4], EAX
A1 68 83 01 00		MOV     EAX, DS:DWORD_18368
89 84 4D 10 FE FF FF		MOV     [EBP+ECX*2+VAR_1F0], EAX
66 A1 6C 83 01 00		MOV     AX, DS:WORD_1836C
68 00 09 00 00		PUSH    900H
66 89 84 4D 14 FE FF FF		MOV     [EBP+ECX*2+VAR_1EC], AX
8D 85 F4 FD FF FF		LEA     EAX, [EBP+VAR_20C]
6A 00		PUSH    0
50		PUSH    EAX
E8 3B CE FF FF		CALL    J___VCRT_LOADLIBRARYEXW
8B F0		MOV     ESI, EAX
83 C4 0C		ADD     ESP, 0CH
85 F6		TEST    ESI, ESI
75 1F		JNZ     SHORT LOC_143C3
FF 15 40 B0 01 00		CALL    DS:__IMP_GETLASTERROR
83 F8 57		CMP     EAX, 57H ; 'W'
75 14		JNZ     SHORT LOC_143C3
6A 08		PUSH    8
8D 85 F4 FD FF FF		LEA     EAX, [EBP+VAR_20C]
56		PUSH    ESI
50		PUSH    EAX
E8 18 CE FF FF		CALL    J___VCRT_LOADLIBRARYEXW
83 C4 0C		ADD     ESP, 0CH
8B F0		MOV     ESI, EAX
8B 4D FC		MOV     ECX, [EBP+VAR_4]
8B C6		MOV     EAX, ESI
5F		POP     EDI
5E		POP     ESI
33 CD		XOR     ECX, EBP; STACKCOOKIE
5B		POP     EBX
E8 78 CD FF FF		CALL    J_@__SECURITY_CHECK_COOKIE@4; __SECURITY_CHECK_COOKIE(X)
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 0C 06 00 00		SUB     ESP, 60CH
A1 20 A0 01 00		MOV     EAX, ___SECURITY_COOKIE
33 C5		XOR     EAX, EBP
89 45 FC		MOV     [EBP+VAR_4], EAX
8B 45 08		MOV     EAX, [EBP+FULLPATH]
8D 8D F4 FD FF FF		LEA     ECX, [EBP+EXT]
56		PUSH    ESI
8B 75 0C		MOV     ESI, [EBP+BUFFER]
68 00 01 00 00		PUSH    100H; EXTCOUNT
51		PUSH    ECX; EXT
68 00 01 00 00		PUSH    100H; FILENAMECOUNT
8D 8D F4 FB FF FF		LEA     ECX, [EBP+FILENAME]
51		PUSH    ECX; FILENAME
68 00 01 00 00		PUSH    100H; DIRCOUNT
8D 8D F4 F9 FF FF		LEA     ECX, [EBP+DIR]
51		PUSH    ECX; DIR
6A 03		PUSH    3; DRIVECOUNT
8D 4D F4		LEA     ECX, [EBP+DRIVE]
51		PUSH    ECX; DRIVE
50		PUSH    EAX; FULLPATH
E8 FA CB FF FF		CALL    J__WSPLITPATH_S
83 C4 24		ADD     ESP, 24H
85 C0		TEST    EAX, EAX
75 6D		JNZ     SHORT LOC_1452E
68 0C 85 01 00		PUSH    OFFSET AMSPDB140_0; "MSPDB140"
8D 85 F4 FB FF FF		LEA     EAX, [EBP+FILENAME]
6A 09		PUSH    9; SIZEINWORDS
50		PUSH    EAX; DESTINATION
E8 E9 CC FF FF		CALL    J_WCSCPY_S
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
75 53		JNZ     SHORT LOC_1452E
68 00 85 01 00		PUSH    OFFSET ADLL; "DLL"
8D 85 F4 FD FF FF		LEA     EAX, [EBP+EXT]
6A 04		PUSH    4; SIZEINWORDS
50		PUSH    EAX; DESTINATION
E8 CF CC FF FF		CALL    J_WCSCPY_S
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
75 39		JNZ     SHORT LOC_1452E
8D 85 F4 FD FF FF		LEA     EAX, [EBP+EXT]
50		PUSH    EAX; EXT
8D 85 F4 FB FF FF		LEA     EAX, [EBP+FILENAME]
50		PUSH    EAX; FILENAME
8D 85 F4 F9 FF FF		LEA     EAX, [EBP+DIR]
50		PUSH    EAX; DIR
8D 45 F4		LEA     EAX, [EBP+DRIVE]
50		PUSH    EAX; DRIVE
FF 75 10		PUSH    [EBP+BUFFERCOUNT]; BUFFERCOUNT
56		PUSH    ESI; BUFFER
E8 14 CD FF FF		CALL    J__WMAKEPATH_S
83 C4 18		ADD     ESP, 18H
F7 D8		NEG     EAX
1B C0		SBB     EAX, EAX
40		INC     EAX
5E		POP     ESI
8B 4D FC		MOV     ECX, [EBP+VAR_4]
33 CD		XOR     ECX, EBP; STACKCOOKIE
E8 20 CC FF FF		CALL    J_@__SECURITY_CHECK_COOKIE@4; __SECURITY_CHECK_COOKIE(X)
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
8B 4D FC		MOV     ECX, [EBP+VAR_4]
33 C0		XOR     EAX, EAX
33 CD		XOR     ECX, EBP; STACKCOOKIE
5E		POP     ESI
E8 0F CC FF FF		CALL    J_@__SECURITY_CHECK_COOKIE@4; __SECURITY_CHECK_COOKIE(X)
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 14		MOV     EAX, [EBP+ARG_C]
83 EC 4C		SUB     ESP, 4CH
33 C9		XOR     ECX, ECX
53		PUSH    EBX
56		PUSH    ESI
8B 75 08		MOV     ESI, [EBP+ARG_0]
C7 00 00 00 00 00		MOV     DWORD PTR [EAX], 0
4E		DEC     ESI
8B 45 0C		MOV     EAX, [EBP+ARG_4]
57		PUSH    EDI
6A 1C		PUSH    1CH; DWLENGTH
66 89 08		MOV     [EAX], CX
8D 45 B4		LEA     EAX, [EBP+BUFFER]
50		PUSH    EAX; LPBUFFER
56		PUSH    ESI; LPADDRESS
FF 15 30 B0 01 00		CALL    DS:__IMP_VIRTUALQUERY
85 C0		TEST    EAX, EAX
0F 84 44 03 00 00		JZ      LOC_148F7
FF 75 1C		PUSH    [EBP+ARG_14]
FF 75 18		PUSH    [EBP+ARG_10]
FF 75 B8		PUSH    [EBP+BUFFER.ALLOCATIONBASE]
E8 BE CD FF FF		CALL    J___VCRT_GETMODULEFILENAMEW
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
0F 84 2B 03 00 00		JZ      LOC_148F7
8B 45 B8		MOV     EAX, [EBP+BUFFER.ALLOCATIONBASE]
B9 4D 5A 00 00		MOV     ECX, 5A4DH
66 39 08		CMP     [EAX], CX
0F 85 1A 03 00 00		JNZ     LOC_148F7
8B 48 3C		MOV     ECX, [EAX+3CH]
85 C9		TEST    ECX, ECX
0F 8E 0F 03 00 00		JLE     LOC_148F7
03 C8		ADD     ECX, EAX
81 39 50 45 00 00		CMP     DWORD PTR [ECX], 4550H
0F 85 01 03 00 00		JNZ     LOC_148F7
0F B7 51 14		MOVZX   EDX, WORD PTR [ECX+14H]
2B F0		SUB     ESI, EAX
0F B7 79 06		MOVZX   EDI, WORD PTR [ECX+6]
83 C2 20		ADD     EDX, 20H ; ' '
33 DB		XOR     EBX, EBX
33 C0		XOR     EAX, EAX
85 FF		TEST    EDI, EDI
74 1C		JZ      SHORT LOC_14627
03 CA		ADD     ECX, EDX
8D 49 00		LEA     ECX, [ECX+0]
8B 51 04		MOV     EDX, [ECX+4]
3B F2		CMP     ESI, EDX
72 08		JB      SHORT LOC_1461F
8B DE		MOV     EBX, ESI
2B DA		SUB     EBX, EDX
3B 31		CMP     ESI, [ECX]
72 08		JB      SHORT LOC_14627
40		INC     EAX
83 C1 28		ADD     ECX, 28H ; '('
3B C7		CMP     EAX, EDI
72 E9		JB      SHORT LOC_14610
3B C7		CMP     EAX, EDI
0F 84 C8 02 00 00		JZ      LOC_148F7
40		INC     EAX
80 3D B5 A1 01 00 00		CMP     BYTE_1A1B5, 0
89 45 F4		MOV     [EBP+VAR_C], EAX
75 28		JNZ     SHORT LOC_14664
83 3D B0 A1 01 00 00		CMP     DWORD_1A1B0, 0
0F 85 AE 02 00 00		JNZ     LOC_148F7
E8 92 F9 FF FF		CALL    SUB_13FE0
A3 B0 A1 01 00		MOV     DWORD_1A1B0, EAX
85 C0		TEST    EAX, EAX
0F 84 9C 02 00 00		JZ      LOC_148F7
C6 05 B5 A1 01 00 01		MOV     BYTE_1A1B5, 1
EB 05		JMP     SHORT LOC_14669
A1 B0 A1 01 00		MOV     EAX, DWORD_1A1B0
68 3C 85 01 00		PUSH    OFFSET APDBOPENVALIDAT; "PDBOPENVALIDATE5"
50		PUSH    EAX; HMODULE
FF 15 28 B0 01 00		CALL    DS:__IMP_GETPROCADDRESS
8B F0		MOV     ESI, EAX
85 F6		TEST    ESI, ESI
0F 84 78 02 00 00		JZ      LOC_148F7
8D 45 E8		LEA     EAX, [EBP+VAR_18]
8B CE		MOV     ECX, ESI; THIS
50		PUSH    EAX
6A 00		PUSH    0
6A 00		PUSH    0
8D 45 D0		LEA     EAX, [EBP+VAR_30]
50		PUSH    EAX
6A 00		PUSH    0
6A 00		PUSH    0
6A 00		PUSH    0
FF 75 18		PUSH    [EBP+ARG_10]
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
FF D6		CALL    ESI
83 C4 20		ADD     ESP, 20H
85 C0		TEST    EAX, EAX
0F 84 4E 02 00 00		JZ      LOC_148F7
8B 7D E8		MOV     EDI, [EBP+VAR_18]
C7 45 F8 00 00 00 00		MOV     [EBP+VAR_8], 0
C7 45 DC 00 00 00 00		MOV     [EBP+VAR_24], 0
8B 07		MOV     EAX, [EDI]
8B 30		MOV     ESI, [EAX]
8B CE		MOV     ECX, ESI; THIS
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
8B CF		MOV     ECX, EDI
FF D6		CALL    ESI
3D 41 91 32 01		CMP     EAX, 1329141H
0F 85 3F 01 00 00		JNZ     $DONE1$77
8B 7D E8		MOV     EDI, [EBP+VAR_18]
8B 07		MOV     EAX, [EDI]
8B 70 1C		MOV     ESI, [EAX+1CH]
8D 45 E0		LEA     EAX, [EBP+VAR_20]
50		PUSH    EAX
68 50 85 01 00		PUSH    OFFSET AR; "R"
6A 00		PUSH    0
8B CE		MOV     ECX, ESI; THIS
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
8B CF		MOV     ECX, EDI
FF D6		CALL    ESI
85 C0		TEST    EAX, EAX
0F 84 18 01 00 00		JZ      $DONE1$77
8B 7D E0		MOV     EDI, [EBP+VAR_20]
6A 00		PUSH    0
6A 00		PUSH    0
6A 00		PUSH    0
8B 07		MOV     EAX, [EDI]
8B 70 20		MOV     ESI, [EAX+20H]
8D 45 EC		LEA     EAX, [EBP+VAR_14]
50		PUSH    EAX
53		PUSH    EBX
FF 75 F4		PUSH    [EBP+VAR_C]
8B CE		MOV     ECX, ESI; THIS
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
8B CF		MOV     ECX, EDI
FF D6		CALL    ESI
85 C0		TEST    EAX, EAX
0F 84 DA 00 00 00		JZ      $DONE2$76
8B 7D EC		MOV     EDI, [EBP+VAR_14]
8B 07		MOV     EAX, [EDI]
8B 70 68		MOV     ESI, [EAX+68H]
8D 45 F8		LEA     EAX, [EBP+VAR_8]
50		PUSH    EAX
8B CE		MOV     ECX, ESI; THIS
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
8B CF		MOV     ECX, EDI
FF D6		CALL    ESI
84 C0		TEST    AL, AL
0F 84 A6 00 00 00		JZ      $DONE3$75
8B 7D F8		MOV     EDI, [EBP+VAR_8]
85 FF		TEST    EDI, EDI
0F 84 9B 00 00 00		JZ      $DONE3$75
8B 07		MOV     EAX, [EDI]
8B 70 08		MOV     ESI, [EAX+8]
8B CE		MOV     ECX, ESI; THIS
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
8B CF		MOV     ECX, EDI
FF D6		CALL    ESI
85 C0		TEST    EAX, EAX
74 61		JZ      SHORT LOC_147C7
8B 7D F8		MOV     EDI, [EBP+VAR_8]
6A 00		PUSH    0
8B 07		MOV     EAX, [EDI]
8B 70 0C		MOV     ESI, [EAX+0CH]
8D 45 F0		LEA     EAX, [EBP+VAR_10]
50		PUSH    EAX
8D 45 D8		LEA     EAX, [EBP+VAR_28]
8B CE		MOV     ECX, ESI; THIS
50		PUSH    EAX
8D 45 FC		LEA     EAX, [EBP+VAR_4]
50		PUSH    EAX
8D 45 E4		LEA     EAX, [EBP+VAR_1C]
50		PUSH    EAX
6A 00		PUSH    0
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
8B CF		MOV     ECX, EDI
FF D6		CALL    ESI
84 C0		TEST    AL, AL
74 47		JZ      SHORT $DONE4$74
0F B7 45 FC		MOVZX   EAX, [EBP+VAR_4]
3B 45 F4		CMP     EAX, [EBP+VAR_C]
75 14		JNZ     SHORT LOC_147AF
8B 4D E4		MOV     ECX, [EBP+VAR_1C]
3B CB		CMP     ECX, EBX
77 0D		JA      SHORT LOC_147AF
8B 45 D8		MOV     EAX, [EBP+VAR_28]
03 C1		ADD     EAX, ECX
3B D8		CMP     EBX, EAX
0F 82 83 00 00 00		JB      LOC_14832
8B 7D F8		MOV     EDI, [EBP+VAR_8]
8B 07		MOV     EAX, [EDI]
8B 70 08		MOV     ESI, [EAX+8]
8B CE		MOV     ECX, ESI; THIS
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
8B CF		MOV     ECX, EDI
FF D6		CALL    ESI
85 C0		TEST    EAX, EAX
75 9F		JNZ     SHORT LOC_14766
33 C9		XOR     ECX, ECX
51		PUSH    ECX; LPMEM
6A 00		PUSH    0; DWFLAGS
FF 15 34 B0 01 00		CALL    DS:__IMP_GETPROCESSHEAP
50		PUSH    EAX; HHEAP
FF 15 38 B0 01 00		CALL    DS:__IMP_HEAPFREE
8B 7D F8		MOV     EDI, [EBP+VAR_8]
8B 07		MOV     EAX, [EDI]
8B 30		MOV     ESI, [EAX]
8B CE		MOV     ECX, ESI; THIS
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
8B CF		MOV     ECX, EDI
FF D6		CALL    ESI
8B 7D EC		MOV     EDI, [EBP+VAR_14]
8B 07		MOV     EAX, [EDI]
8B 70 40		MOV     ESI, [EAX+40H]
8B CE		MOV     ECX, ESI; THIS
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
8B CF		MOV     ECX, EDI
FF D6		CALL    ESI
8B 7D E0		MOV     EDI, [EBP+VAR_20]
8B 07		MOV     EAX, [EDI]
8B 70 38		MOV     ESI, [EAX+38H]
8B CE		MOV     ECX, ESI; THIS
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
8B CF		MOV     ECX, EDI
FF D6		CALL    ESI
8B 7D E8		MOV     EDI, [EBP+VAR_18]
8B 17		MOV     EDX, [EDI]
8B 72 2C		MOV     ESI, [EDX+2CH]
8B CE		MOV     ECX, ESI; THIS
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
8B CF		MOV     ECX, EDI
FF D6		CALL    ESI
8B 45 DC		MOV     EAX, [EBP+VAR_24]
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
8B 75 F0		MOV     ESI, [EBP+VAR_10]
85 F6		TEST    ESI, ESI
74 A0		JZ      SHORT $DONE4$74
81 FE FF FF FF 1F		CMP     ESI, 1FFFFFFFH
73 98		JNB     SHORT $DONE4$74
C1 E6 03		SHL     ESI, 3
FF 15 34 B0 01 00		CALL    DS:__IMP_GETPROCESSHEAP
56		PUSH    ESI; DWBYTES
6A 00		PUSH    0; DWFLAGS
50		PUSH    EAX; HHEAP
FF 15 00 B0 01 00		CALL    DS:__IMP_HEAPALLOC
89 45 F4		MOV     [EBP+VAR_C], EAX
85 C0		TEST    EAX, EAX
0F 84 7A FF FF FF		JZ      $DONE4$74
8B 7D F8		MOV     EDI, [EBP+VAR_8]
50		PUSH    EAX
8D 45 F0		LEA     EAX, [EBP+VAR_10]
50		PUSH    EAX
8B 0F		MOV     ECX, [EDI]
8D 45 D4		LEA     EAX, [EBP+VAR_2C]
6A 00		PUSH    0
6A 00		PUSH    0
6A 00		PUSH    0
8B 71 0C		MOV     ESI, [ECX+0CH]
8B CE		MOV     ECX, ESI; THIS
50		PUSH    EAX
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
8B CF		MOV     ECX, EDI
FF D6		CALL    ESI
8B 4D F4		MOV     ECX, [EBP+VAR_C]
84 C0		TEST    AL, AL
0F 84 3C FF FF FF		JZ      $DONE5$73
2B 5D E4		SUB     EBX, [EBP+VAR_1C]
3B 19		CMP     EBX, [ECX]
0F 82 31 FF FF FF		JB      $DONE5$73
8B 55 F0		MOV     EDX, [EBP+VAR_10]
B8 01 00 00 00		MOV     EAX, 1
3B D0		CMP     EDX, EAX
76 0A		JBE     SHORT LOC_148AE
3B 1C C1		CMP     EBX, [ECX+EAX*8]
72 05		JB      SHORT LOC_148AE
40		INC     EAX
3B C2		CMP     EAX, EDX
72 F6		JB      SHORT LOC_148A4
8B 44 C1 FC		MOV     EAX, [ECX+EAX*8-4]
8B 4D 14		MOV     ECX, [EBP+ARG_C]
25 FF FF FF 00		AND     EAX, 0FFFFFFH
8B 7D EC		MOV     EDI, [EBP+VAR_14]
6A 00		PUSH    0
6A 00		PUSH    0
89 01		MOV     [ECX], EAX
8B 07		MOV     EAX, [EDI]
6A 00		PUSH    0
8B 70 70		MOV     ESI, [EAX+70H]
8D 45 10		LEA     EAX, [EBP+ARG_8]
50		PUSH    EAX
FF 75 0C		PUSH    [EBP+ARG_4]
8B CE		MOV     ECX, ESI; THIS
FF 75 D4		PUSH    [EBP+VAR_2C]
FF 15 00 D0 01 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR; STD::SHARED_MUTEX::~SHARED_MUTEX(VOID)
8B CF		MOV     ECX, EDI
FF D6		CALL    ESI
8B 4D F4		MOV     ECX, [EBP+VAR_C]
84 C0		TEST    AL, AL
0F 84 DE FE FF FF		JZ      $DONE5$73
C7 45 DC 01 00 00 00		MOV     [EBP+VAR_24], 1
E9 D2 FE FF FF		JMP     $DONE5$73
5F		POP     EDI
5E		POP     ESI
33 C0		XOR     EAX, EAX
5B		POP     EBX
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
3B 0D 20 A0 01 00		CMP     ECX, ___SECURITY_COOKIE
75 01		JNZ     SHORT $FAILURE$4
C3		RETN
E9 3F C6 FF FF		JMP     J____REPORT_GSFAILURE
55		PUSH    EBP
8B EC		MOV     EBP, ESP
51		PUSH    ECX
8B 45 14		MOV     EAX, [EBP+ARG_C]
50		PUSH    EAX
8B 4D 10		MOV     ECX, [EBP+ARG_8]
51		PUSH    ECX
8B 55 0C		MOV     EDX, [EBP+ARG_4]
52		PUSH    EDX
8B 45 08		MOV     EAX, [EBP+ARG_0]
50		PUSH    EAX
E8 97 F2 FF FF		CALL    __EXCEPT_HANDLER4
83 C4 10		ADD     ESP, 10H
89 45 FC		MOV     [EBP+VAR_4], EAX
8B 4D 08		MOV     ECX, [EBP+ARG_0]
8B 51 04		MOV     EDX, [ECX+4]
83 E2 66		AND     EDX, 66H
75 2A		JNZ     SHORT LOC_14A54
8B 45 08		MOV     EAX, [EBP+ARG_0]
81 38 63 73 6D E0		CMP     DWORD PTR [EAX], 0E06D7363H
75 1F		JNZ     SHORT LOC_14A54
83 7D FC 01		CMP     [EBP+VAR_4], 1
75 19		JNZ     SHORT LOC_14A54
E8 83 C6 FF FF		CALL    J___CURRENT_EXCEPTION
8B 4D 08		MOV     ECX, [EBP+ARG_0]
89 08		MOV     [EAX], ECX
E8 2B C9 FF FF		CALL    J___CURRENT_EXCEPTION_CONTEXT
8B 55 10		MOV     EDX, [EBP+ARG_8]
89 10		MOV     [EAX], EDX
E8 B1 C5 FF FF		CALL    J_TERMINATE
8B 45 FC		MOV     EAX, [EBP+VAR_4]
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 48		SUB     ESP, 48H
A1 20 A0 01 00		MOV     EAX, ___SECURITY_COOKIE
33 C5		XOR     EAX, EBP
89 45 FC		MOV     [EBP+VAR_4], EAX
53		PUSH    EBX
56		PUSH    ESI
C7 05 B8 A1 01 00 00 00 00 00		MOV     DWORD_1A1B8, 0
A1 2C A0 01 00		MOV     EAX, DWORD_1A02C
83 C8 01		OR      EAX, 1
A3 2C A0 01 00		MOV     DWORD_1A02C, EAX
6A 0A		PUSH    0AH; PROCESSORFEATURE
FF 15 48 B0 01 00		CALL    DS:__IMP_ISPROCESSORFEATUREPRESENT
85 C0		TEST    EAX, EAX
75 07		JNZ     SHORT LOC_14ABC
33 C0		XOR     EAX, EAX
E9 E7 02 00 00		JMP     LOC_14DA3
C7 45 F0 00 00 00 00		MOV     [EBP+VAR_10], 0
C7 45 F4 00 00 00 00		MOV     [EBP+VAR_C], 0
C7 45 F8 00 00 00 00		MOV     [EBP+VAR_8], 0
8D 75 E0		LEA     ESI, [EBP+VAR_20]
33 C0		XOR     EAX, EAX
33 C9		XOR     ECX, ECX
0F A2		CPUID
89 06		MOV     [ESI], EAX
89 5E 04		MOV     [ESI+4], EBX
89 4E 08		MOV     [ESI+8], ECX
89 56 0C		MOV     [ESI+0CH], EDX
B9 04 00 00 00		MOV     ECX, 4
6B D1 00		IMUL    EDX, ECX, 0
8B 44 15 E0		MOV     EAX, [EBP+EDX+VAR_20]
89 45 C8		MOV     [EBP+VAR_38], EAX
B9 04 00 00 00		MOV     ECX, 4
C1 E1 00		SHL     ECX, 0
8B 54 0D E0		MOV     EDX, [EBP+ECX+VAR_20]
81 F2 47 65 6E 75		XOR     EDX, 756E6547H
B8 04 00 00 00		MOV     EAX, 4
6B C8 03		IMUL    ECX, EAX, 3
8B 44 0D E0		MOV     EAX, [EBP+ECX+VAR_20]
35 69 6E 65 49		XOR     EAX, 49656E69H
0B D0		OR      EDX, EAX
B9 04 00 00 00		MOV     ECX, 4
D1 E1		SHL     ECX, 1
8B 44 0D E0		MOV     EAX, [EBP+ECX+VAR_20]
35 6E 74 65 6C		XOR     EAX, 6C65746EH
0B D0		OR      EDX, EAX
75 09		JNZ     SHORT LOC_14B36
C7 45 D4 01 00 00 00		MOV     [EBP+VAR_2C], 1
EB 07		JMP     SHORT LOC_14B3D
C7 45 D4 00 00 00 00		MOV     [EBP+VAR_2C], 0
8A 4D D4		MOV     CL, BYTE PTR [EBP+VAR_2C]
88 4D DF		MOV     [EBP+VAR_21], CL
8D 75 E0		LEA     ESI, [EBP+VAR_20]
B8 01 00 00 00		MOV     EAX, 1
33 C9		XOR     ECX, ECX
0F A2		CPUID
89 06		MOV     [ESI], EAX
89 5E 04		MOV     [ESI+4], EBX
89 4E 08		MOV     [ESI+8], ECX
89 56 0C		MOV     [ESI+0CH], EDX
BA 04 00 00 00		MOV     EDX, 4
6B C2 00		IMUL    EAX, EDX, 0
8B 4C 05 E0		MOV     ECX, [EBP+EAX+VAR_20]
89 4D D8		MOV     [EBP+VAR_28], ECX
0F B6 55 DF		MOVZX   EDX, [EBP+VAR_21]
85 D2		TEST    EDX, EDX
74 6F		JZ      SHORT LOC_14BE0
8B 45 D8		MOV     EAX, [EBP+VAR_28]
25 F0 3F FF 0F		AND     EAX, 0FFF3FF0H
3D C0 06 01 00		CMP     EAX, 106C0H
74 53		JZ      SHORT LOC_14BD3
8B 4D D8		MOV     ECX, [EBP+VAR_28]
81 E1 F0 3F FF 0F		AND     ECX, 0FFF3FF0H
81 F9 60 06 02 00		CMP     ECX, 20660H
74 42		JZ      SHORT LOC_14BD3
8B 55 D8		MOV     EDX, [EBP+VAR_28]
81 E2 F0 3F FF 0F		AND     EDX, 0FFF3FF0H
81 FA 70 06 02 00		CMP     EDX, 20670H
74 31		JZ      SHORT LOC_14BD3
8B 45 D8		MOV     EAX, [EBP+VAR_28]
25 F0 3F FF 0F		AND     EAX, 0FFF3FF0H
3D 50 06 03 00		CMP     EAX, 30650H
74 22		JZ      SHORT LOC_14BD3
8B 4D D8		MOV     ECX, [EBP+VAR_28]
81 E1 F0 3F FF 0F		AND     ECX, 0FFF3FF0H
81 F9 60 06 03 00		CMP     ECX, 30660H
74 11		JZ      SHORT LOC_14BD3
8B 55 D8		MOV     EDX, [EBP+VAR_28]
81 E2 F0 3F FF 0F		AND     EDX, 0FFF3FF0H
81 FA 70 06 03 00		CMP     EDX, 30670H
75 0D		JNZ     SHORT LOC_14BE0
A1 BC A1 01 00		MOV     EAX, DWORD_1A1BC
83 C8 01		OR      EAX, 1
A3 BC A1 01 00		MOV     DWORD_1A1BC, EAX
B9 04 00 00 00		MOV     ECX, 4
6B D1 03		IMUL    EDX, ECX, 3
B8 04 00 00 00		MOV     EAX, 4
6B C8 00		IMUL    ECX, EAX, 0
8B 54 15 E0		MOV     EDX, [EBP+EDX+VAR_20]
89 54 0D F0		MOV     [EBP+ECX+VAR_10], EDX
B8 04 00 00 00		MOV     EAX, 4
D1 E0		SHL     EAX, 1
B9 04 00 00 00		MOV     ECX, 4
C1 E1 00		SHL     ECX, 0
8B 54 05 E0		MOV     EDX, [EBP+EAX+VAR_20]
89 54 0D F0		MOV     [EBP+ECX+VAR_10], EDX
83 7D C8 07		CMP     [EBP+VAR_38], 7
7C 51		JL      SHORT LOC_14C66
8D 75 E0		LEA     ESI, [EBP+VAR_20]
B8 07 00 00 00		MOV     EAX, 7
33 C9		XOR     ECX, ECX
0F A2		CPUID
89 06		MOV     [ESI], EAX
89 5E 04		MOV     [ESI+4], EBX
89 4E 08		MOV     [ESI+8], ECX
89 56 0C		MOV     [ESI+0CH], EDX
B8 04 00 00 00		MOV     EAX, 4
C1 E0 00		SHL     EAX, 0
B9 04 00 00 00		MOV     ECX, 4
D1 E1		SHL     ECX, 1
8B 54 05 E0		MOV     EDX, [EBP+EAX+VAR_20]
89 54 0D F0		MOV     [EBP+ECX+VAR_10], EDX
B8 04 00 00 00		MOV     EAX, 4
C1 E0 00		SHL     EAX, 0
8B 4C 05 E0		MOV     ECX, [EBP+EAX+VAR_20]
81 E1 00 02 00 00		AND     ECX, 200H
74 0F		JZ      SHORT LOC_14C66
8B 15 BC A1 01 00		MOV     EDX, DWORD_1A1BC
83 CA 02		OR      EDX, 2
89 15 BC A1 01 00		MOV     DWORD_1A1BC, EDX
C7 05 B8 A1 01 00 01 00 00 00		MOV     DWORD_1A1B8, 1
A1 2C A0 01 00		MOV     EAX, DWORD_1A02C
83 C8 02		OR      EAX, 2
A3 2C A0 01 00		MOV     DWORD_1A02C, EAX
B9 04 00 00 00		MOV     ECX, 4
C1 E1 00		SHL     ECX, 0
8B 54 0D F0		MOV     EDX, [EBP+ECX+VAR_10]
81 E2 00 00 10 00		AND     EDX, 100000H
0F 84 0C 01 00 00		JZ      LOC_14DA1
C7 05 B8 A1 01 00 02 00 00 00		MOV     DWORD_1A1B8, 2
A1 2C A0 01 00		MOV     EAX, DWORD_1A02C
83 C8 04		OR      EAX, 4
A3 2C A0 01 00		MOV     DWORD_1A02C, EAX
B9 04 00 00 00		MOV     ECX, 4
C1 E1 00		SHL     ECX, 0
8B 54 0D F0		MOV     EDX, [EBP+ECX+VAR_10]
81 E2 00 00 00 08		AND     EDX, 8000000H
0F 84 DD 00 00 00		JZ      LOC_14DA1
B8 04 00 00 00		MOV     EAX, 4
C1 E0 00		SHL     EAX, 0
8B 4C 05 F0		MOV     ECX, [EBP+EAX+VAR_10]
81 E1 00 00 00 10		AND     ECX, 10000000H
0F 84 C5 00 00 00		JZ      LOC_14DA1
33 C9		XOR     ECX, ECX
0F 01 D0		XGETBV
89 45 CC		MOV     [EBP+VAR_34], EAX
89 55 D0		MOV     [EBP+VAR_30], EDX
8B 55 CC		MOV     EDX, [EBP+VAR_34]
8B 45 D0		MOV     EAX, [EBP+VAR_30]
83 E2 06		AND     EDX, 6
83 E0 00		AND     EAX, 0
89 55 C0		MOV     [EBP+VAR_40], EDX
89 45 C4		MOV     [EBP+VAR_3C], EAX
83 7D C0 06		CMP     [EBP+VAR_40], 6
0F 85 9E 00 00 00		JNZ     LOC_14DA1
83 7D C4 00		CMP     [EBP+VAR_3C], 0
0F 85 94 00 00 00		JNZ     LOC_14DA1
C7 05 B8 A1 01 00 03 00 00 00		MOV     DWORD_1A1B8, 3
8B 0D 2C A0 01 00		MOV     ECX, DWORD_1A02C
83 C9 08		OR      ECX, 8
89 0D 2C A0 01 00		MOV     DWORD_1A02C, ECX
BA 04 00 00 00		MOV     EDX, 4
D1 E2		SHL     EDX, 1
8B 44 15 F0		MOV     EAX, [EBP+EDX+VAR_10]
83 E0 20		AND     EAX, 20H
74 6B		JZ      SHORT LOC_14DA1
C7 05 B8 A1 01 00 05 00 00 00		MOV     DWORD_1A1B8, 5
8B 0D 2C A0 01 00		MOV     ECX, DWORD_1A02C
83 C9 20		OR      ECX, 20H
89 0D 2C A0 01 00		MOV     DWORD_1A02C, ECX
BA 04 00 00 00		MOV     EDX, 4
D1 E2		SHL     EDX, 1
8B 44 15 F0		MOV     EAX, [EBP+EDX+VAR_10]
25 00 00 03 D0		AND     EAX, 0D0030000H
3D 00 00 03 D0		CMP     EAX, 0D0030000H
75 3B		JNZ     SHORT LOC_14DA1
8B 4D CC		MOV     ECX, [EBP+VAR_34]
8B 55 D0		MOV     EDX, [EBP+VAR_30]
81 E1 E0 00 00 00		AND     ECX, 0E0H
83 E2 00		AND     EDX, 0
89 4D B8		MOV     [EBP+VAR_48], ECX
89 55 BC		MOV     [EBP+VAR_44], EDX
81 7D B8 E0 00 00 00		CMP     [EBP+VAR_48], 0E0H
75 1D		JNZ     SHORT LOC_14DA1
83 7D BC 00		CMP     [EBP+VAR_44], 0
75 17		JNZ     SHORT LOC_14DA1
C7 05 B8 A1 01 00 06 00 00 00		MOV     DWORD_1A1B8, 6
A1 2C A0 01 00		MOV     EAX, DWORD_1A02C
83 C8 40		OR      EAX, 40H
A3 2C A0 01 00		MOV     DWORD_1A02C, EAX
33 C0		XOR     EAX, EAX
5E		POP     ESI
5B		POP     EBX
8B 4D FC		MOV     ECX, [EBP+VAR_4]
33 CD		XOR     ECX, EBP; STACKCOOKIE
E8 9B C3 FF FF		CALL    J_@__SECURITY_CHECK_COOKIE@4; __SECURITY_CHECK_COOKIE(X)
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
51		PUSH    ECX
83 3D 30 A0 01 00 00		CMP     DWORD_1A030, 0
74 09		JZ      SHORT LOC_14E96
C7 45 FC 01 00 00 00		MOV     [EBP+VAR_4], 1
EB 07		JMP     SHORT LOC_14E9D
C7 45 FC 00 00 00 00		MOV     [EBP+VAR_4], 0
8B 45 FC		MOV     EAX, [EBP+VAR_4]
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
6A 00		PUSH    0; LPTOPLEVELEXCEPTIONFILTER
FF 15 50 B0 01 00		CALL    DS:__IMP_SETUNHANDLEDEXCEPTIONFILTER
8B 45 08		MOV     EAX, [EBP+EXCEPTIONINFO]
50		PUSH    EAX; EXCEPTIONINFO
FF 15 54 B0 01 00		CALL    DS:__IMP_UNHANDLEDEXCEPTIONFILTER
68 09 04 00 C0		PUSH    0C0000409H; UEXITCODE
FF 15 24 B0 01 00		CALL    DS:__IMP_GETCURRENTPROCESS
50		PUSH    EAX; HPROCESS
FF 15 20 B0 01 00		CALL    DS:__IMP_TERMINATEPROCESS
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 24 03 00 00		SUB     ESP, 324H
6A 17		PUSH    17H; PROCESSORFEATURE
FF 15 48 B0 01 00		CALL    DS:__IMP_ISPROCESSORFEATUREPRESENT
85 C0		TEST    EAX, EAX
74 07		JZ      SHORT LOC_14F0C
B9 02 00 00 00		MOV     ECX, 2
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
A3 C8 A2 01 00		MOV     DWORD_1A2C8, EAX
89 0D C4 A2 01 00		MOV     DWORD_1A2C4, ECX
89 15 C0 A2 01 00		MOV     DWORD_1A2C0, EDX
89 1D BC A2 01 00		MOV     DWORD_1A2BC, EBX
89 35 B8 A2 01 00		MOV     DWORD_1A2B8, ESI
89 3D B4 A2 01 00		MOV     DWORD_1A2B4, EDI
66 8C 15 E0 A2 01 00		MOV     WORD_1A2E0, SS
66 8C 0D D4 A2 01 00		MOV     WORD_1A2D4, CS
66 8C 1D B0 A2 01 00		MOV     WORD_1A2B0, DS
66 8C 05 AC A2 01 00		MOV     WORD_1A2AC, ES
66 8C 25 A8 A2 01 00		MOV     WORD_1A2A8, FS
66 8C 2D A4 A2 01 00		MOV     WORD_1A2A4, GS
9C		PUSHF
8F 05 D8 A2 01 00		POP     DWORD_1A2D8
8B 45 00		MOV     EAX, [EBP+VAR_S0]
A3 CC A2 01 00		MOV     DWORD_1A2CC, EAX
8B 45 04		MOV     EAX, [EBP+4]
A3 D0 A2 01 00		MOV     DWORD_1A2D0, EAX
8D 45 08		LEA     EAX, [EBP+ARG_0]
A3 DC A2 01 00		MOV     DWORD_1A2DC, EAX
8B 85 DC FC FF FF		MOV     EAX, [EBP+VAR_324]
C7 05 18 A2 01 00 01 00 01 00		MOV     DWORD_1A218, 10001H
A1 D0 A2 01 00		MOV     EAX, DWORD_1A2D0
A3 D4 A1 01 00		MOV     DWORD_1A1D4, EAX
C7 05 C8 A1 01 00 09 04 00 C0		MOV     DWORD_1A1C8, 0C0000409H
C7 05 CC A1 01 00 01 00 00 00		MOV     DWORD_1A1CC, 1
C7 05 D8 A1 01 00 01 00 00 00		MOV     DWORD_1A1D8, 1
B9 04 00 00 00		MOV     ECX, 4
6B D1 00		IMUL    EDX, ECX, 0
C7 82 DC A1 01 00 02 00 00 00		MOV     DWORD_1A1DC[EDX], 2
B8 04 00 00 00		MOV     EAX, 4
6B C8 00		IMUL    ECX, EAX, 0
8B 15 20 A0 01 00		MOV     EDX, ___SECURITY_COOKIE
89 54 0D F8		MOV     [EBP+ECX+VAR_8], EDX
B8 04 00 00 00		MOV     EAX, 4
C1 E0 00		SHL     EAX, 0
8B 0D 24 A0 01 00		MOV     ECX, DWORD_1A024
89 4C 05 F8		MOV     [EBP+EAX+VAR_8], ECX
68 54 85 01 00		PUSH    OFFSET EXCEPTIONINFO; EXCEPTIONINFO
E8 CB C3 FF FF		CALL    J____RAISE_SECURITYFAILURE
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
6A 08		PUSH    8
E8 26 C3 FF FF		CALL    J____REPORT_SECURITYFAILURE
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 1C 03 00 00		SUB     ESP, 31CH
6A 17		PUSH    17H; PROCESSORFEATURE
FF 15 48 B0 01 00		CALL    DS:__IMP_ISPROCESSORFEATUREPRESENT
85 C0		TEST    EAX, EAX
74 05		JZ      SHORT LOC_1506A
8B 4D 08		MOV     ECX, [EBP+ARG_0]
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
A3 C8 A2 01 00		MOV     DWORD_1A2C8, EAX
89 0D C4 A2 01 00		MOV     DWORD_1A2C4, ECX
89 15 C0 A2 01 00		MOV     DWORD_1A2C0, EDX
89 1D BC A2 01 00		MOV     DWORD_1A2BC, EBX
89 35 B8 A2 01 00		MOV     DWORD_1A2B8, ESI
89 3D B4 A2 01 00		MOV     DWORD_1A2B4, EDI
66 8C 15 E0 A2 01 00		MOV     WORD_1A2E0, SS
66 8C 0D D4 A2 01 00		MOV     WORD_1A2D4, CS
66 8C 1D B0 A2 01 00		MOV     WORD_1A2B0, DS
66 8C 05 AC A2 01 00		MOV     WORD_1A2AC, ES
66 8C 25 A8 A2 01 00		MOV     WORD_1A2A8, FS
66 8C 2D A4 A2 01 00		MOV     WORD_1A2A4, GS
9C		PUSHF
8F 05 D8 A2 01 00		POP     DWORD_1A2D8
8B 45 00		MOV     EAX, [EBP+VAR_S0]
A3 CC A2 01 00		MOV     DWORD_1A2CC, EAX
8B 45 04		MOV     EAX, [EBP+4]
A3 D0 A2 01 00		MOV     DWORD_1A2D0, EAX
8D 45 08		LEA     EAX, [EBP+ARG_0]
A3 DC A2 01 00		MOV     DWORD_1A2DC, EAX
8B 85 E4 FC FF FF		MOV     EAX, [EBP+VAR_31C]
A1 D0 A2 01 00		MOV     EAX, DWORD_1A2D0
A3 D4 A1 01 00		MOV     DWORD_1A1D4, EAX
C7 05 C8 A1 01 00 09 04 00 C0		MOV     DWORD_1A1C8, 0C0000409H
C7 05 CC A1 01 00 01 00 00 00		MOV     DWORD_1A1CC, 1
C7 05 D8 A1 01 00 01 00 00 00		MOV     DWORD_1A1D8, 1
B9 04 00 00 00		MOV     ECX, 4
6B D1 00		IMUL    EDX, ECX, 0
8B 45 08		MOV     EAX, [EBP+ARG_0]
89 82 DC A1 01 00		MOV     DWORD_1A1DC[EDX], EAX
68 54 85 01 00		PUSH    OFFSET EXCEPTIONINFO; EXCEPTIONINFO
E8 9C C2 FF FF		CALL    J____RAISE_SECURITYFAILURE
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 20 03 00 00		SUB     ESP, 320H
6A 17		PUSH    17H; PROCESSORFEATURE
FF 15 48 B0 01 00		CALL    DS:__IMP_ISPROCESSORFEATUREPRESENT
85 C0		TEST    EAX, EAX
74 05		JZ      SHORT LOC_1517A
8B 4D 08		MOV     ECX, [EBP+ARG_0]
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
A3 C8 A2 01 00		MOV     DWORD_1A2C8, EAX
89 0D C4 A2 01 00		MOV     DWORD_1A2C4, ECX
89 15 C0 A2 01 00		MOV     DWORD_1A2C0, EDX
89 1D BC A2 01 00		MOV     DWORD_1A2BC, EBX
89 35 B8 A2 01 00		MOV     DWORD_1A2B8, ESI
89 3D B4 A2 01 00		MOV     DWORD_1A2B4, EDI
66 8C 15 E0 A2 01 00		MOV     WORD_1A2E0, SS
66 8C 0D D4 A2 01 00		MOV     WORD_1A2D4, CS
66 8C 1D B0 A2 01 00		MOV     WORD_1A2B0, DS
66 8C 05 AC A2 01 00		MOV     WORD_1A2AC, ES
66 8C 25 A8 A2 01 00		MOV     WORD_1A2A8, FS
66 8C 2D A4 A2 01 00		MOV     WORD_1A2A4, GS
9C		PUSHF
8F 05 D8 A2 01 00		POP     DWORD_1A2D8
8B 45 00		MOV     EAX, [EBP+VAR_S0]
A3 CC A2 01 00		MOV     DWORD_1A2CC, EAX
8B 45 04		MOV     EAX, [EBP+4]
A3 D0 A2 01 00		MOV     DWORD_1A2D0, EAX
8D 45 08		LEA     EAX, [EBP+ARG_0]
A3 DC A2 01 00		MOV     DWORD_1A2DC, EAX
8B 85 E0 FC FF FF		MOV     EAX, [EBP+VAR_320]
A1 D0 A2 01 00		MOV     EAX, DWORD_1A2D0
A3 D4 A1 01 00		MOV     DWORD_1A1D4, EAX
C7 05 C8 A1 01 00 09 04 00 C0		MOV     DWORD_1A1C8, 0C0000409H
C7 05 CC A1 01 00 01 00 00 00		MOV     DWORD_1A1CC, 1
83 7D 0C 00		CMP     [EBP+ARG_4], 0
76 0D		JBE     SHORT LOC_1521D
83 7D 10 00		CMP     [EBP+ARG_8], 0
75 07		JNZ     SHORT LOC_1521D
C7 45 0C 00 00 00 00		MOV     [EBP+ARG_4], 0
83 7D 0C 0E		CMP     [EBP+ARG_4], 0EH
76 09		JBE     SHORT LOC_1522C
8B 4D 0C		MOV     ECX, [EBP+ARG_4]
83 E9 01		SUB     ECX, 1
89 4D 0C		MOV     [EBP+ARG_4], ECX
8B 55 0C		MOV     EDX, [EBP+ARG_4]
83 C2 01		ADD     EDX, 1
89 15 D8 A1 01 00		MOV     DWORD_1A1D8, EDX
B8 04 00 00 00		MOV     EAX, 4
6B C8 00		IMUL    ECX, EAX, 0
8B 55 08		MOV     EDX, [EBP+ARG_0]
89 91 DC A1 01 00		MOV     DWORD_1A1DC[ECX], EDX
C7 45 FC 00 00 00 00		MOV     [EBP+VAR_4], 0
EB 09		JMP     SHORT LOC_1525B
8B 45 FC		MOV     EAX, [EBP+VAR_4]
83 C0 01		ADD     EAX, 1
89 45 FC		MOV     [EBP+VAR_4], EAX
8B 4D FC		MOV     ECX, [EBP+VAR_4]
3B 4D 0C		CMP     ECX, [EBP+ARG_4]
73 15		JNB     SHORT LOC_15278
8B 55 FC		MOV     EDX, [EBP+VAR_4]
8B 45 FC		MOV     EAX, [EBP+VAR_4]
8B 4D 10		MOV     ECX, [EBP+ARG_8]
8B 04 81		MOV     EAX, [ECX+EAX*4]
89 04 95 E0 A1 01 00		MOV     DWORD_1A1E0[EDX*4], EAX
EB DA		JMP     SHORT LOC_15252
68 54 85 01 00		PUSH    OFFSET EXCEPTIONINFO; EXCEPTIONINFO
E8 39 C1 FF FF		CALL    J____RAISE_SECURITYFAILURE
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
FF 25 B4 B0 01 00		JMP     DS:__IMP___STD_TYPE_INFO_DESTROY_LIST
FF 25 A8 B0 01 00		JMP     DS:__IMP___CURRENT_EXCEPTION
FF 25 A4 B0 01 00		JMP     DS:__IMP___CURRENT_EXCEPTION_CONTEXT
FF 25 A0 B0 01 00		JMP     DS:__IMP_MEMSET
FF 25 9C B0 01 00		JMP     DS:__IMP__EXCEPT_HANDLER4_COMMON
FF 25 98 B0 01 00		JMP     DS:__IMP___VCRT_GETMODULEFILENAMEW
FF 25 AC B0 01 00		JMP     DS:__IMP___VCRT_GETMODULEHANDLEW
FF 25 B0 B0 01 00		JMP     DS:__IMP___VCRT_LOADLIBRARYEXW
FF 25 80 B1 01 00		JMP     DS:__IMP_PUTS
FF 25 7C B1 01 00		JMP     DS:__IMP_MALLOC
FF 25 78 B1 01 00		JMP     DS:__IMP_STRCPY_S
FF 25 74 B1 01 00		JMP     DS:__IMP_STRNCPY_S
FF 25 70 B1 01 00		JMP     DS:__IMP_STRLEN
FF 25 6C B1 01 00		JMP     DS:__IMP_STRNCMP
FF 25 68 B1 01 00		JMP     DS:__IMP__CRTDBGREPORT
FF 25 64 B1 01 00		JMP     DS:__IMP__CRTDBGREPORTW
FF 25 60 B1 01 00		JMP     DS:__IMP__SEH_FILTER_EXE
FF 25 5C B1 01 00		JMP     DS:__IMP__SET_APP_TYPE
FF 25 58 B1 01 00		JMP     DS:__IMP___SETUSERMATHERR
FF 25 54 B1 01 00		JMP     DS:__IMP__CONFIGURE_NARROW_ARGV
FF 25 50 B1 01 00		JMP     DS:__IMP__INITIALIZE_NARROW_ENVIRONMENT
FF 25 4C B1 01 00		JMP     DS:__IMP__GET_INITIAL_NARROW_ENVIRONMENT
FF 25 48 B1 01 00		JMP     DS:__IMP__INITTERM
FF 25 44 B1 01 00		JMP     DS:__IMP__INITTERM_E
FF 25 40 B1 01 00		JMP     DS:__IMP_EXIT
FF 25 3C B1 01 00		JMP     DS:__IMP__EXIT
FF 25 38 B1 01 00		JMP     DS:__IMP__SET_FMODE
FF 25 34 B1 01 00		JMP     DS:__IMP___P___ARGC
FF 25 30 B1 01 00		JMP     DS:__IMP___P___ARGV
FF 25 2C B1 01 00		JMP     DS:__IMP__CEXIT
FF 25 F8 B0 01 00		JMP     DS:__IMP__C_EXIT
FF 25 28 B1 01 00		JMP     DS:__IMP__REGISTER_THREAD_LOCAL_EXE_ATEXIT_CALLBACK
FF 25 E8 B0 01 00		JMP     DS:__IMP__CONFIGTHREADLOCALE
FF 25 EC B0 01 00		JMP     DS:__IMP__SET_NEW_MODE
FF 25 F0 B0 01 00		JMP     DS:__IMP___P__COMMODE
FF 25 F4 B0 01 00		JMP     DS:__IMP_STRCAT_S
FF 25 84 B1 01 00		JMP     DS:__IMP___STDIO_COMMON_VSPRINTF_S
FF 25 FC B0 01 00		JMP     DS:__IMP__SEH_FILTER_DLL
FF 25 00 B1 01 00		JMP     DS:__IMP__INITIALIZE_ONEXIT_TABLE
FF 25 04 B1 01 00		JMP     DS:__IMP__REGISTER_ONEXIT_FUNCTION
FF 25 08 B1 01 00		JMP     DS:__IMP__EXECUTE_ONEXIT_TABLE
FF 25 0C B1 01 00		JMP     DS:__IMP__CRT_ATEXIT
FF 25 10 B1 01 00		JMP     DS:__IMP__CRT_AT_QUICK_EXIT
FF 25 14 B1 01 00		JMP     DS:__IMP__CONTROLFP_S
FF 25 18 B1 01 00		JMP     DS:__IMP_TERMINATE
FF 25 1C B1 01 00		JMP     DS:__IMP__WMAKEPATH_S
FF 25 20 B1 01 00		JMP     DS:__IMP__WSPLITPATH_S
FF 25 24 B1 01 00		JMP     DS:__IMP_WCSCPY_S
FF 25 3C B0 01 00		JMP     DS:__IMP_GETCURRENTTHREADID
FF 25 04 B0 01 00		JMP     DS:__IMP_ISDEBUGGERPRESENT
FF 25 08 B0 01 00		JMP     DS:__IMP_RAISEEXCEPTION
FF 25 0C B0 01 00		JMP     DS:__IMP_MULTIBYTETOWIDECHAR
FF 25 10 B0 01 00		JMP     DS:__IMP_WIDECHARTOMULTIBYTE
FF 25 14 B0 01 00		JMP     DS:__IMP_QUERYPERFORMANCECOUNTER
FF 25 18 B0 01 00		JMP     DS:__IMP_GETCURRENTPROCESSID
FF 25 1C B0 01 00		JMP     DS:__IMP_GETSYSTEMTIMEASFILETIME
FF 25 58 B0 01 00		JMP     DS:__IMP_INITIALIZESLISTHEAD
FF 25 54 B0 01 00		JMP     DS:__IMP_UNHANDLEDEXCEPTIONFILTER
FF 25 50 B0 01 00		JMP     DS:__IMP_SETUNHANDLEDEXCEPTIONFILTER
FF 25 4C B0 01 00		JMP     DS:__IMP_GETSTARTUPINFOW
FF 25 48 B0 01 00		JMP     DS:__IMP_ISPROCESSORFEATUREPRESENT
FF 25 44 B0 01 00		JMP     DS:__IMP_GETMODULEHANDLEW
FF 25 40 B0 01 00		JMP     DS:__IMP_GETLASTERROR
FF 25 00 B0 01 00		JMP     DS:__IMP_HEAPALLOC
FF 25 38 B0 01 00		JMP     DS:__IMP_HEAPFREE
FF 25 34 B0 01 00		JMP     DS:__IMP_GETPROCESSHEAP
FF 25 30 B0 01 00		JMP     DS:__IMP_VIRTUALQUERY
FF 25 2C B0 01 00		JMP     DS:__IMP_FREELIBRARY
FF 25 28 B0 01 00		JMP     DS:__IMP_GETPROCADDRESS
FF 25 24 B0 01 00		JMP     DS:__IMP_GETCURRENTPROCESS
FF 25 20 B0 01 00		JMP     DS:__IMP_TERMINATEPROCESS
55		PUSH    EBP
8B EC		MOV     EBP, ESP
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
33 C0		XOR     EAX, EAX
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 54		SUB     ESP, 54H
83 3D B8 A1 01 00 01		CMP     DWORD_1A1B8, 1
7D 08		JGE     SHORT LOC_154F7
8B 45 08		MOV     EAX, [EBP+ARG_0]
E9 19 01 00 00		JMP     LOC_15610
81 7D 08 B4 02 00 C0		CMP     [EBP+ARG_0], 0C00002B4H
74 11		JZ      SHORT LOC_15511
81 7D 08 B5 02 00 C0		CMP     [EBP+ARG_0], 0C00002B5H
74 08		JZ      SHORT LOC_15511
8B 45 08		MOV     EAX, [EBP+ARG_0]
E9 FF 00 00 00		JMP     LOC_15610
C7 45 F4 01 00 00 00		MOV     [EBP+VAR_C], 1
C7 45 F0 02 00 00 00		MOV     [EBP+VAR_10], 2
C7 45 EC 04 00 00 00		MOV     [EBP+VAR_14], 4
C7 45 E8 08 00 00 00		MOV     [EBP+VAR_18], 8
C7 45 E4 10 00 00 00		MOV     [EBP+VAR_1C], 10H
C7 45 E0 20 00 00 00		MOV     [EBP+VAR_20], 20H ; ' '
C7 45 DC 3F 00 00 00		MOV     [EBP+VAR_24], 3FH ; '?'
C7 45 D8 80 00 00 00		MOV     [EBP+VAR_28], 80H
C7 45 D4 00 01 00 00		MOV     [EBP+VAR_2C], 100H
C7 45 D0 00 02 00 00		MOV     [EBP+VAR_30], 200H
C7 45 CC 00 04 00 00		MOV     [EBP+VAR_34], 400H
C7 45 C8 00 08 00 00		MOV     [EBP+VAR_38], 800H
C7 45 C4 00 10 00 00		MOV     [EBP+VAR_3C], 1000H
C7 45 C0 81 00 00 00		MOV     [EBP+VAR_40], 81H
C7 45 BC 02 01 00 00		MOV     [EBP+VAR_44], 102H
C7 45 B8 04 02 00 00		MOV     [EBP+VAR_48], 204H
C7 45 B4 08 04 00 00		MOV     [EBP+VAR_4C], 408H
C7 45 B0 10 08 00 00		MOV     [EBP+VAR_50], 810H
C7 45 AC 20 10 00 00		MOV     [EBP+VAR_54], 1020H
0F AE 5D F8		STMXCSR [EBP+VAR_8]
8B 45 F8		MOV     EAX, [EBP+VAR_8]
83 F0 3F		XOR     EAX, 3FH
89 45 FC		MOV     [EBP+VAR_4], EAX
8B 4D FC		MOV     ECX, [EBP+VAR_4]
81 E1 81 00 00 00		AND     ECX, 81H
75 07		JNZ     SHORT LOC_155B5
B8 90 00 00 C0		MOV     EAX, 0C0000090H
EB 5B		JMP     SHORT LOC_15610
8B 55 FC		MOV     EDX, [EBP+VAR_4]
81 E2 04 02 00 00		AND     EDX, 204H
75 07		JNZ     SHORT LOC_155C7
B8 8E 00 00 C0		MOV     EAX, 0C000008EH
EB 49		JMP     SHORT LOC_15610
8B 45 FC		MOV     EAX, [EBP+VAR_4]
25 02 01 00 00		AND     EAX, 102H
75 07		JNZ     SHORT LOC_155D8
B8 90 00 00 C0		MOV     EAX, 0C0000090H
EB 38		JMP     SHORT LOC_15610
8B 4D FC		MOV     ECX, [EBP+VAR_4]
81 E1 08 04 00 00		AND     ECX, 408H
75 07		JNZ     SHORT LOC_155EA
B8 91 00 00 C0		MOV     EAX, 0C0000091H
EB 26		JMP     SHORT LOC_15610
8B 55 FC		MOV     EDX, [EBP+VAR_4]
81 E2 10 08 00 00		AND     EDX, 810H
75 07		JNZ     SHORT LOC_155FC
B8 93 00 00 C0		MOV     EAX, 0C0000093H
EB 14		JMP     SHORT LOC_15610
8B 45 FC		MOV     EAX, [EBP+VAR_4]
25 20 10 00 00		AND     EAX, 1020H
75 07		JNZ     SHORT LOC_1560D
B8 8F 00 00 C0		MOV     EAX, 0C000008FH
EB 03		JMP     SHORT LOC_15610
8B 45 08		MOV     EAX, [EBP+ARG_0]
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
