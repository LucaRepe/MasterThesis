--- new bb --- 
E9 88 12 00 00		JMP     SUB_2292
--- new bb --- 
E9 19 0A 00 00		JMP     ?SET_COMMODE@__SCRT_FILE_POLICY@@SAXXZ; __SCRT_FILE_POLICY::SET_COMMODE(VOID)
--- new bb --- 
E9 E7 1C 00 00		JMP     SUB_2CFB
--- new bb --- 
E9 34 0A 00 00		JMP     START_0
--- new bb --- 
E9 05 18 00 00		JMP     ___REPORT_GSFAILURE
--- new bb --- 
E9 EA 0F 00 00		JMP     SUB_200D
--- new bb --- 
E9 9D 0F 00 00		JMP     NULLSUB_2
--- new bb --- 
E9 2E 19 00 00		JMP     ___REPORT_RANGECHECKFAILURE
--- new bb --- 
E9 D5 0F 00 00		JMP     SUB_2007
--- new bb --- 
E9 3B 15 00 00		JMP     __GUARD_ICALL_CHECKS_ENFORCED
--- new bb --- 
E9 DE 11 00 00		JMP     SUB_221A
--- new bb --- 
E9 D9 0B 00 00		JMP     SUB_1C1A
--- new bb --- 
E9 BB 1C 00 00		JMP     SUB_2D01
--- new bb --- 
E9 CA 13 00 00		JMP     NULLSUB_4
--- new bb --- 
E9 F0 03 00 00		JMP     SUB_1440
--- new bb --- 
E9 23 0F 00 00		JMP     SUB_1F78
--- new bb --- 
E9 68 13 00 00		JMP     UNKNOWN_LIBNAME_2; MICROSOFT VISUALC 14/NET RUNTIME
--- new bb --- 
E9 9C 1C 00 00		JMP     SUB_2CFB
--- new bb --- 
E9 B9 09 00 00		JMP     SUB_1A1D
--- new bb --- 
E9 FE 0A 00 00		JMP     ___SCRT_DLLMAIN_BEFORE_INITIALIZE_C
--- new bb --- 
E9 06 11 00 00		JMP     ___SCRT_GET_SHOW_WINDOW_MODE
--- new bb --- 
E9 ED 12 00 00		JMP     __SEH_EPILOG4
--- new bb --- 
E9 88 12 00 00		JMP     __SEH_PROLOG4
--- new bb --- 
E9 EF 0E 00 00		JMP     __GET_STARTUP_FILE_MODE
--- new bb --- 
E9 2C 0B 00 00		JMP     ___SCRT_DLLMAIN_EXCEPTION_FILTER
--- new bb --- 
E9 DB 0E 00 00		JMP     USERMATHERRORFUNCTION_0
--- new bb --- 
E9 63 0B 00 00		JMP     ___SCRT_DLLMAIN_UNINITIALIZE_C
--- new bb --- 
E9 67 1C 00 00		JMP     SUB_2CF8
--- new bb --- 
E9 D3 0E 00 00		JMP     SUB_1F69
--- new bb --- 
E9 7E 0C 00 00		JMP     ___SCRT_IS_NONWRITABLE_IN_CURRENT_IMAGE
--- new bb --- 
E9 5B 1C 00 00		JMP     SUB_2CFB
--- new bb --- 
E9 46 09 00 00		JMP     J__INITIALIZE_NARROW_ENVIRONMENT
--- new bb --- 
E9 C7 0B 00 00		JMP     ___SCRT_INITIALIZE_ONEXIT_TABLES
--- new bb --- 
E9 83 0A 00 00		JMP     ___SCRT_DLLMAIN_AFTER_INITIALIZE_C
--- new bb --- 
E9 BE 0E 00 00		JMP     SUB_1F72
--- new bb --- 
E9 27 17 00 00		JMP     SUB_27E0
--- new bb --- 
E9 16 0F 00 00		JMP     ___SCRT_INITIALIZE_DEFAULT_LOCAL_STDIO_OPTIONS
--- new bb --- 
E9 0F 0D 00 00		JMP     ___SCRT_RELEASE_STARTUP_LOCK
--- new bb --- 
E9 2E 0D 00 00		JMP     ___SCRT_UNINITIALIZE_CRT
--- new bb --- 
E9 2B 1C 00 00		JMP     SUB_2CF8
--- new bb --- 
E9 F7 11 00 00		JMP     SUB_22C9
--- new bb --- 
E9 FA 16 00 00		JMP     ___SCRT_IS_UCRT_DLL_IN_USE
--- new bb --- 
E9 AC 14 00 00		JMP     SUB_2588
--- new bb --- 
E9 1D 1C 00 00		JMP     SUB_2CFE
--- new bb --- 
E9 86 19 00 00		JMP     ___REPORT_SECURITYFAILUREEX
--- new bb --- 
E9 28 0F 00 00		JMP     ___SCRT_FASTFAIL
--- new bb --- 
E9 11 1C 00 00		JMP     SUB_2D01
--- new bb --- 
E9 96 0D 00 00		JMP     _ATEXIT
--- new bb --- 
E9 F5 12 00 00		JMP     ___CASTGUARD_CHECK_FAILURE_FASTFAIL
--- new bb --- 
E9 31 05 00 00		JMP     SUB_1630
--- new bb --- 
E9 D7 08 00 00		JMP     SUB_19DB
--- new bb --- 
E9 EF 0E 00 00		JMP     SUB_1FF8
--- new bb --- 
E9 1A 0D 00 00		JMP     __ONEXIT
--- new bb --- 
E9 9E 10 00 00		JMP     SUB_21B1
--- new bb --- 
E9 48 0D 00 00		JMP     _AT_QUICK_EXIT
--- new bb --- 
E9 FD 10 00 00		JMP     SUB_221A
--- new bb --- 
E9 56 0A 00 00		JMP     SUB_1B78
--- new bb --- 
E9 DD 1B 00 00		JMP     __FILTER_X86_SSE2_FLOATING_POINT_EXCEPTION_DEFAULT
--- new bb --- 
E9 C9 1B 00 00		JMP     SUB_2CF5
--- new bb --- 
E9 CD 1B 00 00		JMP     SUB_2CFE
--- new bb --- 
E9 BC 1B 00 00		JMP     SUB_2CF2
--- new bb --- 
E9 4C 0E 00 00		JMP     SUB_1F87
--- new bb --- 
E9 5E 0A 00 00		JMP     SUB_1B9E
--- new bb --- 
E9 B0 1B 00 00		JMP     SUB_2CF5
--- new bb --- 
E9 69 12 00 00		JMP     NULLSUB_1
--- new bb --- 
E9 51 05 00 00		JMP     SUB_16A0
--- new bb --- 
E9 21 0E 00 00		JMP     SUB_1F75
--- new bb --- 
E9 5D 10 00 00		JMP     SUB_21B6
--- new bb --- 
E9 C2 02 00 00		JMP     SUB_1420
--- new bb --- 
E9 8F 1B 00 00		JMP     SUB_2CF2
--- new bb --- 
E9 8A 1B 00 00		JMP     SUB_2CF2
--- new bb --- 
E9 91 13 00 00		JMP     NULLSUB_5
--- new bb --- 
E9 F3 0D 00 00		JMP     SUB_1F65
--- new bb --- 
E9 57 12 00 00		JMP     ___CASTGUARD_CHECK_FAILURE_DEBUGBREAK
--- new bb --- 
E9 0C 11 00 00		JMP     SUB_2288
--- new bb --- 
E9 A9 0A 00 00		JMP     ___SCRT_INITIALIZE_CRT
--- new bb --- 
E9 03 13 00 00		JMP     ___CASTGUARD_SLOW_PATH_CHECK_DEBUGBREAK
--- new bb --- 
E9 8D 12 00 00		JMP     SUB_2418
--- new bb --- 
E9 31 13 00 00		JMP     ___CASTGUARD_SLOW_PATH_CHECK_FASTFAIL
--- new bb --- 
E9 60 1B 00 00		JMP     SUB_2CF5
--- new bb --- 
E9 16 03 00 00		JMP     _MAIN_0
--- new bb --- 
E9 9E 08 00 00		JMP     SUB_1A3D
--- new bb --- 
E9 50 09 00 00		JMP     ___SCRT_ACQUIRE_STARTUP_LOCK
--- new bb --- 
E9 ED 0D 00 00		JMP     SUB_1F96
--- new bb --- 
E9 0B 10 00 00		JMP     SUB_21B9
--- new bb --- 
E9 15 0E 00 00		JMP     SUB_1FC8
--- new bb --- 
E9 40 1B 00 00		JMP     SUB_2CF8
--- new bb --- 
E9 60 10 00 00		JMP     ___SCRT_UNHANDLED_EXCEPTION_FILTER@4; __SCRT_UNHANDLED_EXCEPTION_FILTER(X)
--- new bb --- 
E9 F4 11 00 00		JMP     UNKNOWN_LIBNAME_1; MICROSOFT VISUALC 14/NET RUNTIME
--- new bb --- 
E9 F3 04 00 00		JMP     @__CHECKFORDEBUGGERJUSTMYCODE@4; __CHECKFORDEBUGGERJUSTMYCODE(X)
--- new bb --- 
E9 CD 0D 00 00		JMP     __INITIALIZE_DEFAULT_PRECISION
--- new bb --- 
E9 3A 10 00 00		JMP     SUB_220B
--- new bb --- 
E9 2B 13 00 00		JMP     SUB_2501
--- new bb --- 
E9 F3 0D 00 00		JMP     SUB_1FCE
--- new bb --- 
E9 8A 17 00 00		JMP     ___REPORT_SECURITYFAILURE
--- new bb --- 
E9 08 09 00 00		JMP     _NTCURRENTTEB
--- new bb --- 
E9 26 02 00 00		JMP     SUB_1410
--- new bb --- 
E9 D3 0D 00 00		JMP     NULLSUB_3
--- new bb --- 
E9 10 1B 00 00		JMP     __FILTER_X86_SSE2_FLOATING_POINT_EXCEPTION_DEFAULT
--- new bb --- 
E9 0C 0D 00 00		JMP     ___SECURITY_INIT_COOKIE
--- new bb --- 
E9 00 1B 00 00		JMP     SUB_2CFE
--- new bb --- 
E9 EE 15 00 00		JMP     ___RAISE_SECURITYFAILURE
--- new bb --- 
E9 78 02 00 00		JMP     SUB_1480
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
B9 14 80 00 00		MOV     ECX, OFFSET UNK_8014
E8 95 FD FF FF		CALL    J_@__CHECKFORDEBUGGERJUSTMYCODE@4; __CHECKFORDEBUGGERJUSTMYCODE(X)
--- new bb --- 
8B 45 08		MOV     EAX, [EBP+ARG_0]
03 45 0C		ADD     EAX, [EBP+ARG_4]
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
53		PUSH    EBX
68 30 4B 00 00		PUSH    OFFSET BUFFER; "DISASSEMBLY DESYNCHRONIZATION"
FF 15 D4 71 00 00		CALL    DS:__IMP_PUTS
--- new bb --- 
83 C4 04		ADD     ESP, 4
B8 78 56 34 12		MOV     EAX, 12345678H
83 C0 04		ADD     EAX, 4
90		NOP
90		NOP
90		NOP
90		NOP
BB 21 43 65 87		MOV     EBX, 87654321H
83 EB 04		SUB     EBX, 4
8B 45 08		MOV     EAX, [EBP+ARG_0]
03 45 0C		ADD     EAX, [EBP+ARG_4]
5B		POP     EBX
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
B9 14 80 00 00		MOV     ECX, OFFSET UNK_8014
E8 35 FD FF FF		CALL    J_@__CHECKFORDEBUGGERJUSTMYCODE@4; __CHECKFORDEBUGGERJUSTMYCODE(X)
--- new bb --- 
6A 0A		PUSH    0AH
FF 75 08		PUSH    [EBP+ARG_0]
E8 B4 FB FF FF		CALL    SUB_104B
--- new bb --- 
83 C4 08		ADD     ESP, 8
5D		POP     EBP
C3		RETN
--- new bb --- 
56		PUSH    ESI
B9 14 80 00 00		MOV     ECX, OFFSET UNK_8014
E8 07 FD FF FF		CALL    J_@__CHECKFORDEBUGGERJUSTMYCODE@4; __CHECKFORDEBUGGERJUSTMYCODE(X)
--- new bb --- 
8B 35 10 72 00 00		MOV     ESI, DS:__IMP_STRNCPY_S
6A 02		PUSH    2; MAXCOUNT
68 64 4B 00 00		PUSH    OFFSET STR2; "P1"
6A 14		PUSH    14H; SIZEINBYTES
68 80 65 00 00		PUSH    OFFSET STR1; DESTINATION
C7 05 94 65 00 00 00 00 00 00		MOV     DWORD_6594, 0
C7 05 AC 65 00 00 FF FF FF FF		MOV     DWORD_65AC, 0FFFFFFFFH
C7 05 C4 65 00 00 E8 03 00 00		MOV     DWORD_65C4, 3E8H
FF D6		CALL    ESI ; __IMP_STRNCPY_S
--- new bb --- 
6A 02		PUSH    2; MAXCOUNT
68 68 4B 00 00		PUSH    OFFSET AP2; "P2"
6A 14		PUSH    14H; SIZEINBYTES
68 98 65 00 00		PUSH    OFFSET BYTE_6598; DESTINATION
FF D6		CALL    ESI ; __IMP_STRNCPY_S
--- new bb --- 
6A 02		PUSH    2; MAXCOUNT
68 6C 4B 00 00		PUSH    OFFSET AP3; "P3"
6A 14		PUSH    14H; SIZEINBYTES
68 B0 65 00 00		PUSH    OFFSET BYTE_65B0; DESTINATION
FF D6		CALL    ESI ; __IMP_STRNCPY_S
--- new bb --- 
A1 94 65 00 00		MOV     EAX, DWORD_6594
83 C4 30		ADD     ESP, 30H
83 F8 0A		CMP     EAX, 0AH
7D 76		JGE     SHORT LOC_1592
--- new bb --- 
53		PUSH    EBX
8B 1D 14 72 00 00		MOV     EBX, DS:__IMP_STRCPY_S
57		PUSH    EDI
--- new bb --- 
6A 0A		PUSH    0AH
50		PUSH    EAX
E8 1F FB FF FF		CALL    SUB_104B
--- new bb --- 
6A 02		PUSH    2; MAXCOUNT
68 64 4B 00 00		PUSH    OFFSET STR2; "P1"
68 80 65 00 00		PUSH    OFFSET STR1; STR1
A3 94 65 00 00		MOV     DWORD_6594, EAX
FF 15 0C 72 00 00		CALL    DS:__IMP_STRNCMP
--- new bb --- 
83 C4 14		ADD     ESP, 14H
85 C0		TEST    EAX, EAX
75 3C		JNZ     SHORT LOC_1586
--- new bb --- 
6A 0A		PUSH    0AH; SIZE
FF 15 B0 70 00 00		CALL    DS:__IMP_MALLOC
--- new bb --- 
83 C4 04		ADD     ESP, 4
8B F8		MOV     EDI, EAX
33 F6		XOR     ESI, ESI
0F 1F 80 00 00 00 00		NOP     DWORD PTR [EAX+00000000H]
--- new bb --- 
68 54 4B 00 00		PUSH    OFFSET SOURCE; "0X90"
8D 0C 37		LEA     ECX, [EDI+ESI]
6A 05		PUSH    5; SIZEINBYTES
51		PUSH    ECX; DESTINATION
FF D3		CALL    EBX ; __IMP_STRCPY_S
--- new bb --- 
46		INC     ESI
83 C4 0C		ADD     ESP, 0CH
83 FE 09		CMP     ESI, 9
7C EA		JL      SHORT LOC_1560
--- new bb --- 
68 5C 4B 00 00		PUSH    OFFSET A0XC3; "0XC3"
8D 47 0A		LEA     EAX, [EDI+0AH]
6A 05		PUSH    5; SIZEINBYTES
50		PUSH    EAX; DESTINATION
FF D3		CALL    EBX ; __IMP_STRCPY_S
--- new bb --- 
83 C4 0C		ADD     ESP, 0CH
--- new bb --- 
A1 94 65 00 00		MOV     EAX, DWORD_6594
83 F8 0A		CMP     EAX, 0AH
7C 94		JL      SHORT LOC_1524
--- new bb --- 
5F		POP     EDI
5B		POP     EBX
--- new bb --- 
A1 AC 65 00 00		MOV     EAX, DWORD_65AC
5E		POP     ESI
83 F8 FF		CMP     EAX, 0FFFFFFFFH
74 20		JZ      SHORT LOC_15BD
--- new bb --- 
85 C0		TEST    EAX, EAX
74 15		JZ      SHORT LOC_15B6
--- new bb --- 
3D E8 03 00 00		CMP     EAX, 3E8H
74 07		JZ      SHORT LOC_15AF
--- new bb --- 
68 98 4B 00 00		PUSH    OFFSET ANONEOFTHEABOVE; "NONE OF THE ABOVE"
EB 13		JMP     SHORT LOC_15C2
--- new bb --- 
68 88 4B 00 00		PUSH    OFFSET AEQUAL1000; "EQUAL 1000"
EB 0C		JMP     SHORT LOC_15C2
--- new bb --- 
68 70 4B 00 00		PUSH    OFFSET AEQUAL0; "EQUAL 0"
EB 05		JMP     SHORT LOC_15C2
--- new bb --- 
68 7C 4B 00 00		PUSH    OFFSET AEQUAL1; "EQUAL -1"
--- new bb --- 
FF 15 D4 71 00 00		CALL    DS:__IMP_PUTS
--- new bb --- 
83 C4 04		ADD     ESP, 4
6A 14		PUSH    14H
6A 0F		PUSH    0FH
E8 77 FA FF FF		CALL    SUB_104B
--- new bb --- 
83 C4 08		ADD     ESP, 8
33 C0		XOR     EAX, EAX
C3		RETN
--- new bb --- 
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
B9 14 80 00 00		MOV     ECX, OFFSET UNK_8014
E8 85 FB FF FF		CALL    J_@__CHECKFORDEBUGGERJUSTMYCODE@4; __CHECKFORDEBUGGERJUSTMYCODE(X)
--- new bb --- 
6A 0A		PUSH    0AH; SIZE
FF 15 B0 70 00 00		CALL    DS:__IMP_MALLOC
--- new bb --- 
8B 1D 14 72 00 00		MOV     EBX, DS:__IMP_STRCPY_S
83 C4 04		ADD     ESP, 4
8B F8		MOV     EDI, EAX
33 F6		XOR     ESI, ESI
--- new bb --- 
68 54 4B 00 00		PUSH    OFFSET SOURCE; "0X90"
8D 0C 3E		LEA     ECX, [ESI+EDI]
6A 05		PUSH    5; SIZEINBYTES
51		PUSH    ECX; DESTINATION
FF D3		CALL    EBX ; __IMP_STRCPY_S
--- new bb --- 
46		INC     ESI
83 C4 0C		ADD     ESP, 0CH
83 FE 09		CMP     ESI, 9
7C EA		JL      SHORT LOC_1652
--- new bb --- 
68 5C 4B 00 00		PUSH    OFFSET A0XC3; "0XC3"
8D 47 0A		LEA     EAX, [EDI+0AH]
6A 05		PUSH    5; SIZEINBYTES
50		PUSH    EAX; DESTINATION
FF D3		CALL    EBX ; __IMP_STRCPY_S
--- new bb --- 
83 C4 0C		ADD     ESP, 0CH
8D 47 05		LEA     EAX, [EDI+5]
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
B9 14 80 00 00		MOV     ECX, OFFSET UNK_8014
E8 15 FB FF FF		CALL    J_@__CHECKFORDEBUGGERJUSTMYCODE@4; __CHECKFORDEBUGGERJUSTMYCODE(X)
--- new bb --- 
8B 45 08		MOV     EAX, [EBP+ARG_0]
2B 45 0C		SUB     EAX, [EBP+ARG_4]
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
51		PUSH    ECX
51		PUSH    ECX
89 4D FC		MOV     [EBP+VAR_4], ECX
8B 45 FC		MOV     EAX, [EBP+VAR_4]
89 45 F8		MOV     [EBP+VAR_8], EAX
8B 45 FC		MOV     EAX, [EBP+VAR_4]
0F B6 00		MOVZX   EAX, BYTE PTR [EAX]
85 C0		TEST    EAX, EAX
74 18		JZ      SHORT LOCRET_16EA
--- new bb --- 
83 3D F8 65 00 00 00		CMP     DWORD_65F8, 0
74 0F		JZ      SHORT LOCRET_16EA
--- new bb --- 
FF 15 24 70 00 00		CALL    DS:__IMP_GETCURRENTTHREADID
--- new bb --- 
39 05 F8 65 00 00		CMP     DWORD_65F8, EAX
75 01		JNZ     SHORT LOCRET_16EA
--- new bb --- 
90		NOP
--- new bb --- 
C9		LEAVE
C3		RETN
--- new bb --- 
56		PUSH    ESI
6A 01		PUSH    1; TYPE
E8 08 15 00 00		CALL    _SET_APP_TYPE
--- new bb --- 
E8 73 F9 FF FF		CALL    J___GET_STARTUP_FILE_MODE
--- new bb --- 
50		PUSH    EAX; MODE
E8 33 15 00 00		CALL    _SET_FMODE
--- new bb --- 
E8 81 F9 FF FF		CALL    SUB_1091
--- new bb --- 
8B F0		MOV     ESI, EAX
E8 57 15 00 00		CALL    __P__COMMODE
--- new bb --- 
6A 01		PUSH    1
89 30		MOV     [EAX], ESI
E8 85 F9 FF FF		CALL    J____SCRT_INITIALIZE_ONEXIT_TABLES
--- new bb --- 
83 C4 0C		ADD     ESP, 0CH
5E		POP     ESI
84 C0		TEST    AL, AL
74 73		JZ      SHORT LOC_179B
--- new bb --- 
DB E2		FNCLEX
E8 D6 F8 FF FF		CALL    SUB_1005
--- new bb --- 
68 CD 10 00 00		PUSH    OFFSET SUB_10CD; VOID (__CDECL *)()
E8 B7 F9 FF FF		CALL    J__ATEXIT
--- new bb --- 
E8 2F FA FF FF		CALL    SUB_116D
--- new bb --- 
50		PUSH    EAX; MODE
E8 D0 14 00 00		CALL    _CONFIGURE_NARROW_ARGV
--- new bb --- 
59		POP     ECX
59		POP     ECX
85 C0		TEST    EAX, EAX
75 51		JNZ     SHORT LOC_179B
--- new bb --- 
E8 01 F9 FF FF		CALL    SUB_1050
--- new bb --- 
E8 B0 F9 FF FF		CALL    SUB_1104
--- new bb --- 
85 C0		TEST    EAX, EAX
74 0B		JZ      SHORT LOC_1763
--- new bb --- 
68 82 10 00 00		PUSH    OFFSET USERMATHERRORFUNCTION; USERMATHERRORFUNCTION
E8 AC 14 00 00		CALL    __SETUSERMATHERR
--- new bb --- 
59		POP     ECX
--- new bb --- 
E8 82 FA FF FF		CALL    J_NULLSUB_3
--- new bb --- 
E8 B6 F8 FF FF		CALL    J_NULLSUB_2
--- new bb --- 
E8 55 FA FF FF		CALL    J___INITIALIZE_DEFAULT_PRECISION
--- new bb --- 
E8 D8 F9 FF FF		CALL    SUB_114F
--- new bb --- 
50		PUSH    EAX; FLAG
E8 E5 14 00 00		CALL    _CONFIGTHREADLOCALE
--- new bb --- 
59		POP     ECX
E8 21 FA FF FF		CALL    SUB_11A4
--- new bb --- 
84 C0		TEST    AL, AL
74 05		JZ      SHORT LOC_178C
--- new bb --- 
E8 8E 14 00 00		CALL    _INITIALIZE_NARROW_ENVIRONMENT
--- new bb --- 
E8 C3 F9 FF FF		CALL    SUB_1154
--- new bb --- 
E8 78 F9 FF FF		CALL    SUB_110E
--- new bb --- 
85 C0		TEST    EAX, EAX
75 01		JNZ     SHORT LOC_179B
--- new bb --- 
C3		RETN
--- new bb --- 
6A 07		PUSH    7
E8 44 F9 FF FF		CALL    J____SCRT_FASTFAIL
--- new bb --- 
E8 E7 F8 FF FF		CALL    J____SCRT_INITIALIZE_DEFAULT_LOCAL_STDIO_OPTIONS
--- new bb --- 
33 C0		XOR     EAX, EAX
C3		RETN
--- new bb --- 
E8 F0 F9 FF FF		CALL    SUB_11CC
--- new bb --- 
E8 CE F8 FF FF		CALL    SUB_10AF
--- new bb --- 
50		PUSH    EAX; NEWMODE
E8 81 14 00 00		CALL    _SET_NEW_MODE
--- new bb --- 
59		POP     ECX
C3		RETN
--- new bb --- 
E8 02 FA FF FF		CALL    J____SECURITY_INIT_COOKIE
--- new bb --- 
E9 02 00 00 00		JMP     ?__SCRT_COMMON_MAIN_SEH@@YAHXZ; __SCRT_COMMON_MAIN_SEH(VOID)
--- new bb --- 
6A 14		PUSH    14H
68 78 57 00 00		PUSH    OFFSET STRU_5778
E8 6E F8 FF FF		CALL    J___SEH_PROLOG4
--- new bb --- 
6A 01		PUSH    1
E8 70 F9 FF FF		CALL    J____SCRT_INITIALIZE_CRT
--- new bb --- 
59		POP     ECX
84 C0		TEST    AL, AL
0F 84 50 01 00 00		JZ      LOC_1965
--- new bb --- 
32 DB		XOR     BL, BL
88 5D E7		MOV     [EBP+VAR_19], BL
--- new bb --- 
83 65 FC 00		AND     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0
E8 7C F9 FF FF		CALL    J____SCRT_ACQUIRE_STARTUP_LOCK
--- new bb --- 
88 45 DC		MOV     BYTE PTR [EBP+VAR_24], AL
A1 40 61 00 00		MOV     EAX, DWORD_6140
33 C9		XOR     ECX, ECX
41		INC     ECX
3B C1		CMP     EAX, ECX
0F 84 2F 01 00 00		JZ      LOC_1965
--- new bb --- 
85 C0		TEST    EAX, EAX
75 49		JNZ     SHORT LOC_1883
--- new bb --- 
89 0D 40 61 00 00		MOV     DWORD_6140, ECX
68 18 46 00 00		PUSH    OFFSET LAST; LAST
68 0C 43 00 00		PUSH    OFFSET FIRST; FIRST
E8 DD 13 00 00		CALL    _INITTERM_E
--- new bb --- 
59		POP     ECX
59		POP     ECX
85 C0		TEST    EAX, EAX
74 11		JZ      SHORT LOC_1866
--- new bb --- 
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
B8 FF 00 00 00		MOV     EAX, 0FFH
E9 EF 00 00 00		JMP     LOC_1955
--- new bb --- 
68 08 42 00 00		PUSH    OFFSET DWORD_4208; LAST
68 00 40 00 00		PUSH    OFFSET DWORD_4000; FIRST
E8 B1 13 00 00		CALL    _INITTERM
--- new bb --- 
59		POP     ECX
59		POP     ECX
C7 05 40 61 00 00 02 00 00 00		MOV     DWORD_6140, 2
EB 05		JMP     SHORT LOC_1888
--- new bb --- 
8A D9		MOV     BL, CL
88 5D E7		MOV     [EBP+VAR_19], BL
--- new bb --- 
FF 75 DC		PUSH    [EBP+VAR_24]
E8 2E F8 FF FF		CALL    J____SCRT_RELEASE_STARTUP_LOCK
--- new bb --- 
59		POP     ECX
E8 97 F7 FF FF		CALL    SUB_102D
--- new bb --- 
8B F0		MOV     ESI, EAX
33 FF		XOR     EDI, EDI
39 3E		CMP     [ESI], EDI
74 1B		JZ      SHORT LOC_18B9
--- new bb --- 
56		PUSH    ESI
E8 F2 F7 FF FF		CALL    J____SCRT_IS_NONWRITABLE_IN_CURRENT_IMAGE
--- new bb --- 
59		POP     ECX
84 C0		TEST    AL, AL
74 10		JZ      SHORT LOC_18B9
--- new bb --- 
8B 36		MOV     ESI, [ESI]
57		PUSH    EDI
6A 02		PUSH    2
57		PUSH    EDI
8B CE		MOV     ECX, ESI
FF 15 00 90 00 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR
--- new bb --- 
FF D6		CALL    ESI
--- new bb --- 
E8 60 F7 FF FF		CALL    SUB_101E
--- new bb --- 
8B F0		MOV     ESI, EAX
39 3E		CMP     [ESI], EDI
74 13		JZ      SHORT LOC_18D7
--- new bb --- 
56		PUSH    ESI
E8 CC F7 FF FF		CALL    J____SCRT_IS_NONWRITABLE_IN_CURRENT_IMAGE
--- new bb --- 
59		POP     ECX
84 C0		TEST    AL, AL
74 08		JZ      SHORT LOC_18D7
--- new bb --- 
FF 36		PUSH    DWORD PTR [ESI]; CALLBACK
E8 86 13 00 00		CALL    _REGISTER_THREAD_LOCAL_EXE_ATEXIT_CALLBACK
--- new bb --- 
59		POP     ECX
--- new bb --- 
E8 44 13 00 00		CALL    _GET_INITIAL_NARROW_ENVIRONMENT
--- new bb --- 
8B F8		MOV     EDI, EAX
E8 67 13 00 00		CALL    __P___ARGV
--- new bb --- 
8B 30		MOV     ESI, [EAX]
E8 5A 13 00 00		CALL    __P___ARGC
--- new bb --- 
57		PUSH    EDI; ENVP
56		PUSH    ESI; ARGV
FF 30		PUSH    DWORD PTR [EAX]; ARGC
E8 A2 F8 FF FF		CALL    _MAIN
--- new bb --- 
83 C4 0C		ADD     ESP, 0CH
8B F0		MOV     ESI, EAX
E8 AC F8 FF FF		CALL    SUB_11A9
--- new bb --- 
84 C0		TEST    AL, AL
74 6B		JZ      SHORT LOC_196C
--- new bb --- 
84 DB		TEST    BL, BL
75 05		JNZ     SHORT LOC_190A
--- new bb --- 
E8 46 13 00 00		CALL    _CEXIT
--- new bb --- 
6A 00		PUSH    0
6A 01		PUSH    1
E8 B0 F7 FF FF		CALL    J____SCRT_UNINITIALIZE_CRT
--- new bb --- 
59		POP     ECX
59		POP     ECX
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
8B C6		MOV     EAX, ESI
EB 35		JMP     SHORT LOC_1955
--- new bb --- 
8B 4D EC		MOV     ECX, [EBP+MS_EXC.EXC_PTR]
8B 01		MOV     EAX, [ECX]
8B 00		MOV     EAX, [EAX]
89 45 E0		MOV     [EBP+CODE], EAX
51		PUSH    ECX; EXCEPTIONPTR
50		PUSH    EAX; EXCEPTIONNUM
E8 D1 12 00 00		CALL    _SEH_FILTER_EXE
--- new bb --- 
59		POP     ECX
59		POP     ECX
C3		RETN
--- new bb --- 
8B 65 E8		MOV     ESP, [EBP+MS_EXC.OLD_ESP]
E8 6D F8 FF FF		CALL    SUB_11A9
--- new bb --- 
84 C0		TEST    AL, AL
74 32		JZ      SHORT LOC_1972
--- new bb --- 
80 7D E7 00		CMP     [EBP+VAR_19], 0
75 05		JNZ     SHORT LOC_194B
--- new bb --- 
E8 0B 13 00 00		CALL    _C_EXIT
--- new bb --- 
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
8B 45 E0		MOV     EAX, [EBP+CODE]
--- new bb --- 
8B 4D F0		MOV     ECX, [EBP+MS_EXC.REGISTRATION.NEXT]
64 89 0D 00 00 00 00		MOV     LARGE FS:0, ECX
59		POP     ECX
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
C9		LEAVE
C3		RETN
--- new bb --- 
6A 07		PUSH    7
E8 7A F7 FF FF		CALL    J____SCRT_FASTFAIL
--- new bb --- 
56		PUSH    ESI; CODE
E8 C0 12 00 00		CALL    EXIT
--- new bb --- 
FF 75 E0		PUSH    [EBP+CODE]; CODE
E8 BE 12 00 00		CALL    _EXIT
--- new bb --- 
E8 8D F7 FF FF		CALL    SUB_116D
--- new bb --- 
50		PUSH    EAX; MODE
E8 2E 12 00 00		CALL    _CONFIGURE_NARROW_ARGV
--- new bb --- 
59		POP     ECX
C3		RETN
--- new bb --- 
E9 2A 12 00 00		JMP     _INITIALIZE_NARROW_ENVIRONMENT
--- new bb --- 
56		PUSH    ESI
57		PUSH    EDI
E8 29 12 00 00		CALL    _GET_INITIAL_NARROW_ENVIRONMENT
--- new bb --- 
8B F8		MOV     EDI, EAX
E8 4C 12 00 00		CALL    __P___ARGV
--- new bb --- 
8B 30		MOV     ESI, [EAX]
E8 3F 12 00 00		CALL    __P___ARGC
--- new bb --- 
57		PUSH    EDI; ENVP
56		PUSH    ESI; ARGV
FF 30		PUSH    DWORD PTR [EAX]; ARGC
E8 87 F7 FF FF		CALL    _MAIN
--- new bb --- 
83 C4 0C		ADD     ESP, 0CH
5F		POP     EDI
5E		POP     ESI
C3		RETN
--- new bb --- 
6A 01		PUSH    1; TYPE
E8 E4 11 00 00		CALL    _SET_APP_TYPE
--- new bb --- 
59		POP     ECX
C3		RETN
--- new bb --- 
56		PUSH    ESI
E8 63 F6 FF FF		CALL    SUB_1091
--- new bb --- 
8B F0		MOV     ESI, EAX
E8 39 12 00 00		CALL    __P__COMMODE
--- new bb --- 
89 30		MOV     [EAX], ESI
5E		POP     ESI
C3		RETN
--- new bb --- 
E8 36 F6 FF FF		CALL    J___GET_STARTUP_FILE_MODE
--- new bb --- 
50		PUSH    EAX; MODE
E8 F6 11 00 00		CALL    _SET_FMODE
--- new bb --- 
59		POP     ECX
C3		RETN
--- new bb --- 
E8 A2 F7 FF FF		CALL    J____SECURITY_INIT_COOKIE
--- new bb --- 
E9 A2 FD FF FF		JMP     ?__SCRT_COMMON_MAIN_SEH@@YAHXZ; __SCRT_COMMON_MAIN_SEH(VOID)
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
56		PUSH    ESI
8B 48 3C		MOV     ECX, [EAX+3CH]
03 C8		ADD     ECX, EAX
0F B7 41 14		MOVZX   EAX, WORD PTR [ECX+14H]
8D 51 18		LEA     EDX, [ECX+18H]
03 D0		ADD     EDX, EAX
0F B7 41 06		MOVZX   EAX, WORD PTR [ECX+6]
6B F0 28		IMUL    ESI, EAX, 28H ; '('
03 F2		ADD     ESI, EDX
3B D6		CMP     EDX, ESI
74 19		JZ      SHORT LOC_1A94
--- new bb --- 
8B 4D 0C		MOV     ECX, [EBP+ARG_4]
--- new bb --- 
3B 4A 0C		CMP     ECX, [EDX+0CH]
72 0A		JB      SHORT LOC_1A8D
--- new bb --- 
8B 42 08		MOV     EAX, [EDX+8]
03 42 0C		ADD     EAX, [EDX+0CH]
3B C8		CMP     ECX, EAX
72 0C		JB      SHORT LOC_1A99
--- new bb --- 
83 C2 28		ADD     EDX, 28H ; '('
3B D6		CMP     EDX, ESI
75 EA		JNZ     SHORT LOC_1A7E
--- new bb --- 
33 C0		XOR     EAX, EAX
--- new bb --- 
5E		POP     ESI
5D		POP     EBP
C3		RETN
--- new bb --- 
8B C2		MOV     EAX, EDX
EB F9		JMP     SHORT LOC_1A96
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
85 C0		TEST    EAX, EAX
74 25		JZ      SHORT LOC_1ADD
--- new bb --- 
B9 4D 5A 00 00		MOV     ECX, 5A4DH
66 39 08		CMP     [EAX], CX
75 1B		JNZ     SHORT LOC_1ADD
--- new bb --- 
8B 48 3C		MOV     ECX, [EAX+3CH]
03 C8		ADD     ECX, EAX
81 39 50 45 00 00		CMP     DWORD PTR [ECX], 4550H
75 0E		JNZ     SHORT LOC_1ADD
--- new bb --- 
B8 0B 01 00 00		MOV     EAX, 10BH
66 39 41 18		CMP     [ECX+18H], AX
0F 94 C0		SETZ    AL
5D		POP     EBP
C3		RETN
--- new bb --- 
32 C0		XOR     AL, AL
5D		POP     EBP
C3		RETN
--- new bb --- 
64 A1 18 00 00 00		MOV     EAX, LARGE FS:18H
C3		RETN
--- new bb --- 
56		PUSH    ESI
E8 D8 F5 FF FF		CALL    J____SCRT_IS_UCRT_DLL_IN_USE
--- new bb --- 
85 C0		TEST    EAX, EAX
74 20		JZ      SHORT LOC_1B1E
--- new bb --- 
64 A1 18 00 00 00		MOV     EAX, LARGE FS:18H
BE 44 61 00 00		MOV     ESI, OFFSET UNK_6144
8B 50 04		MOV     EDX, [EAX+4]
EB 04		JMP     SHORT LOC_1B12
--- new bb --- 
3B D0		CMP     EDX, EAX
74 10		JZ      SHORT LOC_1B22
--- new bb --- 
33 C0		XOR     EAX, EAX
8B CA		MOV     ECX, EDX
F0 0F B1 0E		LOCK CMPXCHG [ESI], ECX
85 C0		TEST    EAX, EAX
75 F0		JNZ     SHORT LOC_1B0E
--- new bb --- 
32 C0		XOR     AL, AL
5E		POP     ESI
C3		RETN
--- new bb --- 
B0 01		MOV     AL, 1
5E		POP     ESI
C3		RETN
--- new bb --- 
E8 9B F5 FF FF		CALL    J____SCRT_IS_UCRT_DLL_IN_USE
--- new bb --- 
85 C0		TEST    EAX, EAX
74 07		JZ      SHORT LOC_1B42
--- new bb --- 
E8 97 F5 FF FF		CALL    SUB_10D7
--- new bb --- 
EB 18		JMP     SHORT LOC_1B5A
--- new bb --- 
E8 26 F6 FF FF		CALL    SUB_116D
--- new bb --- 
50		PUSH    EAX; MODE
E8 C7 10 00 00		CALL    _CONFIGURE_NARROW_ARGV
--- new bb --- 
59		POP     ECX
85 C0		TEST    EAX, EAX
74 03		JZ      SHORT LOC_1B55
--- new bb --- 
32 C0		XOR     AL, AL
C3		RETN
--- new bb --- 
E8 C0 10 00 00		CALL    _INITIALIZE_NARROW_ENVIRONMENT
--- new bb --- 
B0 01		MOV     AL, 1
C3		RETN
--- new bb --- 
6A 00		PUSH    0
E8 37 F5 FF FF		CALL    J____SCRT_INITIALIZE_ONEXIT_TABLES
--- new bb --- 
84 C0		TEST    AL, AL
59		POP     ECX
0F 95 C0		SETNZ   AL
C3		RETN
--- new bb --- 
E8 AA F5 FF FF		CALL    SUB_1127
--- new bb --- 
84 C0		TEST    AL, AL
75 03		JNZ     SHORT LOC_1B84
--- new bb --- 
32 C0		XOR     AL, AL
C3		RETN
--- new bb --- 
E8 B7 F5 FF FF		CALL    SUB_1140
--- new bb --- 
84 C0		TEST    AL, AL
75 07		JNZ     SHORT LOC_1B94
--- new bb --- 
E8 FA F4 FF FF		CALL    SUB_108C
--- new bb --- 
EB ED		JMP     SHORT LOC_1B81
--- new bb --- 
B0 01		MOV     AL, 1
C3		RETN
--- new bb --- 
E8 25 F5 FF FF		CALL    SUB_10C8
--- new bb --- 
E8 E4 F4 FF FF		CALL    SUB_108C
--- new bb --- 
B0 01		MOV     AL, 1
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 1C F5 FF FF		CALL    J____SCRT_IS_UCRT_DLL_IN_USE
--- new bb --- 
85 C0		TEST    EAX, EAX
75 19		JNZ     SHORT LOC_1BD3
--- new bb --- 
83 7D 0C 01		CMP     [EBP+ARG_4], 1
75 13		JNZ     SHORT LOC_1BD3
--- new bb --- 
FF 75 10		PUSH    [EBP+ARG_8]
8B 4D 14		MOV     ECX, [EBP+ARG_C]
50		PUSH    EAX
FF 75 08		PUSH    [EBP+ARG_0]
FF 15 00 90 00 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR
--- new bb --- 
FF 55 14		CALL    [EBP+ARG_C]
--- new bb --- 
FF 75 1C		PUSH    [EBP+EXCEPTIONPTR]; EXCEPTIONPTR
FF 75 18		PUSH    [EBP+EXCEPTIONNUM]; EXCEPTIONNUM
E8 96 10 00 00		CALL    _SEH_FILTER_DLL
--- new bb --- 
59		POP     ECX
59		POP     ECX
5D		POP     EBP
C3		RETN
--- new bb --- 
E8 DE F4 FF FF		CALL    J____SCRT_IS_UCRT_DLL_IN_USE
--- new bb --- 
85 C0		TEST    EAX, EAX
74 0C		JZ      SHORT LOC_1C04
--- new bb --- 
68 4C 61 00 00		PUSH    OFFSET TABLE; TABLE
E8 84 10 00 00		CALL    _EXECUTE_ONEXIT_TABLE
--- new bb --- 
59		POP     ECX
C3		RETN
--- new bb --- 
E8 E2 F4 FF FF		CALL    SUB_10EB
--- new bb --- 
85 C0		TEST    EAX, EAX
0F 84 3F 10 00 00		JZ      _CEXIT
--- new bb --- 
C3		RETN
--- new bb --- 
6A 00		PUSH    0
E8 D8 F5 FF FF		CALL    SUB_11F9
--- new bb --- 
59		POP     ECX
E9 05 F5 FF FF		JMP     SUB_112C
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 7D 08 00		CMP     [EBP+ARG_0], 0
75 07		JNZ     SHORT LOC_1C3A
--- new bb --- 
C6 05 48 61 00 00 01		MOV     BYTE_6148, 1
--- new bb --- 
E8 98 F4 FF FF		CALL    SUB_10D7
--- new bb --- 
E8 1A F5 FF FF		CALL    SUB_115E
--- new bb --- 
84 C0		TEST    AL, AL
75 04		JNZ     SHORT LOC_1C4C
--- new bb --- 
32 C0		XOR     AL, AL
5D		POP     EBP
C3		RETN
--- new bb --- 
E8 12 F5 FF FF		CALL    SUB_1163
--- new bb --- 
84 C0		TEST    AL, AL
75 0A		JNZ     SHORT LOC_1C5F
--- new bb --- 
6A 00		PUSH    0
E8 B3 F3 FF FF		CALL    SUB_100F
--- new bb --- 
59		POP     ECX
EB E9		JMP     SHORT LOC_1C48
--- new bb --- 
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
80 3D 49 61 00 00 00		CMP     BYTE_6149, 0
74 04		JZ      SHORT LOC_1C81
--- new bb --- 
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
--- new bb --- 
56		PUSH    ESI
8B 75 08		MOV     ESI, [EBP+ARG_0]
85 F6		TEST    ESI, ESI
74 05		JZ      SHORT LOC_1C8E
--- new bb --- 
83 FE 01		CMP     ESI, 1
75 62		JNZ     SHORT LOC_1CF0
--- new bb --- 
E8 3F F4 FF FF		CALL    J____SCRT_IS_UCRT_DLL_IN_USE
--- new bb --- 
85 C0		TEST    EAX, EAX
74 26		JZ      SHORT LOC_1CBD
--- new bb --- 
85 F6		TEST    ESI, ESI
75 22		JNZ     SHORT LOC_1CBD
--- new bb --- 
68 4C 61 00 00		PUSH    OFFSET TABLE; TABLE
E8 D5 0F 00 00		CALL    _INITIALIZE_ONEXIT_TABLE
--- new bb --- 
59		POP     ECX
85 C0		TEST    EAX, EAX
75 0F		JNZ     SHORT LOC_1CB9
--- new bb --- 
68 58 61 00 00		PUSH    OFFSET STRU_6158; TABLE
E8 C6 0F 00 00		CALL    _INITIALIZE_ONEXIT_TABLE
--- new bb --- 
59		POP     ECX
85 C0		TEST    EAX, EAX
74 2B		JZ      SHORT LOC_1CE4
--- new bb --- 
32 C0		XOR     AL, AL
EB 30		JMP     SHORT LOC_1CED
--- new bb --- 
83 C9 FF		OR      ECX, 0FFFFFFFFH
89 0D 4C 61 00 00		MOV     TABLE._FIRST, ECX
89 0D 50 61 00 00		MOV     TABLE._LAST, ECX
89 0D 54 61 00 00		MOV     TABLE._END, ECX
89 0D 58 61 00 00		MOV     STRU_6158._FIRST, ECX
89 0D 5C 61 00 00		MOV     STRU_6158._LAST, ECX
89 0D 60 61 00 00		MOV     STRU_6158._END, ECX
--- new bb --- 
C6 05 49 61 00 00 01		MOV     BYTE_6149, 1
B0 01		MOV     AL, 1
--- new bb --- 
5E		POP     ESI
5D		POP     EBP
C3		RETN
--- new bb --- 
6A 05		PUSH    5
E8 EF F3 FF FF		CALL    J____SCRT_FASTFAIL
--- new bb --- 
6A 08		PUSH    8
68 98 57 00 00		PUSH    OFFSET STRU_5798
E8 4E F3 FF FF		CALL    J___SEH_PROLOG4
--- new bb --- 
83 65 FC 00		AND     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0
B8 4D 5A 00 00		MOV     EAX, 5A4DH
66 39 05 00 00 00 00		CMP     LARGE DS:0, AX
75 5D		JNZ     SHORT LOC_1D94
--- new bb --- 
A1 3C 00 00 00		MOV     EAX, LARGE DS:3CH
81 B8 00 00 00 00 50 45 00 00		CMP     DWORD PTR [EAX+0], 4550H
75 4C		JNZ     SHORT LOC_1D94
--- new bb --- 
B9 0B 01 00 00		MOV     ECX, 10BH
66 39 88 18 00 00 00		CMP     [EAX+18H], CX
75 3E		JNZ     SHORT LOC_1D94
--- new bb --- 
8B 45 08		MOV     EAX, [EBP+ARG_0]
B9 00 00 00 00		MOV     ECX, 0
2B C1		SUB     EAX, ECX
50		PUSH    EAX; UNSIGNED INT
51		PUSH    ECX; UNSIGNED __INT8 *
E8 F2 FC FF FF		CALL    ?FIND_PE_SECTION@@YAPAU_IMAGE_SECTION_HEADER@@QAEI@Z; FIND_PE_SECTION(UCHAR * CONST,UINT)
--- new bb --- 
59		POP     ECX
59		POP     ECX
85 C0		TEST    EAX, EAX
74 27		JZ      SHORT LOC_1D94
--- new bb --- 
83 78 24 00		CMP     DWORD PTR [EAX+24H], 0
7C 21		JL      SHORT LOC_1D94
--- new bb --- 
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
B0 01		MOV     AL, 1
EB 1F		JMP     SHORT LOC_1D9D
--- new bb --- 
8B 45 EC		MOV     EAX, [EBP+MS_EXC.EXC_PTR]
8B 00		MOV     EAX, [EAX]
33 C9		XOR     ECX, ECX
81 38 05 00 00 C0		CMP     DWORD PTR [EAX], 0C0000005H
0F 94 C1		SETZ    CL
8B C1		MOV     EAX, ECX
C3		RETN
--- new bb --- 
8B 65 E8		MOV     ESP, [EBP+MS_EXC.OLD_ESP]
--- new bb --- 
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
32 C0		XOR     AL, AL
--- new bb --- 
8B 4D F0		MOV     ECX, [EBP+MS_EXC.REGISTRATION.NEXT]
64 89 0D 00 00 00 00		MOV     LARGE FS:0, ECX
59		POP     ECX
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
C9		LEAVE
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 F8 F2 FF FF		CALL    J____SCRT_IS_UCRT_DLL_IN_USE
--- new bb --- 
85 C0		TEST    EAX, EAX
74 0F		JZ      SHORT LOC_1DED
--- new bb --- 
80 7D 08 00		CMP     [EBP+ARG_0], 0
75 09		JNZ     SHORT LOC_1DED
--- new bb --- 
33 C0		XOR     EAX, EAX
B9 44 61 00 00		MOV     ECX, OFFSET UNK_6144
87 01		XCHG    EAX, [ECX]
--- new bb --- 
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
80 3D 48 61 00 00 00		CMP     BYTE_6148, 0
74 06		JZ      SHORT LOC_1E08
--- new bb --- 
80 7D 0C 00		CMP     [EBP+ARG_4], 0
75 12		JNZ     SHORT LOC_1E1A
--- new bb --- 
FF 75 08		PUSH    [EBP+ARG_0]
E8 8B F2 FF FF		CALL    SUB_109B
--- new bb --- 
FF 75 08		PUSH    [EBP+ARG_0]
E8 F7 F1 FF FF		CALL    SUB_100F
--- new bb --- 
59		POP     ECX
59		POP     ECX
--- new bb --- 
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 3D 4C 61 00 00 FF		CMP     TABLE._FIRST, 0FFFFFFFFH
FF 75 08		PUSH    [EBP+FUNCTION]; FUNCTION
75 07		JNZ     SHORT LOC_1E3E
--- new bb --- 
E8 50 0E 00 00		CALL    _CRT_ATEXIT
--- new bb --- 
EB 0B		JMP     SHORT LOC_1E49
--- new bb --- 
68 4C 61 00 00		PUSH    OFFSET TABLE; TABLE
E8 38 0E 00 00		CALL    _REGISTER_ONEXIT_FUNCTION
--- new bb --- 
59		POP     ECX
--- new bb --- 
F7 D8		NEG     EAX
59		POP     ECX
1B C0		SBB     EAX, EAX
F7 D0		NOT     EAX
23 45 08		AND     EAX, [EBP+FUNCTION]
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 3D 58 61 00 00 FF		CMP     STRU_6158._FIRST, 0FFFFFFFFH
75 06		JNZ     SHORT LOC_1E72
--- new bb --- 
5D		POP     EBP
E9 20 0E 00 00		JMP     _CRT_AT_QUICK_EXIT
--- new bb --- 
FF 75 08		PUSH    [EBP+FUNCTION]; FUNCTION
68 58 61 00 00		PUSH    OFFSET STRU_6158; TABLE
E8 01 0E 00 00		CALL    _REGISTER_ONEXIT_FUNCTION
--- new bb --- 
59		POP     ECX
59		POP     ECX
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
FF 75 08		PUSH    [EBP+FUNC]; FUNC
E8 73 F2 FF FF		CALL    J___ONEXIT
--- new bb --- 
F7 D8		NEG     EAX
59		POP     ECX
1B C0		SBB     EAX, EAX
F7 D8		NEG     EAX
48		DEC     EAX
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 14		SUB     ESP, 14H
83 65 F4 00		AND     [EBP+SYSTEMTIMEASFILETIME.DWLOWDATETIME], 0
8D 45 F4		LEA     EAX, [EBP+SYSTEMTIMEASFILETIME]
83 65 F8 00		AND     [EBP+SYSTEMTIMEASFILETIME.DWHIGHDATETIME], 0
50		PUSH    EAX; LPSYSTEMTIMEASFILETIME
FF 15 0C 70 00 00		CALL    DS:__IMP_GETSYSTEMTIMEASFILETIME
--- new bb --- 
8B 45 F8		MOV     EAX, [EBP+SYSTEMTIMEASFILETIME.DWHIGHDATETIME]
33 45 F4		XOR     EAX, [EBP+SYSTEMTIMEASFILETIME.DWLOWDATETIME]
89 45 FC		MOV     [EBP+VAR_4], EAX
FF 15 24 70 00 00		CALL    DS:__IMP_GETCURRENTTHREADID
--- new bb --- 
31 45 FC		XOR     [EBP+VAR_4], EAX
FF 15 08 70 00 00		CALL    DS:__IMP_GETCURRENTPROCESSID
--- new bb --- 
31 45 FC		XOR     [EBP+VAR_4], EAX
8D 45 EC		LEA     EAX, [EBP+PERFORMANCECOUNT]
50		PUSH    EAX; LPPERFORMANCECOUNT
FF 15 04 70 00 00		CALL    DS:__IMP_QUERYPERFORMANCECOUNTER
--- new bb --- 
8B 45 F0		MOV     EAX, DWORD PTR [EBP+PERFORMANCECOUNT+4]
8D 4D FC		LEA     ECX, [EBP+VAR_4]
33 45 EC		XOR     EAX, DWORD PTR [EBP+PERFORMANCECOUNT]
33 45 FC		XOR     EAX, [EBP+VAR_4]
33 C1		XOR     EAX, ECX
C9		LEAVE
C3		RETN
--- new bb --- 
8B 0D 14 60 00 00		MOV     ECX, ___SECURITY_COOKIE
56		PUSH    ESI
57		PUSH    EDI
BF 4E E6 40 BB		MOV     EDI, 0BB40E64EH
BE 00 00 FF FF		MOV     ESI, 0FFFF0000H
3B CF		CMP     ECX, EDI
74 04		JZ      SHORT LOC_1F1F
--- new bb --- 
85 CE		TEST    ESI, ECX
75 26		JNZ     SHORT LOC_1F45
--- new bb --- 
E8 81 FF FF FF		CALL    ___GET_ENTROPY
--- new bb --- 
8B C8		MOV     ECX, EAX
3B CF		CMP     ECX, EDI
75 07		JNZ     SHORT LOC_1F31
--- new bb --- 
B9 4F E6 40 BB		MOV     ECX, 0BB40E64FH
EB 0E		JMP     SHORT LOC_1F3F
--- new bb --- 
85 CE		TEST    ESI, ECX
75 0A		JNZ     SHORT LOC_1F3F
--- new bb --- 
0D 11 47 00 00		OR      EAX, 4711H
C1 E0 10		SHL     EAX, 10H
0B C8		OR      ECX, EAX
--- new bb --- 
89 0D 14 60 00 00		MOV     ___SECURITY_COOKIE, ECX
--- new bb --- 
F7 D1		NOT     ECX
5F		POP     EDI
89 0D 18 60 00 00		MOV     DWORD_6018, ECX
5E		POP     ESI
C3		RETN
--- new bb --- 
33 C0		XOR     EAX, EAX
C3		RETN
--- new bb --- 
33 C0		XOR     EAX, EAX
40		INC     EAX
C3		RETN
--- new bb --- 
33 C0		XOR     EAX, EAX
C3		RETN
--- new bb --- 
B8 00 40 00 00		MOV     EAX, 4000H
C3		RETN
--- new bb --- 
33 C0		XOR     EAX, EAX
C3		RETN
--- new bb --- 
33 C0		XOR     EAX, EAX
C3		RETN
--- new bb --- 
68 70 61 00 00		PUSH    OFFSET LISTHEAD; LISTHEAD
FF 15 10 70 00 00		CALL    DS:__IMP_INITIALIZESLISTHEAD
--- new bb --- 
C3		RETN
--- new bb --- 
68 70 61 00 00		PUSH    OFFSET LISTHEAD
E8 35 0C 00 00		CALL    __STD_TYPE_INFO_DESTROY_LIST
--- new bb --- 
59		POP     ECX
C3		RETN
--- new bb --- 
B0 01		MOV     AL, 1
C3		RETN
--- new bb --- 
68 00 00 03 00		PUSH    30000H; MASK
68 00 00 01 00		PUSH    10000H; NEWVALUE
6A 00		PUSH    0; CURRENTSTATE
E8 EE 0C 00 00		CALL    _CONTROLFP_S
--- new bb --- 
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
75 01		JNZ     SHORT LOC_1FB2
--- new bb --- 
C3		RETN
--- new bb --- 
6A 07		PUSH    7
E8 2D F1 FF FF		CALL    J____SCRT_FASTFAIL
--- new bb --- 
C2 00 00		RETN    0
--- new bb --- 
C2 00 00		RETN    0
--- new bb --- 
B8 80 61 00 00		MOV     EAX, OFFSET UNK_6180
C3		RETN
--- new bb --- 
B8 90 61 00 00		MOV     EAX, OFFSET UNK_6190
C3		RETN
--- new bb --- 
E8 D5 F1 FF FF		CALL    SUB_11AE
--- new bb --- 
8B 48 04		MOV     ECX, [EAX+4]
83 08 24		OR      DWORD PTR [EAX], 24H
89 48 04		MOV     [EAX+4], ECX
E8 EF F1 FF FF		CALL    SUB_11D6
--- new bb --- 
8B 48 04		MOV     ECX, [EAX+4]
83 08 02		OR      DWORD PTR [EAX], 2
89 48 04		MOV     [EAX+4], ECX
C3		RETN
--- new bb --- 
33 C0		XOR     EAX, EAX
39 05 04 60 00 00		CMP     DWORD_6004, EAX
0F 94 C0		SETZ    AL
C3		RETN
--- new bb --- 
B8 EC 65 00 00		MOV     EAX, OFFSET UNK_65EC
C3		RETN
--- new bb --- 
B8 E0 65 00 00		MOV     EAX, OFFSET UNK_65E0
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 24 03 00 00		SUB     ESP, 324H
53		PUSH    EBX
6A 17		PUSH    17H; PROCESSORFEATURE
FF 15 20 70 00 00		CALL    DS:__IMP_ISPROCESSORFEATUREPRESENT
--- new bb --- 
85 C0		TEST    EAX, EAX
74 05		JZ      SHORT LOC_202E
--- new bb --- 
8B 4D 08		MOV     ECX, [EBP+ARG_0]
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
--- new bb --- 
6A 03		PUSH    3
E8 42 F1 FF FF		CALL    SUB_1177
--- new bb --- 
C7 04 24 CC 02 00 00		MOV     [ESP+32CH+SIZE], 2CCH; SIZE
8D 85 DC FC FF FF		LEA     EAX, [EBP+VAR_324]
6A 00		PUSH    0; VAL
50		PUSH    EAX; VOID *
E8 8E 0B 00 00		CALL    MEMSET
--- new bb --- 
83 C4 0C		ADD     ESP, 0CH
89 85 8C FD FF FF		MOV     [EBP+VAR_274], EAX
89 8D 88 FD FF FF		MOV     [EBP+VAR_278], ECX
89 95 84 FD FF FF		MOV     [EBP+VAR_27C], EDX
89 9D 80 FD FF FF		MOV     [EBP+VAR_280], EBX
89 B5 7C FD FF FF		MOV     [EBP+VAR_284], ESI
89 BD 78 FD FF FF		MOV     [EBP+VAR_288], EDI
66 8C 95 A4 FD FF FF		MOV     [EBP+VAR_25C], SS
66 8C 8D 98 FD FF FF		MOV     [EBP+VAR_268], CS
66 8C 9D 74 FD FF FF		MOV     [EBP+VAR_28C], DS
66 8C 85 70 FD FF FF		MOV     [EBP+VAR_290], ES
66 8C A5 6C FD FF FF		MOV     [EBP+VAR_294], FS
66 8C AD 68 FD FF FF		MOV     [EBP+VAR_298], GS
9C		PUSHF
8F 85 9C FD FF FF		POP     [EBP+VAR_264]
8B 45 04		MOV     EAX, [EBP+4]
89 85 94 FD FF FF		MOV     [EBP+VAR_26C], EAX
8D 45 04		LEA     EAX, [EBP+4]
89 85 A0 FD FF FF		MOV     [EBP+VAR_260], EAX
C7 85 DC FC FF FF 01 00 01 00		MOV     [EBP+VAR_324], 10001H
8B 40 FC		MOV     EAX, [EAX-4]
6A 50		PUSH    50H ; 'P'; SIZE
89 85 90 FD FF FF		MOV     [EBP+VAR_270], EAX
8D 45 A8		LEA     EAX, [EBP+VAR_58]
6A 00		PUSH    0; VAL
50		PUSH    EAX; VOID *
E8 04 0B 00 00		CALL    MEMSET
--- new bb --- 
8B 45 04		MOV     EAX, [EBP+4]
83 C4 0C		ADD     ESP, 0CH
C7 45 A8 15 00 00 40		MOV     [EBP+VAR_58], 40000015H
C7 45 AC 01 00 00 00		MOV     [EBP+VAR_54], 1
89 45 B4		MOV     [EBP+VAR_4C], EAX
FF 15 30 70 00 00		CALL    DS:__IMP_ISDEBUGGERPRESENT
--- new bb --- 
6A 00		PUSH    0; LPTOPLEVELEXCEPTIONFILTER
8D 58 FF		LEA     EBX, [EAX-1]
F7 DB		NEG     EBX
8D 45 A8		LEA     EAX, [EBP+VAR_58]
89 45 F8		MOV     [EBP+EXCEPTIONINFO.EXCEPTIONRECORD], EAX
8D 85 DC FC FF FF		LEA     EAX, [EBP+VAR_324]
1A DB		SBB     BL, BL
89 45 FC		MOV     [EBP+EXCEPTIONINFO.CONTEXTRECORD], EAX
FE C3		INC     BL
FF 15 28 70 00 00		CALL    DS:__IMP_SETUNHANDLEDEXCEPTIONFILTER
--- new bb --- 
8D 45 F8		LEA     EAX, [EBP+EXCEPTIONINFO]
50		PUSH    EAX; EXCEPTIONINFO
FF 15 2C 70 00 00		CALL    DS:__IMP_UNHANDLEDEXCEPTIONFILTER
--- new bb --- 
85 C0		TEST    EAX, EAX
75 0C		JNZ     SHORT LOC_212B
--- new bb --- 
84 DB		TEST    BL, BL
75 08		JNZ     SHORT LOC_212B
--- new bb --- 
6A 03		PUSH    3
E8 4D F0 FF FF		CALL    SUB_1177
--- new bb --- 
59		POP     ECX
--- new bb --- 
5B		POP     EBX
C9		LEAVE
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 44		SUB     ESP, 44H
6A 44		PUSH    44H ; 'D'; SIZE
8D 45 BC		LEA     EAX, [EBP+STARTUPINFO]
6A 00		PUSH    0; VAL
50		PUSH    EAX; VOID *
E8 51 0A 00 00		CALL    MEMSET
--- new bb --- 
83 C4 0C		ADD     ESP, 0CH
8D 45 BC		LEA     EAX, [EBP+STARTUPINFO]
50		PUSH    EAX; LPSTARTUPINFO
FF 15 00 70 00 00		CALL    DS:__IMP_GETSTARTUPINFOW
--- new bb --- 
F6 45 E8 01		TEST    BYTE PTR [EBP+STARTUPINFO.DWFLAGS], 1
74 06		JZ      SHORT LOC_21A0
--- new bb --- 
0F B7 45 EC		MOVZX   EAX, [EBP+STARTUPINFO.WSHOWWINDOW]
C9		LEAVE
C3		RETN
--- new bb --- 
6A 0A		PUSH    0AH
58		POP     EAX
C9		LEAVE
C3		RETN
--- new bb --- 
E9 81 EE FF FF		JMP     SUB_1037
--- new bb --- 
33 C0		XOR     EAX, EAX
C3		RETN
--- new bb --- 
6A 00		PUSH    0; LPMODULENAME
FF 15 1C 70 00 00		CALL    DS:__IMP_GETMODULEHANDLEW
--- new bb --- 
85 C0		TEST    EAX, EAX
74 33		JZ      SHORT LOC_21F8
--- new bb --- 
B9 4D 5A 00 00		MOV     ECX, 5A4DH
66 39 08		CMP     [EAX], CX
75 29		JNZ     SHORT LOC_21F8
--- new bb --- 
8B 48 3C		MOV     ECX, [EAX+3CH]
03 C8		ADD     ECX, EAX
81 39 50 45 00 00		CMP     DWORD PTR [ECX], 4550H
75 1C		JNZ     SHORT LOC_21F8
--- new bb --- 
B8 0B 01 00 00		MOV     EAX, 10BH
66 39 41 18		CMP     [ECX+18H], AX
75 11		JNZ     SHORT LOC_21F8
--- new bb --- 
83 79 74 0E		CMP     DWORD PTR [ECX+74H], 0EH
76 0B		JBE     SHORT LOC_21F8
--- new bb --- 
83 B9 E8 00 00 00 00		CMP     DWORD PTR [ECX+0E8H], 0
0F 95 C0		SETNZ   AL
C3		RETN
--- new bb --- 
32 C0		XOR     AL, AL
C3		RETN
--- new bb --- 
68 B8 11 00 00		PUSH    OFFSET J____SCRT_UNHANDLED_EXCEPTION_FILTER@4; LPTOPLEVELEXCEPTIONFILTER
FF 15 28 70 00 00		CALL    DS:__IMP_SETUNHANDLEDEXCEPTIONFILTER
--- new bb --- 
C3		RETN
--- new bb --- 
33 C0		XOR     EAX, EAX
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
56		PUSH    ESI
57		PUSH    EDI
8B 7D 08		MOV     EDI, [EBP+ARG_0]
8B 37		MOV     ESI, [EDI]
81 3E 63 73 6D E0		CMP     DWORD PTR [ESI], 0E06D7363H
75 25		JNZ     SHORT LOC_2254
--- new bb --- 
83 7E 10 03		CMP     DWORD PTR [ESI+10H], 3
75 1F		JNZ     SHORT LOC_2254
--- new bb --- 
8B 46 14		MOV     EAX, [ESI+14H]
3D 20 05 93 19		CMP     EAX, 19930520H
74 1D		JZ      SHORT LOC_225C
--- new bb --- 
3D 21 05 93 19		CMP     EAX, 19930521H
74 16		JZ      SHORT LOC_225C
--- new bb --- 
3D 22 05 93 19		CMP     EAX, 19930522H
74 0F		JZ      SHORT LOC_225C
--- new bb --- 
3D 00 40 99 01		CMP     EAX, 1994000H
74 08		JZ      SHORT LOC_225C
--- new bb --- 
5F		POP     EDI
33 C0		XOR     EAX, EAX
5E		POP     ESI
5D		POP     EBP
C2 04 00		RETN    4
--- new bb --- 
E8 6B 09 00 00		CALL    __CURRENT_EXCEPTION
--- new bb --- 
89 30		MOV     [EAX], ESI
8B 77 04		MOV     ESI, [EDI+4]
E8 67 09 00 00		CALL    __CURRENT_EXCEPTION_CONTEXT
--- new bb --- 
89 30		MOV     [EAX], ESI
E8 2C 0A 00 00		CALL    TERMINATE
--- new bb --- 
83 25 9C 61 00 00 00		AND     DWORD_619C, 0
C3		RETN
--- new bb --- 
53		PUSH    EBX
56		PUSH    ESI
BE 68 53 00 00		MOV     ESI, OFFSET UNK_5368
BB 68 54 00 00		MOV     EBX, OFFSET UNK_5468
3B F3		CMP     ESI, EBX
73 19		JNB     SHORT LOC_22BB
--- new bb --- 
57		PUSH    EDI
--- new bb --- 
8B 3E		MOV     EDI, [ESI]
85 FF		TEST    EDI, EDI
74 0A		JZ      SHORT LOC_22B3
--- new bb --- 
8B CF		MOV     ECX, EDI
FF 15 00 90 00 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR
--- new bb --- 
FF D7		CALL    EDI
--- new bb --- 
83 C6 04		ADD     ESI, 4
3B F3		CMP     ESI, EBX
72 E9		JB      SHORT LOC_22A3
--- new bb --- 
5F		POP     EDI
--- new bb --- 
5E		POP     ESI
5B		POP     EBX
C3		RETN
--- new bb --- 
53		PUSH    EBX
56		PUSH    ESI
BE 70 55 00 00		MOV     ESI, OFFSET UNK_5570
BB 70 56 00 00		MOV     EBX, OFFSET UNK_5670
3B F3		CMP     ESI, EBX
73 19		JNB     SHORT LOC_22F2
--- new bb --- 
57		PUSH    EDI
--- new bb --- 
8B 3E		MOV     EDI, [ESI]
85 FF		TEST    EDI, EDI
74 0A		JZ      SHORT LOC_22EA
--- new bb --- 
8B CF		MOV     ECX, EDI
FF 15 00 90 00 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR
--- new bb --- 
FF D7		CALL    EDI
--- new bb --- 
83 C6 04		ADD     ESI, 4
3B F3		CMP     ESI, EBX
72 E9		JB      SHORT LOC_22DA
--- new bb --- 
5F		POP     EDI
--- new bb --- 
5E		POP     ESI
5B		POP     EBX
C3		RETN
--- new bb --- 
68 79 23 00 00		PUSH    OFFSET __EXCEPT_HANDLER4
64 FF 35 00 00 00 00		PUSH    LARGE DWORD PTR FS:0
8B 44 24 10		MOV     EAX, [ESP+8+ARG_4]
89 6C 24 10		MOV     [ESP+8+ARG_4], EBP
8D 6C 24 10		LEA     EBP, [ESP+8+ARG_4]
2B E0		SUB     ESP, EAX
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
A1 14 60 00 00		MOV     EAX, ___SECURITY_COOKIE
31 45 FC		XOR     [EBP-4], EAX
33 C5		XOR     EAX, EBP
50		PUSH    EAX
89 65 E8		MOV     [EBP-18H], ESP
FF 75 F8		PUSH    DWORD PTR [EBP-8]
8B 45 FC		MOV     EAX, [EBP-4]
C7 45 FC FE FF FF FF		MOV     DWORD PTR [EBP-4], 0FFFFFFFEH
89 45 F8		MOV     [EBP-8], EAX
8D 45 F0		LEA     EAX, [EBP-10H]
64 A3 00 00 00 00		MOV     LARGE FS:0, EAX
C3		RETN
--- new bb --- 
8B 4D F0		MOV     ECX, [EBP-10H]
64 89 0D 00 00 00 00		MOV     LARGE FS:0, ECX
59		POP     ECX
5F		POP     EDI
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
8B E5		MOV     ESP, EBP
5D		POP     EBP
51		PUSH    ECX
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
56		PUSH    ESI
8B 75 08		MOV     ESI, [EBP+ARG_0]
FF 36		PUSH    DWORD PTR [ESI]
E8 68 EE FF FF		CALL    J___FILTER_X86_SSE2_FLOATING_POINT_EXCEPTION_DEFAULT
--- new bb --- 
FF 75 14		PUSH    [EBP+ARG_C]
89 06		MOV     [ESI], EAX
FF 75 10		PUSH    [EBP+ARG_8]
FF 75 0C		PUSH    [EBP+ARG_4]
56		PUSH    ESI
68 B4 10 00 00		PUSH    OFFSET SUB_10B4
68 14 60 00 00		PUSH    OFFSET ___SECURITY_COOKIE
E8 3C 08 00 00		CALL    _EXCEPT_HANDLER4_COMMON
--- new bb --- 
83 C4 1C		ADD     ESP, 1CH
5E		POP     ESI
5D		POP     EBP
C3		RETN
--- new bb --- 
C2 00 00		RETN    0
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
8B 00		MOV     EAX, [EAX]
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
8B 00		MOV     EAX, [EAX]
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
BA 40 4E 00 00		MOV     EDX, OFFSET UNK_4E40
B9 80 4F 00 00		MOV     ECX, OFFSET UNK_4F80
2B C2		SUB     EAX, EDX
2B CA		SUB     ECX, EDX
3B C1		CMP     EAX, ECX
77 01		JA      SHORT LOC_23E7
--- new bb --- 
CC		INT     3; TRAP TO DEBUGGER
--- new bb --- 
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
BA 40 4E 00 00		MOV     EDX, OFFSET UNK_4E40
B9 80 4F 00 00		MOV     ECX, OFFSET UNK_4F80
2B C2		SUB     EAX, EDX
2B CA		SUB     ECX, EDX
3B C1		CMP     EAX, ECX
77 05		JA      SHORT LOC_240C
--- new bb --- 
6A 41		PUSH    41H ; 'A'
59		POP     ECX
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
--- new bb --- 
5D		POP     EBP
C3		RETN
--- new bb --- 
C2 00 00		RETN    0
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
BA 40 4E 00 00		MOV     EDX, OFFSET UNK_4E40
B9 80 4F 00 00		MOV     ECX, OFFSET UNK_4F80
2B C2		SUB     EAX, EDX
2B CA		SUB     ECX, EDX
3B C1		CMP     EAX, ECX
77 11		JA      SHORT LOC_2441
--- new bb --- 
83 3D 08 90 00 00 00		CMP     DS:___CASTGUARD_CHECK_FAILURE_OS_HANDLED_FPTR, 0
74 08		JZ      SHORT LOC_2441
--- new bb --- 
A1 08 90 00 00		MOV     EAX, DS:___CASTGUARD_CHECK_FAILURE_OS_HANDLED_FPTR
5D		POP     EBP
FF E0		JMP     EAX
--- new bb --- 
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 3D 08 90 00 00 00		CMP     DS:___CASTGUARD_CHECK_FAILURE_OS_HANDLED_FPTR, 0
74 08		JZ      SHORT LOC_2461
--- new bb --- 
A1 08 90 00 00		MOV     EAX, DS:___CASTGUARD_CHECK_FAILURE_OS_HANDLED_FPTR
5D		POP     EBP
FF E0		JMP     EAX
--- new bb --- 
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
BA 40 4E 00 00		MOV     EDX, OFFSET UNK_4E40
B9 80 4F 00 00		MOV     ECX, OFFSET UNK_4F80
2B C2		SUB     EAX, EDX
2B CA		SUB     ECX, EDX
3B C8		CMP     ECX, EAX
1B C0		SBB     EAX, EAX
40		INC     EAX
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 4D 08		MOV     ECX, [EBP+ARG_0]
8B C1		MOV     EAX, ECX
2B 45 0C		SUB     EAX, [EBP+ARG_4]
2D 00 4E 00 00		SUB     EAX, OFFSET UNK_4E00
83 E8 40		SUB     EAX, 40H ; '@'
3B 45 10		CMP     EAX, [EBP+ARG_8]
76 13		JBE     SHORT LOC_24B4
--- new bb --- 
BA 40 4E 00 00		MOV     EDX, OFFSET UNK_4E40
B8 80 4F 00 00		MOV     EAX, OFFSET UNK_4F80
2B CA		SUB     ECX, EDX
2B C2		SUB     EAX, EDX
3B C8		CMP     ECX, EAX
77 01		JA      SHORT LOC_24B4
--- new bb --- 
CC		INT     3; TRAP TO DEBUGGER
--- new bb --- 
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 4D 08		MOV     ECX, [EBP+ARG_0]
8B C1		MOV     EAX, ECX
2B 45 0C		SUB     EAX, [EBP+ARG_4]
2D 00 4E 00 00		SUB     EAX, OFFSET UNK_4E00
83 E8 40		SUB     EAX, 40H ; '@'
3B 45 10		CMP     EAX, [EBP+ARG_8]
76 17		JBE     SHORT LOC_24F0
--- new bb --- 
BA 40 4E 00 00		MOV     EDX, OFFSET UNK_4E40
B8 80 4F 00 00		MOV     EAX, OFFSET UNK_4F80
2B CA		SUB     ECX, EDX
2B C2		SUB     EAX, EDX
3B C8		CMP     ECX, EAX
77 05		JA      SHORT LOC_24F0
--- new bb --- 
6A 41		PUSH    41H ; 'A'
59		POP     ECX
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
--- new bb --- 
5D		POP     EBP
C3		RETN
--- new bb --- 
C2 00 00		RETN    0
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
2B 45 0C		SUB     EAX, [EBP+ARG_4]
2D 00 4E 00 00		SUB     EAX, OFFSET UNK_4E00
83 E8 40		SUB     EAX, 40H ; '@'
3B 45 10		CMP     EAX, [EBP+ARG_8]
76 29		JBE     SHORT LOC_2540
--- new bb --- 
8B 4D 08		MOV     ECX, [EBP+ARG_0]
BA 40 4E 00 00		MOV     EDX, OFFSET UNK_4E40
B8 80 4F 00 00		MOV     EAX, OFFSET UNK_4F80
2B CA		SUB     ECX, EDX
2B C2		SUB     EAX, EDX
3B C8		CMP     ECX, EAX
77 14		JA      SHORT LOC_2540
--- new bb --- 
83 3D 08 90 00 00 00		CMP     DS:___CASTGUARD_CHECK_FAILURE_OS_HANDLED_FPTR, 0
74 0B		JZ      SHORT LOC_2540
--- new bb --- 
FF 75 08		PUSH    [EBP+ARG_0]
A1 08 90 00 00		MOV     EAX, DS:___CASTGUARD_CHECK_FAILURE_OS_HANDLED_FPTR
FF D0		CALL    EAX ; ___CASTGUARD_CHECK_FAILURE_OS_HANDLED_FPTR
--- new bb --- 
59		POP     ECX
--- new bb --- 
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
2B 45 0C		SUB     EAX, [EBP+ARG_4]
2D 00 4E 00 00		SUB     EAX, OFFSET UNK_4E00
83 E8 40		SUB     EAX, 40H ; '@'
39 45 10		CMP     [EBP+ARG_8], EAX
1B C0		SBB     EAX, EAX
F7 D8		NEG     EAX
5D		POP     EBP
C3		RETN
--- new bb --- 
8B 0D 00 90 00 00		MOV     ECX, DS:___GUARD_CHECK_ICALL_FPTR
33 C0		XOR     EAX, EAX
81 F9 45 11 00 00		CMP     ECX, OFFSET J_NULLSUB_1
0F 95 C0		SETNZ   AL
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 25 A0 61 00 00 00		AND     DWORD_61A0, 0
83 EC 24		SUB     ESP, 24H
83 0D 10 60 00 00 01		OR      DWORD_6010, 1
6A 0A		PUSH    0AH; PROCESSORFEATURE
FF 15 20 70 00 00		CALL    DS:__IMP_ISPROCESSORFEATUREPRESENT
--- new bb --- 
85 C0		TEST    EAX, EAX
0F 84 AC 01 00 00		JZ      LOC_2758
--- new bb --- 
83 65 F0 00		AND     [EBP+VAR_10], 0
33 C0		XOR     EAX, EAX
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
33 C9		XOR     ECX, ECX
8D 7D DC		LEA     EDI, [EBP+VAR_24]
53		PUSH    EBX
0F A2		CPUID
8B F3		MOV     ESI, EBX
5B		POP     EBX
90		NOP
89 07		MOV     [EDI], EAX
89 77 04		MOV     [EDI+4], ESI
89 4F 08		MOV     [EDI+8], ECX
33 C9		XOR     ECX, ECX
89 57 0C		MOV     [EDI+0CH], EDX
8B 45 DC		MOV     EAX, [EBP+VAR_24]
8B 7D E0		MOV     EDI, [EBP+VAR_20]
89 45 F4		MOV     [EBP+VAR_C], EAX
81 F7 47 65 6E 75		XOR     EDI, 756E6547H
8B 45 E8		MOV     EAX, [EBP+VAR_18]
35 69 6E 65 49		XOR     EAX, 49656E69H
89 45 FC		MOV     [EBP+VAR_4], EAX
8B 45 E4		MOV     EAX, [EBP+VAR_1C]
35 6E 74 65 6C		XOR     EAX, 6C65746EH
89 45 F8		MOV     [EBP+VAR_8], EAX
33 C0		XOR     EAX, EAX
40		INC     EAX
53		PUSH    EBX
0F A2		CPUID
8B F3		MOV     ESI, EBX
5B		POP     EBX
90		NOP
8D 5D DC		LEA     EBX, [EBP+VAR_24]
89 03		MOV     [EBX], EAX
8B 45 FC		MOV     EAX, [EBP+VAR_4]
0B 45 F8		OR      EAX, [EBP+VAR_8]
0B C7		OR      EAX, EDI
89 73 04		MOV     [EBX+4], ESI
89 4B 08		MOV     [EBX+8], ECX
89 53 0C		MOV     [EBX+0CH], EDX
75 43		JNZ     SHORT LOC_2658
--- new bb --- 
8B 45 DC		MOV     EAX, [EBP+VAR_24]
25 F0 3F FF 0F		AND     EAX, 0FFF3FF0H
3D C0 06 01 00		CMP     EAX, 106C0H
74 23		JZ      SHORT LOC_2647
--- new bb --- 
3D 60 06 02 00		CMP     EAX, 20660H
74 1C		JZ      SHORT LOC_2647
--- new bb --- 
3D 70 06 02 00		CMP     EAX, 20670H
74 15		JZ      SHORT LOC_2647
--- new bb --- 
3D 50 06 03 00		CMP     EAX, 30650H
74 0E		JZ      SHORT LOC_2647
--- new bb --- 
3D 60 06 03 00		CMP     EAX, 30660H
74 07		JZ      SHORT LOC_2647
--- new bb --- 
3D 70 06 03 00		CMP     EAX, 30670H
75 11		JNZ     SHORT LOC_2658
--- new bb --- 
8B 3D A4 61 00 00		MOV     EDI, DWORD_61A4
83 CF 01		OR      EDI, 1
89 3D A4 61 00 00		MOV     DWORD_61A4, EDI
EB 06		JMP     SHORT LOC_265E
--- new bb --- 
8B 3D A4 61 00 00		MOV     EDI, DWORD_61A4
--- new bb --- 
8B 4D E4		MOV     ECX, [EBP+VAR_1C]
6A 07		PUSH    7
58		POP     EAX
89 4D FC		MOV     [EBP+VAR_4], ECX
39 45 F4		CMP     [EBP+VAR_C], EAX
7C 30		JL      SHORT LOC_269C
--- new bb --- 
33 C9		XOR     ECX, ECX
53		PUSH    EBX
0F A2		CPUID
8B F3		MOV     ESI, EBX
5B		POP     EBX
90		NOP
8D 5D DC		LEA     EBX, [EBP+VAR_24]
89 03		MOV     [EBX], EAX
89 73 04		MOV     [EBX+4], ESI
89 4B 08		MOV     [EBX+8], ECX
8B 4D FC		MOV     ECX, [EBP+VAR_4]
89 53 0C		MOV     [EBX+0CH], EDX
8B 5D E0		MOV     EBX, [EBP+VAR_20]
F7 C3 00 02 00 00		TEST    EBX, 200H
74 0E		JZ      SHORT LOC_269F
--- new bb --- 
83 CF 02		OR      EDI, 2
89 3D A4 61 00 00		MOV     DWORD_61A4, EDI
EB 03		JMP     SHORT LOC_269F
--- new bb --- 
8B 5D F0		MOV     EBX, [EBP+VAR_10]
--- new bb --- 
A1 10 60 00 00		MOV     EAX, DWORD_6010
83 C8 02		OR      EAX, 2
C7 05 A0 61 00 00 01 00 00 00		MOV     DWORD_61A0, 1
A3 10 60 00 00		MOV     DWORD_6010, EAX
F7 C1 00 00 10 00		TEST    ECX, 100000H
0F 84 93 00 00 00		JZ      LOC_2755
--- new bb --- 
83 C8 04		OR      EAX, 4
C7 05 A0 61 00 00 02 00 00 00		MOV     DWORD_61A0, 2
A3 10 60 00 00		MOV     DWORD_6010, EAX
F7 C1 00 00 00 08		TEST    ECX, 8000000H
74 79		JZ      SHORT LOC_2755
--- new bb --- 
F7 C1 00 00 00 10		TEST    ECX, 10000000H
74 71		JZ      SHORT LOC_2755
--- new bb --- 
33 C9		XOR     ECX, ECX
0F 01 D0		XGETBV
89 45 EC		MOV     [EBP+VAR_14], EAX
89 55 F0		MOV     [EBP+VAR_10], EDX
8B 45 EC		MOV     EAX, [EBP+VAR_14]
8B 4D F0		MOV     ECX, [EBP+VAR_10]
6A 06		PUSH    6
5E		POP     ESI
23 C6		AND     EAX, ESI
3B C6		CMP     EAX, ESI
75 57		JNZ     SHORT LOC_2755
--- new bb --- 
A1 10 60 00 00		MOV     EAX, DWORD_6010
83 C8 08		OR      EAX, 8
C7 05 A0 61 00 00 03 00 00 00		MOV     DWORD_61A0, 3
A3 10 60 00 00		MOV     DWORD_6010, EAX
F6 C3 20		TEST    BL, 20H
74 3B		JZ      SHORT LOC_2755
--- new bb --- 
83 C8 20		OR      EAX, 20H
C7 05 A0 61 00 00 05 00 00 00		MOV     DWORD_61A0, 5
A3 10 60 00 00		MOV     DWORD_6010, EAX
B8 00 00 03 D0		MOV     EAX, 0D0030000H
23 D8		AND     EBX, EAX
3B D8		CMP     EBX, EAX
75 1E		JNZ     SHORT LOC_2755
--- new bb --- 
8B 45 EC		MOV     EAX, [EBP+VAR_14]
BA E0 00 00 00		MOV     EDX, 0E0H
8B 4D F0		MOV     ECX, [EBP+VAR_10]
23 C2		AND     EAX, EDX
3B C2		CMP     EAX, EDX
75 0D		JNZ     SHORT LOC_2755
--- new bb --- 
83 0D 10 60 00 00 40		OR      DWORD_6010, 40H
89 35 A0 61 00 00		MOV     DWORD_61A0, ESI
--- new bb --- 
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
--- new bb --- 
33 C0		XOR     EAX, EAX
C9		LEAVE
C3		RETN
--- new bb --- 
33 C0		XOR     EAX, EAX
39 05 20 60 00 00		CMP     DWORD_6020, EAX
0F 95 C0		SETNZ   AL
C3		RETN
--- new bb --- 
3B 0D 14 60 00 00		CMP     ECX, ___SECURITY_COOKIE
75 01		JNZ     SHORT LOC_27E9
--- new bb --- 
C3		RETN
--- new bb --- 
E9 2B E8 FF FF		JMP     J____REPORT_GSFAILURE
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
6A 00		PUSH    0; LPTOPLEVELEXCEPTIONFILTER
FF 15 28 70 00 00		CALL    DS:__IMP_SETUNHANDLEDEXCEPTIONFILTER
--- new bb --- 
FF 75 08		PUSH    [EBP+EXCEPTIONINFO]; EXCEPTIONINFO
FF 15 2C 70 00 00		CALL    DS:__IMP_UNHANDLEDEXCEPTIONFILTER
--- new bb --- 
68 09 04 00 C0		PUSH    0C0000409H; UEXITCODE
FF 15 18 70 00 00		CALL    DS:__IMP_GETCURRENTPROCESS
--- new bb --- 
50		PUSH    EAX; HPROCESS
FF 15 14 70 00 00		CALL    DS:__IMP_TERMINATEPROCESS
--- new bb --- 
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 24 03 00 00		SUB     ESP, 324H
6A 17		PUSH    17H; PROCESSORFEATURE
FF 15 20 70 00 00		CALL    DS:__IMP_ISPROCESSORFEATUREPRESENT
--- new bb --- 
85 C0		TEST    EAX, EAX
74 05		JZ      SHORT LOC_283D
--- new bb --- 
6A 02		PUSH    2
59		POP     ECX
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
--- new bb --- 
A3 B0 62 00 00		MOV     DWORD_62B0, EAX
89 0D AC 62 00 00		MOV     DWORD_62AC, ECX
89 15 A8 62 00 00		MOV     DWORD_62A8, EDX
89 1D A4 62 00 00		MOV     DWORD_62A4, EBX
89 35 A0 62 00 00		MOV     DWORD_62A0, ESI
89 3D 9C 62 00 00		MOV     DWORD_629C, EDI
66 8C 15 C8 62 00 00		MOV     WORD_62C8, SS
66 8C 0D BC 62 00 00		MOV     WORD_62BC, CS
66 8C 1D 98 62 00 00		MOV     WORD_6298, DS
66 8C 05 94 62 00 00		MOV     WORD_6294, ES
66 8C 25 90 62 00 00		MOV     WORD_6290, FS
66 8C 2D 8C 62 00 00		MOV     WORD_628C, GS
9C		PUSHF
8F 05 C0 62 00 00		POP     DWORD_62C0
8B 45 00		MOV     EAX, [EBP+VAR_S0]
A3 B4 62 00 00		MOV     DWORD_62B4, EAX
8B 45 04		MOV     EAX, [EBP+4]
A3 B8 62 00 00		MOV     DWORD_62B8, EAX
8D 45 08		LEA     EAX, [EBP+ARG_0]
A3 C4 62 00 00		MOV     DWORD_62C4, EAX
8B 85 DC FC FF FF		MOV     EAX, [EBP+VAR_324]
C7 05 00 62 00 00 01 00 01 00		MOV     DWORD_6200, 10001H
A1 B8 62 00 00		MOV     EAX, DWORD_62B8
A3 BC 61 00 00		MOV     DWORD_61BC, EAX
C7 05 B0 61 00 00 09 04 00 C0		MOV     DWORD_61B0, 0C0000409H
C7 05 B4 61 00 00 01 00 00 00		MOV     DWORD_61B4, 1
C7 05 C0 61 00 00 01 00 00 00		MOV     DWORD_61C0, 1
6A 04		PUSH    4
58		POP     EAX
6B C0 00		IMUL    EAX, 0
C7 80 C4 61 00 00 02 00 00 00		MOV     DWORD_61C4[EAX], 2
6A 04		PUSH    4
58		POP     EAX
6B C0 00		IMUL    EAX, 0
8B 0D 14 60 00 00		MOV     ECX, ___SECURITY_COOKIE
89 4C 05 F8		MOV     [EBP+EAX+VAR_8], ECX
6A 04		PUSH    4
58		POP     EAX
C1 E0 00		SHL     EAX, 0
8B 0D 18 60 00 00		MOV     ECX, DWORD_6018
89 4C 05 F8		MOV     [EBP+EAX+VAR_8], ECX
68 B0 4B 00 00		PUSH    OFFSET EXCEPTIONINFO; EXCEPTIONINFO
E8 E3 E8 FF FF		CALL    J____RAISE_SECURITYFAILURE
--- new bb --- 
C9		LEAVE
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
6A 08		PUSH    8
E8 76 E8 FF FF		CALL    J____REPORT_SECURITYFAILURE
--- new bb --- 
5D		POP     EBP
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 1C 03 00 00		SUB     ESP, 31CH
6A 17		PUSH    17H; PROCESSORFEATURE
FF 15 20 70 00 00		CALL    DS:__IMP_ISPROCESSORFEATUREPRESENT
--- new bb --- 
85 C0		TEST    EAX, EAX
74 05		JZ      SHORT LOC_2984
--- new bb --- 
8B 4D 08		MOV     ECX, [EBP+ARG_0]
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
--- new bb --- 
A3 B0 62 00 00		MOV     DWORD_62B0, EAX
89 0D AC 62 00 00		MOV     DWORD_62AC, ECX
89 15 A8 62 00 00		MOV     DWORD_62A8, EDX
89 1D A4 62 00 00		MOV     DWORD_62A4, EBX
89 35 A0 62 00 00		MOV     DWORD_62A0, ESI
89 3D 9C 62 00 00		MOV     DWORD_629C, EDI
66 8C 15 C8 62 00 00		MOV     WORD_62C8, SS
66 8C 0D BC 62 00 00		MOV     WORD_62BC, CS
66 8C 1D 98 62 00 00		MOV     WORD_6298, DS
66 8C 05 94 62 00 00		MOV     WORD_6294, ES
66 8C 25 90 62 00 00		MOV     WORD_6290, FS
66 8C 2D 8C 62 00 00		MOV     WORD_628C, GS
9C		PUSHF
8F 05 C0 62 00 00		POP     DWORD_62C0
8B 45 00		MOV     EAX, [EBP+VAR_S0]
A3 B4 62 00 00		MOV     DWORD_62B4, EAX
8B 45 04		MOV     EAX, [EBP+4]
A3 B8 62 00 00		MOV     DWORD_62B8, EAX
8D 45 08		LEA     EAX, [EBP+ARG_0]
A3 C4 62 00 00		MOV     DWORD_62C4, EAX
8B 85 E4 FC FF FF		MOV     EAX, [EBP+VAR_31C]
A1 B8 62 00 00		MOV     EAX, DWORD_62B8
A3 BC 61 00 00		MOV     DWORD_61BC, EAX
C7 05 B0 61 00 00 09 04 00 C0		MOV     DWORD_61B0, 0C0000409H
C7 05 B4 61 00 00 01 00 00 00		MOV     DWORD_61B4, 1
C7 05 C0 61 00 00 01 00 00 00		MOV     DWORD_61C0, 1
6A 04		PUSH    4
58		POP     EAX
6B C0 00		IMUL    EAX, 0
8B 4D 08		MOV     ECX, [EBP+ARG_0]
89 88 C4 61 00 00		MOV     DWORD_61C4[EAX], ECX
68 B0 4B 00 00		PUSH    OFFSET EXCEPTIONINFO; EXCEPTIONINFO
E8 C7 E7 FF FF		CALL    J____RAISE_SECURITYFAILURE
--- new bb --- 
C9		LEAVE
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 20 03 00 00		SUB     ESP, 320H
6A 17		PUSH    17H; PROCESSORFEATURE
FF 15 20 70 00 00		CALL    DS:__IMP_ISPROCESSORFEATUREPRESENT
--- new bb --- 
85 C0		TEST    EAX, EAX
74 05		JZ      SHORT LOC_2A86
--- new bb --- 
8B 4D 08		MOV     ECX, [EBP+ARG_0]
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
--- new bb --- 
A3 B0 62 00 00		MOV     DWORD_62B0, EAX
89 0D AC 62 00 00		MOV     DWORD_62AC, ECX
89 15 A8 62 00 00		MOV     DWORD_62A8, EDX
89 1D A4 62 00 00		MOV     DWORD_62A4, EBX
89 35 A0 62 00 00		MOV     DWORD_62A0, ESI
89 3D 9C 62 00 00		MOV     DWORD_629C, EDI
66 8C 15 C8 62 00 00		MOV     WORD_62C8, SS
66 8C 0D BC 62 00 00		MOV     WORD_62BC, CS
66 8C 1D 98 62 00 00		MOV     WORD_6298, DS
66 8C 05 94 62 00 00		MOV     WORD_6294, ES
66 8C 25 90 62 00 00		MOV     WORD_6290, FS
66 8C 2D 8C 62 00 00		MOV     WORD_628C, GS
9C		PUSHF
8F 05 C0 62 00 00		POP     DWORD_62C0
8B 45 00		MOV     EAX, [EBP+VAR_S0]
A3 B4 62 00 00		MOV     DWORD_62B4, EAX
8B 45 04		MOV     EAX, [EBP+4]
A3 B8 62 00 00		MOV     DWORD_62B8, EAX
8D 45 08		LEA     EAX, [EBP+ARG_0]
A3 C4 62 00 00		MOV     DWORD_62C4, EAX
8B 85 E0 FC FF FF		MOV     EAX, [EBP+VAR_320]
A1 B8 62 00 00		MOV     EAX, DWORD_62B8
A3 BC 61 00 00		MOV     DWORD_61BC, EAX
C7 05 B0 61 00 00 09 04 00 C0		MOV     DWORD_61B0, 0C0000409H
C7 05 B4 61 00 00 01 00 00 00		MOV     DWORD_61B4, 1
83 7D 0C 00		CMP     [EBP+ARG_4], 0
76 0A		JBE     SHORT LOC_2B26
--- new bb --- 
83 7D 10 00		CMP     [EBP+ARG_8], 0
75 04		JNZ     SHORT LOC_2B26
--- new bb --- 
83 65 0C 00		AND     [EBP+ARG_4], 0
--- new bb --- 
83 7D 0C 0E		CMP     [EBP+ARG_4], 0EH
76 07		JBE     SHORT LOC_2B33
--- new bb --- 
8B 45 0C		MOV     EAX, [EBP+ARG_4]
48		DEC     EAX
89 45 0C		MOV     [EBP+ARG_4], EAX
--- new bb --- 
8B 45 0C		MOV     EAX, [EBP+ARG_4]
40		INC     EAX
A3 C0 61 00 00		MOV     DWORD_61C0, EAX
6A 04		PUSH    4
58		POP     EAX
6B C0 00		IMUL    EAX, 0
8B 4D 08		MOV     ECX, [EBP+ARG_0]
89 88 C4 61 00 00		MOV     DWORD_61C4[EAX], ECX
83 65 FC 00		AND     [EBP+VAR_4], 0
EB 07		JMP     SHORT LOC_2B58
--- new bb --- 
8B 45 FC		MOV     EAX, [EBP+VAR_4]
40		INC     EAX
89 45 FC		MOV     [EBP+VAR_4], EAX
--- new bb --- 
8B 45 FC		MOV     EAX, [EBP+VAR_4]
3B 45 0C		CMP     EAX, [EBP+ARG_4]
73 15		JNB     SHORT LOC_2B75
--- new bb --- 
8B 45 FC		MOV     EAX, [EBP+VAR_4]
8B 4D FC		MOV     ECX, [EBP+VAR_4]
8B 55 10		MOV     EDX, [EBP+ARG_8]
8B 0C 8A		MOV     ECX, [EDX+ECX*4]
89 0C 85 C8 61 00 00		MOV     DWORD_61C8[EAX*4], ECX
EB DC		JMP     SHORT LOC_2B51
--- new bb --- 
68 B0 4B 00 00		PUSH    OFFSET EXCEPTIONINFO; EXCEPTIONINFO
E8 7F E6 FF FF		CALL    J____RAISE_SECURITYFAILURE
--- new bb --- 
C9		LEAVE
C3		RETN
--- new bb --- 
FF 25 78 70 00 00		JMP     DS:__IMP___STD_TYPE_INFO_DESTROY_LIST
--- new bb --- 
FF 25 6C 70 00 00		JMP     DS:__IMP___CURRENT_EXCEPTION
--- new bb --- 
FF 25 68 70 00 00		JMP     DS:__IMP___CURRENT_EXCEPTION_CONTEXT
--- new bb --- 
FF 25 70 70 00 00		JMP     DS:__IMP_MEMSET
--- new bb --- 
FF 25 74 70 00 00		JMP     DS:__IMP__EXCEPT_HANDLER4_COMMON
--- new bb --- 
FF 25 D4 71 00 00		JMP     DS:__IMP_PUTS
--- new bb --- 
FF 25 B0 70 00 00		JMP     DS:__IMP_MALLOC
--- new bb --- 
FF 25 14 72 00 00		JMP     DS:__IMP_STRCPY_S
--- new bb --- 
FF 25 10 72 00 00		JMP     DS:__IMP_STRNCPY_S
--- new bb --- 
FF 25 0C 72 00 00		JMP     DS:__IMP_STRNCMP
--- new bb --- 
FF 25 70 71 00 00		JMP     DS:__IMP__SEH_FILTER_EXE
--- new bb --- 
FF 25 6C 71 00 00		JMP     DS:__IMP__SET_APP_TYPE
--- new bb --- 
FF 25 10 71 00 00		JMP     DS:__IMP___SETUSERMATHERR
--- new bb --- 
FF 25 90 71 00 00		JMP     DS:__IMP__CONFIGURE_NARROW_ARGV
--- new bb --- 
FF 25 8C 71 00 00		JMP     DS:__IMP__INITIALIZE_NARROW_ENVIRONMENT
--- new bb --- 
FF 25 88 71 00 00		JMP     DS:__IMP__GET_INITIAL_NARROW_ENVIRONMENT
--- new bb --- 
FF 25 84 71 00 00		JMP     DS:__IMP__INITTERM
--- new bb --- 
FF 25 48 71 00 00		JMP     DS:__IMP__INITTERM_E
--- new bb --- 
FF 25 94 71 00 00		JMP     DS:__IMP_EXIT
--- new bb --- 
FF 25 74 71 00 00		JMP     DS:__IMP__EXIT
--- new bb --- 
FF 25 D8 71 00 00		JMP     DS:__IMP__SET_FMODE
--- new bb --- 
FF 25 50 71 00 00		JMP     DS:__IMP___P___ARGC
--- new bb --- 
FF 25 44 71 00 00		JMP     DS:__IMP___P___ARGV
--- new bb --- 
FF 25 40 71 00 00		JMP     DS:__IMP__CEXIT
--- new bb --- 
FF 25 7C 71 00 00		JMP     DS:__IMP__C_EXIT
--- new bb --- 
FF 25 58 71 00 00		JMP     DS:__IMP__REGISTER_THREAD_LOCAL_EXE_ATEXIT_CALLBACK
--- new bb --- 
FF 25 E0 70 00 00		JMP     DS:__IMP__CONFIGTHREADLOCALE
--- new bb --- 
FF 25 AC 70 00 00		JMP     DS:__IMP__SET_NEW_MODE
--- new bb --- 
FF 25 DC 71 00 00		JMP     DS:__IMP___P__COMMODE
--- new bb --- 
FF 25 4C 71 00 00		JMP     DS:__IMP__SEH_FILTER_DLL
--- new bb --- 
FF 25 80 71 00 00		JMP     DS:__IMP__INITIALIZE_ONEXIT_TABLE
--- new bb --- 
FF 25 54 71 00 00		JMP     DS:__IMP__REGISTER_ONEXIT_FUNCTION
--- new bb --- 
FF 25 78 71 00 00		JMP     DS:__IMP__EXECUTE_ONEXIT_TABLE
--- new bb --- 
FF 25 5C 71 00 00		JMP     DS:__IMP__CRT_ATEXIT
--- new bb --- 
FF 25 60 71 00 00		JMP     DS:__IMP__CRT_AT_QUICK_EXIT
--- new bb --- 
FF 25 64 71 00 00		JMP     DS:__IMP__CONTROLFP_S
--- new bb --- 
FF 25 68 71 00 00		JMP     DS:__IMP_TERMINATE
--- new bb --- 
FF 25 24 70 00 00		JMP     DS:__IMP_GETCURRENTTHREADID
--- new bb --- 
FF 25 04 70 00 00		JMP     DS:__IMP_QUERYPERFORMANCECOUNTER
--- new bb --- 
FF 25 08 70 00 00		JMP     DS:__IMP_GETCURRENTPROCESSID
--- new bb --- 
FF 25 0C 70 00 00		JMP     DS:__IMP_GETSYSTEMTIMEASFILETIME
--- new bb --- 
FF 25 10 70 00 00		JMP     DS:__IMP_INITIALIZESLISTHEAD
--- new bb --- 
FF 25 30 70 00 00		JMP     DS:__IMP_ISDEBUGGERPRESENT
--- new bb --- 
FF 25 2C 70 00 00		JMP     DS:__IMP_UNHANDLEDEXCEPTIONFILTER
--- new bb --- 
FF 25 28 70 00 00		JMP     DS:__IMP_SETUNHANDLEDEXCEPTIONFILTER
--- new bb --- 
FF 25 00 70 00 00		JMP     DS:__IMP_GETSTARTUPINFOW
--- new bb --- 
FF 25 20 70 00 00		JMP     DS:__IMP_ISPROCESSORFEATUREPRESENT
--- new bb --- 
FF 25 1C 70 00 00		JMP     DS:__IMP_GETMODULEHANDLEW
--- new bb --- 
FF 25 18 70 00 00		JMP     DS:__IMP_GETCURRENTPROCESS
--- new bb --- 
FF 25 14 70 00 00		JMP     DS:__IMP_TERMINATEPROCESS
--- new bb --- 
B0 01		MOV     AL, 1
C3		RETN
--- new bb --- 
B0 01		MOV     AL, 1
C3		RETN
--- new bb --- 
B0 01		MOV     AL, 1
C3		RETN
--- new bb --- 
B0 01		MOV     AL, 1
C3		RETN
--- new bb --- 
B0 01		MOV     AL, 1
C3		RETN
--- new bb --- 
33 C0		XOR     EAX, EAX
C3		RETN
--- new bb --- 
55		PUSH    EBP
8B EC		MOV     EBP, ESP
51		PUSH    ECX
83 3D A0 61 00 00 01		CMP     DWORD_61A0, 1
7C 66		JL      SHORT LOC_2D77
--- new bb --- 
81 7D 08 B4 02 00 C0		CMP     [EBP+ARG_0], 0C00002B4H
74 09		JZ      SHORT LOC_2D23
--- new bb --- 
81 7D 08 B5 02 00 C0		CMP     [EBP+ARG_0], 0C00002B5H
75 54		JNZ     SHORT LOC_2D77
--- new bb --- 
0F AE 5D FC		STMXCSR [EBP+VAR_4]
8B 45 FC		MOV     EAX, [EBP+VAR_4]
83 F0 3F		XOR     EAX, 3FH
A8 81		TEST    AL, 81H
74 3F		JZ      SHORT LOC_2D70
--- new bb --- 
A9 04 02 00 00		TEST    EAX, 204H
75 07		JNZ     SHORT LOC_2D3F
--- new bb --- 
B8 8E 00 00 C0		MOV     EAX, 0C000008EH
C9		LEAVE
C3		RETN
--- new bb --- 
A9 02 01 00 00		TEST    EAX, 102H
74 2A		JZ      SHORT LOC_2D70
--- new bb --- 
A9 08 04 00 00		TEST    EAX, 408H
75 07		JNZ     SHORT LOC_2D54
--- new bb --- 
B8 91 00 00 C0		MOV     EAX, 0C0000091H
C9		LEAVE
C3		RETN
--- new bb --- 
A9 10 08 00 00		TEST    EAX, 810H
75 07		JNZ     SHORT LOC_2D62
--- new bb --- 
B8 93 00 00 C0		MOV     EAX, 0C0000093H
C9		LEAVE
C3		RETN
--- new bb --- 
A9 20 10 00 00		TEST    EAX, 1020H
75 0E		JNZ     SHORT LOC_2D77
--- new bb --- 
B8 8F 00 00 C0		MOV     EAX, 0C000008FH
C9		LEAVE
C3		RETN
--- new bb --- 
B8 90 00 00 C0		MOV     EAX, 0C0000090H
C9		LEAVE
C3		RETN
--- new bb --- 
8B 45 08		MOV     EAX, [EBP+ARG_0]
C9		LEAVE
C3		RETN
