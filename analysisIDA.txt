E9 58 13 00 00		JMP     SUB_2362
E9 E9 0A 00 00		JMP     ?SET_COMMODE@__SCRT_FILE_POLICY@@SAXXZ; __SCRT_FILE_POLICY::SET_COMMODE(VOID)
E9 B7 1D 00 00		JMP     SUB_2DCB
E9 04 0B 00 00		JMP     START_0
E9 D5 18 00 00		JMP     ___REPORT_GSFAILURE
E9 BA 10 00 00		JMP     SUB_20DD
E9 6D 10 00 00		JMP     NULLSUB_2
E9 FE 19 00 00		JMP     ___REPORT_RANGECHECKFAILURE
E9 A5 10 00 00		JMP     SUB_20D7
E9 0B 16 00 00		JMP     __GUARD_ICALL_CHECKS_ENFORCED
E9 AE 12 00 00		JMP     SUB_22EA
E9 A9 0C 00 00		JMP     SUB_1CEA
E9 8B 1D 00 00		JMP     SUB_2DD1
E9 9A 14 00 00		JMP     NULLSUB_4
E9 F8 0F 00 00		JMP     SUB_2048
E9 3D 14 00 00		JMP     UNKNOWN_LIBNAME_2; MICROSOFT VISUALC 14/NET RUNTIME
E9 71 1D 00 00		JMP     SUB_2DCB
E9 8E 0A 00 00		JMP     SUB_1AED
E9 D3 0B 00 00		JMP     ___SCRT_DLLMAIN_BEFORE_INITIALIZE_C
E9 DB 11 00 00		JMP     ___SCRT_GET_SHOW_WINDOW_MODE
E9 C2 13 00 00		JMP     __SEH_EPILOG4
E9 5D 13 00 00		JMP     __SEH_PROLOG4
E9 C4 0F 00 00		JMP     __GET_STARTUP_FILE_MODE
E9 01 0C 00 00		JMP     ___SCRT_DLLMAIN_EXCEPTION_FILTER
E9 B0 0F 00 00		JMP     USERMATHERRORFUNCTION_0
E9 38 0C 00 00		JMP     ___SCRT_DLLMAIN_UNINITIALIZE_C
E9 3C 1D 00 00		JMP     SUB_2DC8
E9 A8 0F 00 00		JMP     SUB_2039
E9 53 0D 00 00		JMP     ___SCRT_IS_NONWRITABLE_IN_CURRENT_IMAGE
E9 30 1D 00 00		JMP     SUB_2DCB
E9 1B 0A 00 00		JMP     J__INITIALIZE_NARROW_ENVIRONMENT
E9 9C 0C 00 00		JMP     ___SCRT_INITIALIZE_ONEXIT_TABLES
E9 58 0B 00 00		JMP     ___SCRT_DLLMAIN_AFTER_INITIALIZE_C
E9 93 0F 00 00		JMP     SUB_2042
E9 FC 17 00 00		JMP     SUB_28B0
E9 EB 0F 00 00		JMP     ___SCRT_INITIALIZE_DEFAULT_LOCAL_STDIO_OPTIONS
E9 E4 0D 00 00		JMP     ___SCRT_RELEASE_STARTUP_LOCK
E9 03 0E 00 00		JMP     ___SCRT_UNINITIALIZE_CRT
E9 00 1D 00 00		JMP     SUB_2DC8
E9 CC 12 00 00		JMP     SUB_2399
E9 CF 17 00 00		JMP     ___SCRT_IS_UCRT_DLL_IN_USE
E9 81 15 00 00		JMP     SUB_2658
E9 F2 1C 00 00		JMP     SUB_2DCE
E9 5B 1A 00 00		JMP     ___REPORT_SECURITYFAILUREEX
E9 FD 0F 00 00		JMP     ___SCRT_FASTFAIL
E9 E6 1C 00 00		JMP     SUB_2DD1
E9 6B 0E 00 00		JMP     _ATEXIT
E9 CA 13 00 00		JMP     ___CASTGUARD_CHECK_FAILURE_FASTFAIL
E9 06 06 00 00		JMP     SUB_1700
E9 AC 09 00 00		JMP     SUB_1AAB
E9 C4 0F 00 00		JMP     SUB_20C8
E9 EF 0D 00 00		JMP     __ONEXIT
E9 73 11 00 00		JMP     SUB_2281
E9 1D 0E 00 00		JMP     _AT_QUICK_EXIT
E9 D2 11 00 00		JMP     SUB_22EA
E9 2B 0B 00 00		JMP     SUB_1C48
E9 B2 1C 00 00		JMP     __FILTER_X86_SSE2_FLOATING_POINT_EXCEPTION_DEFAULT
E9 9E 1C 00 00		JMP     SUB_2DC5
E9 A2 1C 00 00		JMP     SUB_2DCE
E9 91 1C 00 00		JMP     SUB_2DC2
E9 21 0F 00 00		JMP     SUB_2057
E9 33 0B 00 00		JMP     SUB_1C6E
E9 85 1C 00 00		JMP     SUB_2DC5
E9 3E 13 00 00		JMP     NULLSUB_1
E9 26 06 00 00		JMP     SUB_1770
E9 F6 0E 00 00		JMP     SUB_2045
E9 32 11 00 00		JMP     SUB_2286
E9 C7 02 00 00		JMP     SUB_1420
E9 64 1C 00 00		JMP     SUB_2DC2
E9 5F 1C 00 00		JMP     SUB_2DC2
E9 66 14 00 00		JMP     NULLSUB_5
E9 C8 0E 00 00		JMP     SUB_2035
E9 2C 13 00 00		JMP     ___CASTGUARD_CHECK_FAILURE_DEBUGBREAK
E9 E1 11 00 00		JMP     SUB_2358
E9 7E 0B 00 00		JMP     ___SCRT_INITIALIZE_CRT
E9 D8 13 00 00		JMP     ___CASTGUARD_SLOW_PATH_CHECK_DEBUGBREAK
E9 62 13 00 00		JMP     SUB_24E8
E9 06 14 00 00		JMP     ___CASTGUARD_SLOW_PATH_CHECK_FASTFAIL
E9 35 1C 00 00		JMP     SUB_2DC5
E9 5B 03 00 00		JMP     _MAIN_0
E9 73 09 00 00		JMP     SUB_1B0D
E9 25 0A 00 00		JMP     ___SCRT_ACQUIRE_STARTUP_LOCK
E9 C2 0E 00 00		JMP     SUB_2066
E9 E0 10 00 00		JMP     SUB_2289
E9 EA 0E 00 00		JMP     SUB_2098
E9 15 1C 00 00		JMP     SUB_2DC8
E9 35 11 00 00		JMP     ___SCRT_UNHANDLED_EXCEPTION_FILTER@4; __SCRT_UNHANDLED_EXCEPTION_FILTER(X)
E9 C9 12 00 00		JMP     UNKNOWN_LIBNAME_1; MICROSOFT VISUALC 14/NET RUNTIME
E9 C8 05 00 00		JMP     @__CHECKFORDEBUGGERJUSTMYCODE@4; __CHECKFORDEBUGGERJUSTMYCODE(X)
E9 A2 0E 00 00		JMP     __INITIALIZE_DEFAULT_PRECISION
E9 0F 11 00 00		JMP     SUB_22DB
E9 00 14 00 00		JMP     SUB_25D1
E9 C8 0E 00 00		JMP     SUB_209E
E9 5F 18 00 00		JMP     ___REPORT_SECURITYFAILURE
E9 DD 09 00 00		JMP     _NTCURRENTTEB
E9 2B 02 00 00		JMP     SUB_1410
E9 A8 0E 00 00		JMP     NULLSUB_3
E9 E5 1B 00 00		JMP     __FILTER_X86_SSE2_FLOATING_POINT_EXCEPTION_DEFAULT
E9 E1 0D 00 00		JMP     ___SECURITY_INIT_COOKIE
E9 47 02 00 00		JMP     SUB_1440
E9 D0 1B 00 00		JMP     SUB_2DCE
E9 BE 16 00 00		JMP     ___RAISE_SECURITYFAILURE
E9 88 02 00 00		JMP     SUB_1490
55		PUSH    EBP
8B EC		MOV     EBP, ESP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
B9 14 80 00 00		MOV     ECX, OFFSET UNK_8014
E8 90 FD FF FF		CALL    J_@__CHECKFORDEBUGGERJUSTMYCODE@4; __CHECKFORDEBUGGERJUSTMYCODE(X)
8B 45 08		MOV     EAX, [EBP+ARG_0]
03 45 0C		ADD     EAX, [EBP+ARG_4]
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
51		PUSH    ECX
68 30 4B 00 00		PUSH    OFFSET BUFFER; "DYNAMICALLY COMPUTED TARGET ADDRESS"
FF 15 D4 71 00 00		CALL    DS:__IMP_PUTS
6A 08		PUSH    8; SIZE
FF 15 B0 70 00 00		CALL    DS:__IMP_MALLOC
8B C8		MOV     ECX, EAX
83 C4 08		ADD     ESP, 8
B8 F4 11 00 00		MOV     EAX, OFFSET SUB_11F4
89 4D FC		MOV     [EBP+VAR_4], ECX
99		CDQ
83 C0 04		ADD     EAX, 4
89 01		MOV     [ECX], EAX
83 D2 00		ADC     EDX, 0
89 51 04		MOV     [ECX+4], EDX
8B 45 FC		MOV     EAX, [EBP+VAR_4]
FF D0		CALL    EAX
8B 45 08		MOV     EAX, [EBP+ARG_0]
03 45 0C		ADD     EAX, [EBP+ARG_4]
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
51		PUSH    ECX
B9 14 80 00 00		MOV     ECX, OFFSET UNK_8014
E8 1F FD FF FF		CALL    J_@__CHECKFORDEBUGGERJUSTMYCODE@4; __CHECKFORDEBUGGERJUSTMYCODE(X)
68 30 4B 00 00		PUSH    OFFSET BUFFER; "DYNAMICALLY COMPUTED TARGET ADDRESS"
FF 15 D4 71 00 00		CALL    DS:__IMP_PUTS
6A 08		PUSH    8; SIZE
FF 15 B0 70 00 00		CALL    DS:__IMP_MALLOC
8B C8		MOV     ECX, EAX
83 C4 08		ADD     ESP, 8
B8 F4 11 00 00		MOV     EAX, OFFSET SUB_11F4
89 4D FC		MOV     [EBP+VAR_4], ECX
99		CDQ
83 C0 04		ADD     EAX, 4
89 01		MOV     [ECX], EAX
83 D2 00		ADC     EDX, 0
89 51 04		MOV     [ECX+4], EDX
8B 45 FC		MOV     EAX, [EBP+VAR_4]
FF D0		CALL    EAX
8B 45 08		MOV     EAX, [EBP+ARG_0]
83 C0 0A		ADD     EAX, 0AH
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 14		SUB     ESP, 14H
B9 14 80 00 00		MOV     ECX, OFFSET UNK_8014
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
E8 BA FC FF FF		CALL    J_@__CHECKFORDEBUGGERJUSTMYCODE@4; __CHECKFORDEBUGGERJUSTMYCODE(X)
8B 35 10 72 00 00		MOV     ESI, DS:__IMP_STRNCPY_S
6A 02		PUSH    2; MAXCOUNT
68 6C 4B 00 00		PUSH    OFFSET STR2; "P1"
6A 14		PUSH    14H; SIZEINBYTES
68 80 65 00 00		PUSH    OFFSET STR1; DESTINATION
C7 05 94 65 00 00 00 00 00 00		MOV     DWORD_6594, 0
C7 05 AC 65 00 00 FF FF FF FF		MOV     DWORD_65AC, 0FFFFFFFFH
C7 05 C4 65 00 00 E8 03 00 00		MOV     DWORD_65C4, 3E8H
FF D6		CALL    ESI ; __IMP_STRNCPY_S
6A 02		PUSH    2; MAXCOUNT
68 70 4B 00 00		PUSH    OFFSET AP2; "P2"
6A 14		PUSH    14H; SIZEINBYTES
68 98 65 00 00		PUSH    OFFSET BYTE_6598; DESTINATION
FF D6		CALL    ESI ; __IMP_STRNCPY_S
6A 02		PUSH    2; MAXCOUNT
68 74 4B 00 00		PUSH    OFFSET AP3; "P3"
6A 14		PUSH    14H; SIZEINBYTES
68 B0 65 00 00		PUSH    OFFSET BYTE_65B0; DESTINATION
FF D6		CALL    ESI ; __IMP_STRNCPY_S
8B 0D 94 65 00 00		MOV     ECX, DWORD_6594
83 C4 30		ADD     ESP, 30H
8B 3D D4 71 00 00		MOV     EDI, DS:__IMP_PUTS
B8 F4 11 00 00		MOV     EAX, OFFSET SUB_11F4
99		CDQ
83 F9 0A		CMP     ECX, 0AH
0F 8D B4 00 00 00		JGE     LOC_1629
8B 1D 14 72 00 00		MOV     EBX, DS:__IMP_STRCPY_S
89 45 F0		MOV     [EBP+VAR_10], EAX
83 C0 04		ADD     EAX, 4
89 45 FC		MOV     [EBP+VAR_4], EAX
8B C2		MOV     EAX, EDX
83 D0 00		ADC     EAX, 0
89 55 EC		MOV     [EBP+VAR_14], EDX
89 45 F8		MOV     [EBP+VAR_8], EAX
90		NOP
68 30 4B 00 00		PUSH    OFFSET BUFFER; "DYNAMICALLY COMPUTED TARGET ADDRESS"
8D 71 0A		LEA     ESI, [ECX+0AH]
FF D7		CALL    EDI ; __IMP_PUTS
6A 08		PUSH    8; SIZE
FF 15 B0 70 00 00		CALL    DS:__IMP_MALLOC
8B 4D FC		MOV     ECX, [EBP+VAR_4]
83 C4 08		ADD     ESP, 8
89 45 F4		MOV     [EBP+VAR_C], EAX
89 08		MOV     [EAX], ECX
8B 4D F8		MOV     ECX, [EBP+VAR_8]
89 48 04		MOV     [EAX+4], ECX
8B 45 F4		MOV     EAX, [EBP+VAR_C]
FF D0		CALL    EAX
89 35 94 65 00 00		MOV     DWORD_6594, ESI
6A 02		PUSH    2; MAXCOUNT
68 6C 4B 00 00		PUSH    OFFSET STR2; "P1"
68 80 65 00 00		PUSH    OFFSET STR1; STR1
FF 15 0C 72 00 00		CALL    DS:__IMP_STRNCMP
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
75 3B		JNZ     SHORT LOC_1612
6A 0A		PUSH    0AH; SIZE
FF 15 B0 70 00 00		CALL    DS:__IMP_MALLOC
83 C4 04		ADD     ESP, 4
8B F8		MOV     EDI, EAX
33 F6		XOR     ESI, ESI
68 5C 4B 00 00		PUSH    OFFSET SOURCE; "0X90"
8D 0C 3E		LEA     ECX, [ESI+EDI]
6A 05		PUSH    5; SIZEINBYTES
51		PUSH    ECX; DESTINATION
FF D3		CALL    EBX ; __IMP_STRCPY_S
46		INC     ESI
83 C4 0C		ADD     ESP, 0CH
83 FE 09		CMP     ESI, 9
7C EA		JL      SHORT LOC_15E6
68 64 4B 00 00		PUSH    OFFSET A0XC3; "0XC3"
8D 47 0A		LEA     EAX, [EDI+0AH]
6A 05		PUSH    5; SIZEINBYTES
50		PUSH    EAX; DESTINATION
FF D3		CALL    EBX ; __IMP_STRCPY_S
8B 3D D4 71 00 00		MOV     EDI, DS:__IMP_PUTS
83 C4 0C		ADD     ESP, 0CH
8B 0D 94 65 00 00		MOV     ECX, DWORD_6594
83 F9 0A		CMP     ECX, 0AH
0F 8C 6F FF FF FF		JL      LOC_1590
8B 5D F0		MOV     EBX, [EBP+VAR_10]
8B 75 EC		MOV     ESI, [EBP+VAR_14]
EB 04		JMP     SHORT LOC_162D
8B D8		MOV     EBX, EAX
8B F2		MOV     ESI, EDX
8B 0D AC 65 00 00		MOV     ECX, DWORD_65AC
83 F9 FF		CMP     ECX, 0FFFFFFFFH
74 21		JZ      SHORT LOC_1659
85 C9		TEST    ECX, ECX
74 16		JZ      SHORT LOC_1652
81 F9 E8 03 00 00		CMP     ECX, 3E8H
74 07		JZ      SHORT LOC_164B
68 A0 4B 00 00		PUSH    OFFSET ANONEOFTHEABOVE; "NONE OF THE ABOVE"
EB 13		JMP     SHORT LOC_165E
68 90 4B 00 00		PUSH    OFFSET AEQUAL1000; "EQUAL 1000"
EB 0C		JMP     SHORT LOC_165E
68 78 4B 00 00		PUSH    OFFSET AEQUAL0; "EQUAL 0"
EB 05		JMP     SHORT LOC_165E
68 84 4B 00 00		PUSH    OFFSET AEQUAL1; "EQUAL -1"
FF D7		CALL    EDI ; __IMP_PUTS
83 C4 04		ADD     ESP, 4
68 30 4B 00 00		PUSH    OFFSET BUFFER; "DYNAMICALLY COMPUTED TARGET ADDRESS"
FF D7		CALL    EDI ; __IMP_PUTS
6A 08		PUSH    8; SIZE
FF 15 B0 70 00 00		CALL    DS:__IMP_MALLOC
83 C4 08		ADD     ESP, 8
89 45 EC		MOV     [EBP+VAR_14], EAX
83 C3 04		ADD     EBX, 4
83 D6 00		ADC     ESI, 0
89 18		MOV     [EAX], EBX
89 70 04		MOV     [EAX+4], ESI
8B 45 EC		MOV     EAX, [EBP+VAR_14]
FF D0		CALL    EAX
33 C0		XOR     EAX, EAX
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
8B E5		MOV     ESP, EBP
5D		POP     EBP
C3		RETN
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
B9 14 80 00 00		MOV     ECX, OFFSET UNK_8014
E8 B0 FA FF FF		CALL    J_@__CHECKFORDEBUGGERJUSTMYCODE@4; __CHECKFORDEBUGGERJUSTMYCODE(X)
6A 0A		PUSH    0AH; SIZE
FF 15 B0 70 00 00		CALL    DS:__IMP_MALLOC
8B 1D 14 72 00 00		MOV     EBX, DS:__IMP_STRCPY_S
83 C4 04		ADD     ESP, 4
8B F8		MOV     EDI, EAX
33 F6		XOR     ESI, ESI
68 5C 4B 00 00		PUSH    OFFSET SOURCE; "0X90"
8D 0C 3E		LEA     ECX, [ESI+EDI]
6A 05		PUSH    5; SIZEINBYTES
51		PUSH    ECX; DESTINATION
FF D3		CALL    EBX ; __IMP_STRCPY_S
46		INC     ESI
83 C4 0C		ADD     ESP, 0CH
83 FE 09		CMP     ESI, 9
7C EA		JL      SHORT LOC_1722
68 64 4B 00 00		PUSH    OFFSET A0XC3; "0XC3"
8D 47 0A		LEA     EAX, [EDI+0AH]
6A 05		PUSH    5; SIZEINBYTES
50		PUSH    EAX; DESTINATION
FF D3		CALL    EBX ; __IMP_STRCPY_S
83 C4 0C		ADD     ESP, 0CH
8D 47 05		LEA     EAX, [EDI+5]
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
B9 14 80 00 00		MOV     ECX, OFFSET UNK_8014
E8 40 FA FF FF		CALL    J_@__CHECKFORDEBUGGERJUSTMYCODE@4; __CHECKFORDEBUGGERJUSTMYCODE(X)
8B 45 08		MOV     EAX, [EBP+ARG_0]
2B 45 0C		SUB     EAX, [EBP+ARG_4]
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
51		PUSH    ECX
51		PUSH    ECX
89 4D FC		MOV     [EBP+VAR_4], ECX
8B 45 FC		MOV     EAX, [EBP+VAR_4]
89 45 F8		MOV     [EBP+VAR_8], EAX
8B 45 FC		MOV     EAX, [EBP+VAR_4]
0F B6 00		MOVZX   EAX, BYTE PTR [EAX]
85 C0		TEST    EAX, EAX
74 18		JZ      SHORT LOCRET_17BA
83 3D F8 65 00 00 00		CMP     DWORD_65F8, 0
74 0F		JZ      SHORT LOCRET_17BA
FF 15 24 70 00 00		CALL    DS:__IMP_GETCURRENTTHREADID
39 05 F8 65 00 00		CMP     DWORD_65F8, EAX
75 01		JNZ     SHORT LOCRET_17BA
90		NOP
C9		LEAVE
C3		RETN
56		PUSH    ESI
6A 01		PUSH    1; TYPE
E8 08 15 00 00		CALL    _SET_APP_TYPE
E8 9E F8 FF FF		CALL    J___GET_STARTUP_FILE_MODE
50		PUSH    EAX; MODE
E8 33 15 00 00		CALL    _SET_FMODE
E8 AC F8 FF FF		CALL    SUB_108C
8B F0		MOV     ESI, EAX
E8 57 15 00 00		CALL    __P__COMMODE
6A 01		PUSH    1
89 30		MOV     [EAX], ESI
E8 B0 F8 FF FF		CALL    J____SCRT_INITIALIZE_ONEXIT_TABLES
83 C4 0C		ADD     ESP, 0CH
5E		POP     ESI
84 C0		TEST    AL, AL
74 73		JZ      SHORT LOC_186B
DB E2		FNCLEX
E8 06 F8 FF FF		CALL    SUB_1005
68 C8 10 00 00		PUSH    OFFSET SUB_10C8; VOID (__CDECL *)()
E8 E2 F8 FF FF		CALL    J__ATEXIT
E8 5A F9 FF FF		CALL    SUB_1168
50		PUSH    EAX; MODE
E8 D0 14 00 00		CALL    _CONFIGURE_NARROW_ARGV
59		POP     ECX
59		POP     ECX
85 C0		TEST    EAX, EAX
75 51		JNZ     SHORT LOC_186B
E8 2C F8 FF FF		CALL    SUB_104B
E8 DB F8 FF FF		CALL    SUB_10FF
85 C0		TEST    EAX, EAX
74 0B		JZ      SHORT LOC_1833
68 7D 10 00 00		PUSH    OFFSET USERMATHERRORFUNCTION; USERMATHERRORFUNCTION
E8 AC 14 00 00		CALL    __SETUSERMATHERR
59		POP     ECX
E8 AD F9 FF FF		CALL    J_NULLSUB_3
E8 E6 F7 FF FF		CALL    J_NULLSUB_2
E8 80 F9 FF FF		CALL    J___INITIALIZE_DEFAULT_PRECISION
E8 03 F9 FF FF		CALL    SUB_114A
50		PUSH    EAX; FLAG
E8 E5 14 00 00		CALL    _CONFIGTHREADLOCALE
59		POP     ECX
E8 4C F9 FF FF		CALL    SUB_119F
84 C0		TEST    AL, AL
74 05		JZ      SHORT LOC_185C
E8 8E 14 00 00		CALL    _INITIALIZE_NARROW_ENVIRONMENT
E8 EE F8 FF FF		CALL    SUB_114F
E8 A3 F8 FF FF		CALL    SUB_1109
85 C0		TEST    EAX, EAX
75 01		JNZ     SHORT LOC_186B
C3		RETN
6A 07		PUSH    7
E8 6F F8 FF FF		CALL    J____SCRT_FASTFAIL
E8 12 F8 FF FF		CALL    J____SCRT_INITIALIZE_DEFAULT_LOCAL_STDIO_OPTIONS
33 C0		XOR     EAX, EAX
C3		RETN
E8 1B F9 FF FF		CALL    SUB_11C7
E8 F9 F7 FF FF		CALL    SUB_10AA
50		PUSH    EAX; NEWMODE
E8 81 14 00 00		CALL    _SET_NEW_MODE
59		POP     ECX
C3		RETN
E8 2D F9 FF FF		CALL    J____SECURITY_INIT_COOKIE
E9 02 00 00 00		JMP     ?__SCRT_COMMON_MAIN_SEH@@YAHXZ; __SCRT_COMMON_MAIN_SEH(VOID)
6A 14		PUSH    14H
68 78 57 00 00		PUSH    OFFSET STRU_5778
E8 99 F7 FF FF		CALL    J___SEH_PROLOG4
6A 01		PUSH    1
E8 9B F8 FF FF		CALL    J____SCRT_INITIALIZE_CRT
59		POP     ECX
84 C0		TEST    AL, AL
0F 84 50 01 00 00		JZ      LOC_1A35
32 DB		XOR     BL, BL
88 5D E7		MOV     [EBP+VAR_19], BL
83 65 FC 00		AND     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0
E8 A7 F8 FF FF		CALL    J____SCRT_ACQUIRE_STARTUP_LOCK
88 45 DC		MOV     BYTE PTR [EBP+VAR_24], AL
A1 40 61 00 00		MOV     EAX, DWORD_6140
33 C9		XOR     ECX, ECX
41		INC     ECX
3B C1		CMP     EAX, ECX
0F 84 2F 01 00 00		JZ      LOC_1A35
85 C0		TEST    EAX, EAX
75 49		JNZ     SHORT LOC_1953
89 0D 40 61 00 00		MOV     DWORD_6140, ECX
68 18 46 00 00		PUSH    OFFSET LAST; LAST
68 0C 43 00 00		PUSH    OFFSET FIRST; FIRST
E8 DD 13 00 00		CALL    _INITTERM_E
59		POP     ECX
59		POP     ECX
85 C0		TEST    EAX, EAX
74 11		JZ      SHORT LOC_1936
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
B8 FF 00 00 00		MOV     EAX, 0FFH
E9 EF 00 00 00		JMP     LOC_1A25
68 08 42 00 00		PUSH    OFFSET DWORD_4208; LAST
68 00 40 00 00		PUSH    OFFSET DWORD_4000; FIRST
E8 B1 13 00 00		CALL    _INITTERM
59		POP     ECX
59		POP     ECX
C7 05 40 61 00 00 02 00 00 00		MOV     DWORD_6140, 2
EB 05		JMP     SHORT LOC_1958
8A D9		MOV     BL, CL
88 5D E7		MOV     [EBP+VAR_19], BL
FF 75 DC		PUSH    [EBP+VAR_24]
E8 59 F7 FF FF		CALL    J____SCRT_RELEASE_STARTUP_LOCK
59		POP     ECX
E8 C7 F6 FF FF		CALL    SUB_102D
8B F0		MOV     ESI, EAX
33 FF		XOR     EDI, EDI
39 3E		CMP     [ESI], EDI
74 1B		JZ      SHORT LOC_1989
56		PUSH    ESI
E8 1D F7 FF FF		CALL    J____SCRT_IS_NONWRITABLE_IN_CURRENT_IMAGE
59		POP     ECX
84 C0		TEST    AL, AL
74 10		JZ      SHORT LOC_1989
8B 36		MOV     ESI, [ESI]
57		PUSH    EDI
6A 02		PUSH    2
57		PUSH    EDI
8B CE		MOV     ECX, ESI
FF 15 00 90 00 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR
FF D6		CALL    ESI
E8 90 F6 FF FF		CALL    SUB_101E
8B F0		MOV     ESI, EAX
39 3E		CMP     [ESI], EDI
74 13		JZ      SHORT LOC_19A7
56		PUSH    ESI
E8 F7 F6 FF FF		CALL    J____SCRT_IS_NONWRITABLE_IN_CURRENT_IMAGE
59		POP     ECX
84 C0		TEST    AL, AL
74 08		JZ      SHORT LOC_19A7
FF 36		PUSH    DWORD PTR [ESI]; CALLBACK
E8 86 13 00 00		CALL    _REGISTER_THREAD_LOCAL_EXE_ATEXIT_CALLBACK
59		POP     ECX
E8 44 13 00 00		CALL    _GET_INITIAL_NARROW_ENVIRONMENT
8B F8		MOV     EDI, EAX
E8 67 13 00 00		CALL    __P___ARGV
8B 30		MOV     ESI, [EAX]
E8 5A 13 00 00		CALL    __P___ARGC
57		PUSH    EDI; ENVP
56		PUSH    ESI; ARGV
FF 30		PUSH    DWORD PTR [EAX]; ARGC
E8 CD F7 FF FF		CALL    _MAIN
83 C4 0C		ADD     ESP, 0CH
8B F0		MOV     ESI, EAX
E8 D7 F7 FF FF		CALL    SUB_11A4
84 C0		TEST    AL, AL
74 6B		JZ      SHORT LOC_1A3C
84 DB		TEST    BL, BL
75 05		JNZ     SHORT LOC_19DA
E8 46 13 00 00		CALL    _CEXIT
6A 00		PUSH    0
6A 01		PUSH    1
E8 DB F6 FF FF		CALL    J____SCRT_UNINITIALIZE_CRT
59		POP     ECX
59		POP     ECX
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
8B C6		MOV     EAX, ESI
EB 35		JMP     SHORT LOC_1A25
8B 4D EC		MOV     ECX, [EBP+MS_EXC.EXC_PTR]
8B 01		MOV     EAX, [ECX]
8B 00		MOV     EAX, [EAX]
89 45 E0		MOV     [EBP+CODE], EAX
51		PUSH    ECX; EXCEPTIONPTR
50		PUSH    EAX; EXCEPTIONNUM
E8 D1 12 00 00		CALL    _SEH_FILTER_EXE
59		POP     ECX
59		POP     ECX
C3		RETN
8B 65 E8		MOV     ESP, [EBP+MS_EXC.OLD_ESP]
E8 98 F7 FF FF		CALL    SUB_11A4
84 C0		TEST    AL, AL
74 32		JZ      SHORT LOC_1A42
80 7D E7 00		CMP     [EBP+VAR_19], 0
75 05		JNZ     SHORT LOC_1A1B
E8 0B 13 00 00		CALL    _C_EXIT
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
8B 45 E0		MOV     EAX, [EBP+CODE]
8B 4D F0		MOV     ECX, [EBP+MS_EXC.REGISTRATION.NEXT]
64 89 0D 00 00 00 00		MOV     LARGE FS:0, ECX
59		POP     ECX
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
C9		LEAVE
C3		RETN
6A 07		PUSH    7
E8 A5 F6 FF FF		CALL    J____SCRT_FASTFAIL
56		PUSH    ESI; CODE
E8 C0 12 00 00		CALL    EXIT
FF 75 E0		PUSH    [EBP+CODE]; CODE
E8 BE 12 00 00		CALL    _EXIT
E8 B8 F6 FF FF		CALL    SUB_1168
50		PUSH    EAX; MODE
E8 2E 12 00 00		CALL    _CONFIGURE_NARROW_ARGV
59		POP     ECX
C3		RETN
E9 2A 12 00 00		JMP     _INITIALIZE_NARROW_ENVIRONMENT
56		PUSH    ESI
57		PUSH    EDI
E8 29 12 00 00		CALL    _GET_INITIAL_NARROW_ENVIRONMENT
8B F8		MOV     EDI, EAX
E8 4C 12 00 00		CALL    __P___ARGV
8B 30		MOV     ESI, [EAX]
E8 3F 12 00 00		CALL    __P___ARGC
57		PUSH    EDI; ENVP
56		PUSH    ESI; ARGV
FF 30		PUSH    DWORD PTR [EAX]; ARGC
E8 B2 F6 FF FF		CALL    _MAIN
83 C4 0C		ADD     ESP, 0CH
5F		POP     EDI
5E		POP     ESI
C3		RETN
6A 01		PUSH    1; TYPE
E8 E4 11 00 00		CALL    _SET_APP_TYPE
59		POP     ECX
C3		RETN
56		PUSH    ESI
E8 8E F5 FF FF		CALL    SUB_108C
8B F0		MOV     ESI, EAX
E8 39 12 00 00		CALL    __P__COMMODE
89 30		MOV     [EAX], ESI
5E		POP     ESI
C3		RETN
E8 61 F5 FF FF		CALL    J___GET_STARTUP_FILE_MODE
50		PUSH    EAX; MODE
E8 F6 11 00 00		CALL    _SET_FMODE
59		POP     ECX
C3		RETN
E8 CD F6 FF FF		CALL    J____SECURITY_INIT_COOKIE
E9 A2 FD FF FF		JMP     ?__SCRT_COMMON_MAIN_SEH@@YAHXZ; __SCRT_COMMON_MAIN_SEH(VOID)
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
56		PUSH    ESI
8B 48 3C		MOV     ECX, [EAX+3CH]
03 C8		ADD     ECX, EAX
0F B7 41 14		MOVZX   EAX, WORD PTR [ECX+14H]
8D 51 18		LEA     EDX, [ECX+18H]
03 D0		ADD     EDX, EAX
0F B7 41 06		MOVZX   EAX, WORD PTR [ECX+6]
6B F0 28		IMUL    ESI, EAX, 28H ; '('
03 F2		ADD     ESI, EDX
3B D6		CMP     EDX, ESI
74 19		JZ      SHORT LOC_1B64
8B 4D 0C		MOV     ECX, [EBP+ARG_4]
3B 4A 0C		CMP     ECX, [EDX+0CH]
72 0A		JB      SHORT LOC_1B5D
8B 42 08		MOV     EAX, [EDX+8]
03 42 0C		ADD     EAX, [EDX+0CH]
3B C8		CMP     ECX, EAX
72 0C		JB      SHORT LOC_1B69
83 C2 28		ADD     EDX, 28H ; '('
3B D6		CMP     EDX, ESI
75 EA		JNZ     SHORT LOC_1B4E
33 C0		XOR     EAX, EAX
5E		POP     ESI
5D		POP     EBP
C3		RETN
8B C2		MOV     EAX, EDX
EB F9		JMP     SHORT LOC_1B66
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
85 C0		TEST    EAX, EAX
74 25		JZ      SHORT LOC_1BAD
B9 4D 5A 00 00		MOV     ECX, 5A4DH
66 39 08		CMP     [EAX], CX
75 1B		JNZ     SHORT LOC_1BAD
8B 48 3C		MOV     ECX, [EAX+3CH]
03 C8		ADD     ECX, EAX
81 39 50 45 00 00		CMP     DWORD PTR [ECX], 4550H
75 0E		JNZ     SHORT LOC_1BAD
B8 0B 01 00 00		MOV     EAX, 10BH
66 39 41 18		CMP     [ECX+18H], AX
0F 94 C0		SETZ    AL
5D		POP     EBP
C3		RETN
32 C0		XOR     AL, AL
5D		POP     EBP
C3		RETN
64 A1 18 00 00 00		MOV     EAX, LARGE FS:18H
C3		RETN
56		PUSH    ESI
E8 03 F5 FF FF		CALL    J____SCRT_IS_UCRT_DLL_IN_USE
85 C0		TEST    EAX, EAX
74 20		JZ      SHORT LOC_1BEE
64 A1 18 00 00 00		MOV     EAX, LARGE FS:18H
BE 44 61 00 00		MOV     ESI, OFFSET UNK_6144
8B 50 04		MOV     EDX, [EAX+4]
EB 04		JMP     SHORT LOC_1BE2
3B D0		CMP     EDX, EAX
74 10		JZ      SHORT LOC_1BF2
33 C0		XOR     EAX, EAX
8B CA		MOV     ECX, EDX
F0 0F B1 0E		LOCK CMPXCHG [ESI], ECX
85 C0		TEST    EAX, EAX
75 F0		JNZ     SHORT LOC_1BDE
32 C0		XOR     AL, AL
5E		POP     ESI
C3		RETN
B0 01		MOV     AL, 1
5E		POP     ESI
C3		RETN
E8 C6 F4 FF FF		CALL    J____SCRT_IS_UCRT_DLL_IN_USE
85 C0		TEST    EAX, EAX
74 07		JZ      SHORT LOC_1C12
E8 C2 F4 FF FF		CALL    SUB_10D2
EB 18		JMP     SHORT LOC_1C2A
E8 51 F5 FF FF		CALL    SUB_1168
50		PUSH    EAX; MODE
E8 C7 10 00 00		CALL    _CONFIGURE_NARROW_ARGV
59		POP     ECX
85 C0		TEST    EAX, EAX
74 03		JZ      SHORT LOC_1C25
32 C0		XOR     AL, AL
C3		RETN
E8 C0 10 00 00		CALL    _INITIALIZE_NARROW_ENVIRONMENT
B0 01		MOV     AL, 1
C3		RETN
6A 00		PUSH    0
E8 62 F4 FF FF		CALL    J____SCRT_INITIALIZE_ONEXIT_TABLES
84 C0		TEST    AL, AL
59		POP     ECX
0F 95 C0		SETNZ   AL
C3		RETN
E8 D5 F4 FF FF		CALL    SUB_1122
84 C0		TEST    AL, AL
75 03		JNZ     SHORT LOC_1C54
32 C0		XOR     AL, AL
C3		RETN
E8 E2 F4 FF FF		CALL    SUB_113B
84 C0		TEST    AL, AL
75 07		JNZ     SHORT LOC_1C64
E8 25 F4 FF FF		CALL    SUB_1087
EB ED		JMP     SHORT LOC_1C51
B0 01		MOV     AL, 1
C3		RETN
E8 50 F4 FF FF		CALL    SUB_10C3
E8 0F F4 FF FF		CALL    SUB_1087
B0 01		MOV     AL, 1
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 47 F4 FF FF		CALL    J____SCRT_IS_UCRT_DLL_IN_USE
85 C0		TEST    EAX, EAX
75 19		JNZ     SHORT LOC_1CA3
83 7D 0C 01		CMP     [EBP+ARG_4], 1
75 13		JNZ     SHORT LOC_1CA3
FF 75 10		PUSH    [EBP+ARG_8]
8B 4D 14		MOV     ECX, [EBP+ARG_C]
50		PUSH    EAX
FF 75 08		PUSH    [EBP+ARG_0]
FF 15 00 90 00 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR
FF 55 14		CALL    [EBP+ARG_C]
FF 75 1C		PUSH    [EBP+EXCEPTIONPTR]; EXCEPTIONPTR
FF 75 18		PUSH    [EBP+EXCEPTIONNUM]; EXCEPTIONNUM
E8 96 10 00 00		CALL    _SEH_FILTER_DLL
59		POP     ECX
59		POP     ECX
5D		POP     EBP
C3		RETN
E8 09 F4 FF FF		CALL    J____SCRT_IS_UCRT_DLL_IN_USE
85 C0		TEST    EAX, EAX
74 0C		JZ      SHORT LOC_1CD4
68 4C 61 00 00		PUSH    OFFSET TABLE; TABLE
E8 84 10 00 00		CALL    _EXECUTE_ONEXIT_TABLE
59		POP     ECX
C3		RETN
E8 0D F4 FF FF		CALL    SUB_10E6
85 C0		TEST    EAX, EAX
0F 84 3F 10 00 00		JZ      _CEXIT
C3		RETN
6A 00		PUSH    0
E8 08 F5 FF FF		CALL    SUB_11F9
59		POP     ECX
E9 30 F4 FF FF		JMP     SUB_1127
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 7D 08 00		CMP     [EBP+ARG_0], 0
75 07		JNZ     SHORT LOC_1D0A
C6 05 48 61 00 00 01		MOV     BYTE_6148, 1
E8 C3 F3 FF FF		CALL    SUB_10D2
E8 45 F4 FF FF		CALL    SUB_1159
84 C0		TEST    AL, AL
75 04		JNZ     SHORT LOC_1D1C
32 C0		XOR     AL, AL
5D		POP     EBP
C3		RETN
E8 3D F4 FF FF		CALL    SUB_115E
84 C0		TEST    AL, AL
75 0A		JNZ     SHORT LOC_1D2F
6A 00		PUSH    0
E8 E3 F2 FF FF		CALL    SUB_100F
59		POP     ECX
EB E9		JMP     SHORT LOC_1D18
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
80 3D 49 61 00 00 00		CMP     BYTE_6149, 0
74 04		JZ      SHORT LOC_1D51
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
56		PUSH    ESI
8B 75 08		MOV     ESI, [EBP+ARG_0]
85 F6		TEST    ESI, ESI
74 05		JZ      SHORT LOC_1D5E
83 FE 01		CMP     ESI, 1
75 62		JNZ     SHORT LOC_1DC0
E8 6A F3 FF FF		CALL    J____SCRT_IS_UCRT_DLL_IN_USE
85 C0		TEST    EAX, EAX
74 26		JZ      SHORT LOC_1D8D
85 F6		TEST    ESI, ESI
75 22		JNZ     SHORT LOC_1D8D
68 4C 61 00 00		PUSH    OFFSET TABLE; TABLE
E8 D5 0F 00 00		CALL    _INITIALIZE_ONEXIT_TABLE
59		POP     ECX
85 C0		TEST    EAX, EAX
75 0F		JNZ     SHORT LOC_1D89
68 58 61 00 00		PUSH    OFFSET STRU_6158; TABLE
E8 C6 0F 00 00		CALL    _INITIALIZE_ONEXIT_TABLE
59		POP     ECX
85 C0		TEST    EAX, EAX
74 2B		JZ      SHORT LOC_1DB4
32 C0		XOR     AL, AL
EB 30		JMP     SHORT LOC_1DBD
83 C9 FF		OR      ECX, 0FFFFFFFFH
89 0D 4C 61 00 00		MOV     TABLE._FIRST, ECX
89 0D 50 61 00 00		MOV     TABLE._LAST, ECX
89 0D 54 61 00 00		MOV     TABLE._END, ECX
89 0D 58 61 00 00		MOV     STRU_6158._FIRST, ECX
89 0D 5C 61 00 00		MOV     STRU_6158._LAST, ECX
89 0D 60 61 00 00		MOV     STRU_6158._END, ECX
C6 05 49 61 00 00 01		MOV     BYTE_6149, 1
B0 01		MOV     AL, 1
5E		POP     ESI
5D		POP     EBP
C3		RETN
6A 05		PUSH    5
E8 1A F3 FF FF		CALL    J____SCRT_FASTFAIL
6A 08		PUSH    8
68 98 57 00 00		PUSH    OFFSET STRU_5798
E8 79 F2 FF FF		CALL    J___SEH_PROLOG4
83 65 FC 00		AND     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0
B8 4D 5A 00 00		MOV     EAX, 5A4DH
66 39 05 00 00 00 00		CMP     LARGE DS:0, AX
75 5D		JNZ     SHORT LOC_1E64
A1 3C 00 00 00		MOV     EAX, LARGE DS:3CH
81 B8 00 00 00 00 50 45 00 00		CMP     DWORD PTR [EAX+0], 4550H
75 4C		JNZ     SHORT LOC_1E64
B9 0B 01 00 00		MOV     ECX, 10BH
66 39 88 18 00 00 00		CMP     [EAX+18H], CX
75 3E		JNZ     SHORT LOC_1E64
8B 45 08		MOV     EAX, [EBP+ARG_0]
B9 00 00 00 00		MOV     ECX, 0
2B C1		SUB     EAX, ECX
50		PUSH    EAX; UNSIGNED INT
51		PUSH    ECX; UNSIGNED __INT8 *
E8 F2 FC FF FF		CALL    ?FIND_PE_SECTION@@YAPAU_IMAGE_SECTION_HEADER@@QAEI@Z; FIND_PE_SECTION(UCHAR * CONST,UINT)
59		POP     ECX
59		POP     ECX
85 C0		TEST    EAX, EAX
74 27		JZ      SHORT LOC_1E64
83 78 24 00		CMP     DWORD PTR [EAX+24H], 0
7C 21		JL      SHORT LOC_1E64
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
B0 01		MOV     AL, 1
EB 1F		JMP     SHORT LOC_1E6D
8B 45 EC		MOV     EAX, [EBP+MS_EXC.EXC_PTR]
8B 00		MOV     EAX, [EAX]
33 C9		XOR     ECX, ECX
81 38 05 00 00 C0		CMP     DWORD PTR [EAX], 0C0000005H
0F 94 C1		SETZ    CL
8B C1		MOV     EAX, ECX
C3		RETN
8B 65 E8		MOV     ESP, [EBP+MS_EXC.OLD_ESP]
C7 45 FC FE FF FF FF		MOV     [EBP+MS_EXC.REGISTRATION.TRYLEVEL], 0FFFFFFFEH
32 C0		XOR     AL, AL
8B 4D F0		MOV     ECX, [EBP+MS_EXC.REGISTRATION.NEXT]
64 89 0D 00 00 00 00		MOV     LARGE FS:0, ECX
59		POP     ECX
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
C9		LEAVE
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
E8 23 F2 FF FF		CALL    J____SCRT_IS_UCRT_DLL_IN_USE
85 C0		TEST    EAX, EAX
74 0F		JZ      SHORT LOC_1EBD
80 7D 08 00		CMP     [EBP+ARG_0], 0
75 09		JNZ     SHORT LOC_1EBD
33 C0		XOR     EAX, EAX
B9 44 61 00 00		MOV     ECX, OFFSET UNK_6144
87 01		XCHG    EAX, [ECX]
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
80 3D 48 61 00 00 00		CMP     BYTE_6148, 0
74 06		JZ      SHORT LOC_1ED8
80 7D 0C 00		CMP     [EBP+ARG_4], 0
75 12		JNZ     SHORT LOC_1EEA
FF 75 08		PUSH    [EBP+ARG_0]
E8 B6 F1 FF FF		CALL    SUB_1096
FF 75 08		PUSH    [EBP+ARG_0]
E8 27 F1 FF FF		CALL    SUB_100F
59		POP     ECX
59		POP     ECX
B0 01		MOV     AL, 1
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 3D 4C 61 00 00 FF		CMP     TABLE._FIRST, 0FFFFFFFFH
FF 75 08		PUSH    [EBP+FUNCTION]; FUNCTION
75 07		JNZ     SHORT LOC_1F0E
E8 50 0E 00 00		CALL    _CRT_ATEXIT
EB 0B		JMP     SHORT LOC_1F19
68 4C 61 00 00		PUSH    OFFSET TABLE; TABLE
E8 38 0E 00 00		CALL    _REGISTER_ONEXIT_FUNCTION
59		POP     ECX
F7 D8		NEG     EAX
59		POP     ECX
1B C0		SBB     EAX, EAX
F7 D0		NOT     EAX
23 45 08		AND     EAX, [EBP+FUNCTION]
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 3D 58 61 00 00 FF		CMP     STRU_6158._FIRST, 0FFFFFFFFH
75 06		JNZ     SHORT LOC_1F42
5D		POP     EBP
E9 20 0E 00 00		JMP     _CRT_AT_QUICK_EXIT
FF 75 08		PUSH    [EBP+FUNCTION]; FUNCTION
68 58 61 00 00		PUSH    OFFSET STRU_6158; TABLE
E8 01 0E 00 00		CALL    _REGISTER_ONEXIT_FUNCTION
59		POP     ECX
59		POP     ECX
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
FF 75 08		PUSH    [EBP+FUNC]; FUNC
E8 9E F1 FF FF		CALL    J___ONEXIT
F7 D8		NEG     EAX
59		POP     ECX
1B C0		SBB     EAX, EAX
F7 D8		NEG     EAX
48		DEC     EAX
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 14		SUB     ESP, 14H
83 65 F4 00		AND     [EBP+SYSTEMTIMEASFILETIME.DWLOWDATETIME], 0
8D 45 F4		LEA     EAX, [EBP+SYSTEMTIMEASFILETIME]
83 65 F8 00		AND     [EBP+SYSTEMTIMEASFILETIME.DWHIGHDATETIME], 0
50		PUSH    EAX; LPSYSTEMTIMEASFILETIME
FF 15 0C 70 00 00		CALL    DS:__IMP_GETSYSTEMTIMEASFILETIME
8B 45 F8		MOV     EAX, [EBP+SYSTEMTIMEASFILETIME.DWHIGHDATETIME]
33 45 F4		XOR     EAX, [EBP+SYSTEMTIMEASFILETIME.DWLOWDATETIME]
89 45 FC		MOV     [EBP+VAR_4], EAX
FF 15 24 70 00 00		CALL    DS:__IMP_GETCURRENTTHREADID
31 45 FC		XOR     [EBP+VAR_4], EAX
FF 15 08 70 00 00		CALL    DS:__IMP_GETCURRENTPROCESSID
31 45 FC		XOR     [EBP+VAR_4], EAX
8D 45 EC		LEA     EAX, [EBP+PERFORMANCECOUNT]
50		PUSH    EAX; LPPERFORMANCECOUNT
FF 15 04 70 00 00		CALL    DS:__IMP_QUERYPERFORMANCECOUNTER
8B 45 F0		MOV     EAX, DWORD PTR [EBP+PERFORMANCECOUNT+4]
8D 4D FC		LEA     ECX, [EBP+VAR_4]
33 45 EC		XOR     EAX, DWORD PTR [EBP+PERFORMANCECOUNT]
33 45 FC		XOR     EAX, [EBP+VAR_4]
33 C1		XOR     EAX, ECX
C9		LEAVE
C3		RETN
8B 0D 14 60 00 00		MOV     ECX, ___SECURITY_COOKIE
56		PUSH    ESI
57		PUSH    EDI
BF 4E E6 40 BB		MOV     EDI, 0BB40E64EH
BE 00 00 FF FF		MOV     ESI, 0FFFF0000H
3B CF		CMP     ECX, EDI
74 04		JZ      SHORT LOC_1FEF
85 CE		TEST    ESI, ECX
75 26		JNZ     SHORT LOC_2015
E8 81 FF FF FF		CALL    ___GET_ENTROPY
8B C8		MOV     ECX, EAX
3B CF		CMP     ECX, EDI
75 07		JNZ     SHORT LOC_2001
B9 4F E6 40 BB		MOV     ECX, 0BB40E64FH
EB 0E		JMP     SHORT LOC_200F
85 CE		TEST    ESI, ECX
75 0A		JNZ     SHORT LOC_200F
0D 11 47 00 00		OR      EAX, 4711H
C1 E0 10		SHL     EAX, 10H
0B C8		OR      ECX, EAX
89 0D 14 60 00 00		MOV     ___SECURITY_COOKIE, ECX
F7 D1		NOT     ECX
5F		POP     EDI
89 0D 18 60 00 00		MOV     DWORD_6018, ECX
5E		POP     ESI
C3		RETN
33 C0		XOR     EAX, EAX
C3		RETN
33 C0		XOR     EAX, EAX
40		INC     EAX
C3		RETN
33 C0		XOR     EAX, EAX
C3		RETN
B8 00 40 00 00		MOV     EAX, 4000H
C3		RETN
33 C0		XOR     EAX, EAX
C3		RETN
33 C0		XOR     EAX, EAX
C3		RETN
68 70 61 00 00		PUSH    OFFSET LISTHEAD; LISTHEAD
FF 15 10 70 00 00		CALL    DS:__IMP_INITIALIZESLISTHEAD
C3		RETN
68 70 61 00 00		PUSH    OFFSET LISTHEAD
E8 35 0C 00 00		CALL    __STD_TYPE_INFO_DESTROY_LIST
59		POP     ECX
C3		RETN
B0 01		MOV     AL, 1
C3		RETN
68 00 00 03 00		PUSH    30000H; MASK
68 00 00 01 00		PUSH    10000H; NEWVALUE
6A 00		PUSH    0; CURRENTSTATE
E8 EE 0C 00 00		CALL    _CONTROLFP_S
83 C4 0C		ADD     ESP, 0CH
85 C0		TEST    EAX, EAX
75 01		JNZ     SHORT LOC_2082
C3		RETN
6A 07		PUSH    7
E8 58 F0 FF FF		CALL    J____SCRT_FASTFAIL
C2 00 00		RETN    0
C2 00 00		RETN    0
B8 80 61 00 00		MOV     EAX, OFFSET UNK_6180
C3		RETN
B8 90 61 00 00		MOV     EAX, OFFSET UNK_6190
C3		RETN
E8 00 F1 FF FF		CALL    SUB_11A9
8B 48 04		MOV     ECX, [EAX+4]
83 08 24		OR      DWORD PTR [EAX], 24H
89 48 04		MOV     [EAX+4], ECX
E8 1A F1 FF FF		CALL    SUB_11D1
8B 48 04		MOV     ECX, [EAX+4]
83 08 02		OR      DWORD PTR [EAX], 2
89 48 04		MOV     [EAX+4], ECX
C3		RETN
33 C0		XOR     EAX, EAX
39 05 04 60 00 00		CMP     DWORD_6004, EAX
0F 94 C0		SETZ    AL
C3		RETN
B8 EC 65 00 00		MOV     EAX, OFFSET UNK_65EC
C3		RETN
B8 E0 65 00 00		MOV     EAX, OFFSET UNK_65E0
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 24 03 00 00		SUB     ESP, 324H
53		PUSH    EBX
6A 17		PUSH    17H; PROCESSORFEATURE
FF 15 20 70 00 00		CALL    DS:__IMP_ISPROCESSORFEATUREPRESENT
85 C0		TEST    EAX, EAX
74 05		JZ      SHORT LOC_20FE
8B 4D 08		MOV     ECX, [EBP+ARG_0]
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
6A 03		PUSH    3
E8 6D F0 FF FF		CALL    SUB_1172
C7 04 24 CC 02 00 00		MOV     [ESP+32CH+SIZE], 2CCH; SIZE
8D 85 DC FC FF FF		LEA     EAX, [EBP+VAR_324]
6A 00		PUSH    0; VAL
50		PUSH    EAX; VOID *
E8 8E 0B 00 00		CALL    MEMSET
83 C4 0C		ADD     ESP, 0CH
89 85 8C FD FF FF		MOV     [EBP+VAR_274], EAX
89 8D 88 FD FF FF		MOV     [EBP+VAR_278], ECX
89 95 84 FD FF FF		MOV     [EBP+VAR_27C], EDX
89 9D 80 FD FF FF		MOV     [EBP+VAR_280], EBX
89 B5 7C FD FF FF		MOV     [EBP+VAR_284], ESI
89 BD 78 FD FF FF		MOV     [EBP+VAR_288], EDI
66 8C 95 A4 FD FF FF		MOV     [EBP+VAR_25C], SS
66 8C 8D 98 FD FF FF		MOV     [EBP+VAR_268], CS
66 8C 9D 74 FD FF FF		MOV     [EBP+VAR_28C], DS
66 8C 85 70 FD FF FF		MOV     [EBP+VAR_290], ES
66 8C A5 6C FD FF FF		MOV     [EBP+VAR_294], FS
66 8C AD 68 FD FF FF		MOV     [EBP+VAR_298], GS
9C		PUSHF
8F 85 9C FD FF FF		POP     [EBP+VAR_264]
8B 45 04		MOV     EAX, [EBP+4]
89 85 94 FD FF FF		MOV     [EBP+VAR_26C], EAX
8D 45 04		LEA     EAX, [EBP+4]
89 85 A0 FD FF FF		MOV     [EBP+VAR_260], EAX
C7 85 DC FC FF FF 01 00 01 00		MOV     [EBP+VAR_324], 10001H
8B 40 FC		MOV     EAX, [EAX-4]
6A 50		PUSH    50H ; 'P'; SIZE
89 85 90 FD FF FF		MOV     [EBP+VAR_270], EAX
8D 45 A8		LEA     EAX, [EBP+VAR_58]
6A 00		PUSH    0; VAL
50		PUSH    EAX; VOID *
E8 04 0B 00 00		CALL    MEMSET
8B 45 04		MOV     EAX, [EBP+4]
83 C4 0C		ADD     ESP, 0CH
C7 45 A8 15 00 00 40		MOV     [EBP+VAR_58], 40000015H
C7 45 AC 01 00 00 00		MOV     [EBP+VAR_54], 1
89 45 B4		MOV     [EBP+VAR_4C], EAX
FF 15 30 70 00 00		CALL    DS:__IMP_ISDEBUGGERPRESENT
6A 00		PUSH    0; LPTOPLEVELEXCEPTIONFILTER
8D 58 FF		LEA     EBX, [EAX-1]
F7 DB		NEG     EBX
8D 45 A8		LEA     EAX, [EBP+VAR_58]
89 45 F8		MOV     [EBP+EXCEPTIONINFO.EXCEPTIONRECORD], EAX
8D 85 DC FC FF FF		LEA     EAX, [EBP+VAR_324]
1A DB		SBB     BL, BL
89 45 FC		MOV     [EBP+EXCEPTIONINFO.CONTEXTRECORD], EAX
FE C3		INC     BL
FF 15 28 70 00 00		CALL    DS:__IMP_SETUNHANDLEDEXCEPTIONFILTER
8D 45 F8		LEA     EAX, [EBP+EXCEPTIONINFO]
50		PUSH    EAX; EXCEPTIONINFO
FF 15 2C 70 00 00		CALL    DS:__IMP_UNHANDLEDEXCEPTIONFILTER
85 C0		TEST    EAX, EAX
75 0C		JNZ     SHORT LOC_21FB
84 DB		TEST    BL, BL
75 08		JNZ     SHORT LOC_21FB
6A 03		PUSH    3
E8 78 EF FF FF		CALL    SUB_1172
59		POP     ECX
5B		POP     EBX
C9		LEAVE
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 EC 44		SUB     ESP, 44H
6A 44		PUSH    44H ; 'D'; SIZE
8D 45 BC		LEA     EAX, [EBP+STARTUPINFO]
6A 00		PUSH    0; VAL
50		PUSH    EAX; VOID *
E8 51 0A 00 00		CALL    MEMSET
83 C4 0C		ADD     ESP, 0CH
8D 45 BC		LEA     EAX, [EBP+STARTUPINFO]
50		PUSH    EAX; LPSTARTUPINFO
FF 15 00 70 00 00		CALL    DS:__IMP_GETSTARTUPINFOW
F6 45 E8 01		TEST    BYTE PTR [EBP+STARTUPINFO.DWFLAGS], 1
74 06		JZ      SHORT LOC_2270
0F B7 45 EC		MOVZX   EAX, [EBP+STARTUPINFO.WSHOWWINDOW]
C9		LEAVE
C3		RETN
6A 0A		PUSH    0AH
58		POP     EAX
C9		LEAVE
C3		RETN
E9 B1 ED FF FF		JMP     SUB_1037
33 C0		XOR     EAX, EAX
C3		RETN
6A 00		PUSH    0; LPMODULENAME
FF 15 1C 70 00 00		CALL    DS:__IMP_GETMODULEHANDLEW
85 C0		TEST    EAX, EAX
74 33		JZ      SHORT LOC_22C8
B9 4D 5A 00 00		MOV     ECX, 5A4DH
66 39 08		CMP     [EAX], CX
75 29		JNZ     SHORT LOC_22C8
8B 48 3C		MOV     ECX, [EAX+3CH]
03 C8		ADD     ECX, EAX
81 39 50 45 00 00		CMP     DWORD PTR [ECX], 4550H
75 1C		JNZ     SHORT LOC_22C8
B8 0B 01 00 00		MOV     EAX, 10BH
66 39 41 18		CMP     [ECX+18H], AX
75 11		JNZ     SHORT LOC_22C8
83 79 74 0E		CMP     DWORD PTR [ECX+74H], 0EH
76 0B		JBE     SHORT LOC_22C8
83 B9 E8 00 00 00 00		CMP     DWORD PTR [ECX+0E8H], 0
0F 95 C0		SETNZ   AL
C3		RETN
32 C0		XOR     AL, AL
C3		RETN
68 B3 11 00 00		PUSH    OFFSET J____SCRT_UNHANDLED_EXCEPTION_FILTER@4; LPTOPLEVELEXCEPTIONFILTER
FF 15 28 70 00 00		CALL    DS:__IMP_SETUNHANDLEDEXCEPTIONFILTER
C3		RETN
33 C0		XOR     EAX, EAX
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
56		PUSH    ESI
57		PUSH    EDI
8B 7D 08		MOV     EDI, [EBP+ARG_0]
8B 37		MOV     ESI, [EDI]
81 3E 63 73 6D E0		CMP     DWORD PTR [ESI], 0E06D7363H
75 25		JNZ     SHORT LOC_2324
83 7E 10 03		CMP     DWORD PTR [ESI+10H], 3
75 1F		JNZ     SHORT LOC_2324
8B 46 14		MOV     EAX, [ESI+14H]
3D 20 05 93 19		CMP     EAX, 19930520H
74 1D		JZ      SHORT LOC_232C
3D 21 05 93 19		CMP     EAX, 19930521H
74 16		JZ      SHORT LOC_232C
3D 22 05 93 19		CMP     EAX, 19930522H
74 0F		JZ      SHORT LOC_232C
3D 00 40 99 01		CMP     EAX, 1994000H
74 08		JZ      SHORT LOC_232C
5F		POP     EDI
33 C0		XOR     EAX, EAX
5E		POP     ESI
5D		POP     EBP
C2 04 00		RETN    4
E8 6B 09 00 00		CALL    __CURRENT_EXCEPTION
89 30		MOV     [EAX], ESI
8B 77 04		MOV     ESI, [EDI+4]
E8 67 09 00 00		CALL    __CURRENT_EXCEPTION_CONTEXT
89 30		MOV     [EAX], ESI
E8 2C 0A 00 00		CALL    TERMINATE
83 25 9C 61 00 00 00		AND     DWORD_619C, 0
C3		RETN
53		PUSH    EBX
56		PUSH    ESI
BE 68 53 00 00		MOV     ESI, OFFSET UNK_5368
BB 68 54 00 00		MOV     EBX, OFFSET UNK_5468
3B F3		CMP     ESI, EBX
73 19		JNB     SHORT LOC_238B
57		PUSH    EDI
8B 3E		MOV     EDI, [ESI]
85 FF		TEST    EDI, EDI
74 0A		JZ      SHORT LOC_2383
8B CF		MOV     ECX, EDI
FF 15 00 90 00 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR
FF D7		CALL    EDI
83 C6 04		ADD     ESI, 4
3B F3		CMP     ESI, EBX
72 E9		JB      SHORT LOC_2373
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
C3		RETN
53		PUSH    EBX
56		PUSH    ESI
BE 70 55 00 00		MOV     ESI, OFFSET UNK_5570
BB 70 56 00 00		MOV     EBX, OFFSET UNK_5670
3B F3		CMP     ESI, EBX
73 19		JNB     SHORT LOC_23C2
57		PUSH    EDI
8B 3E		MOV     EDI, [ESI]
85 FF		TEST    EDI, EDI
74 0A		JZ      SHORT LOC_23BA
8B CF		MOV     ECX, EDI
FF 15 00 90 00 00		CALL    DS:___GUARD_CHECK_ICALL_FPTR
FF D7		CALL    EDI
83 C6 04		ADD     ESI, 4
3B F3		CMP     ESI, EBX
72 E9		JB      SHORT LOC_23AA
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
C3		RETN
68 49 24 00 00		PUSH    OFFSET __EXCEPT_HANDLER4
64 FF 35 00 00 00 00		PUSH    LARGE DWORD PTR FS:0
8B 44 24 10		MOV     EAX, [ESP+8+ARG_4]
89 6C 24 10		MOV     [ESP+8+ARG_4], EBP
8D 6C 24 10		LEA     EBP, [ESP+8+ARG_4]
2B E0		SUB     ESP, EAX
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
A1 14 60 00 00		MOV     EAX, ___SECURITY_COOKIE
31 45 FC		XOR     [EBP-4], EAX
33 C5		XOR     EAX, EBP
50		PUSH    EAX
89 65 E8		MOV     [EBP-18H], ESP
FF 75 F8		PUSH    DWORD PTR [EBP-8]
8B 45 FC		MOV     EAX, [EBP-4]
C7 45 FC FE FF FF FF		MOV     DWORD PTR [EBP-4], 0FFFFFFFEH
89 45 F8		MOV     [EBP-8], EAX
8D 45 F0		LEA     EAX, [EBP-10H]
64 A3 00 00 00 00		MOV     LARGE FS:0, EAX
C3		RETN
8B 4D F0		MOV     ECX, [EBP-10H]
64 89 0D 00 00 00 00		MOV     LARGE FS:0, ECX
59		POP     ECX
5F		POP     EDI
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
8B E5		MOV     ESP, EBP
5D		POP     EBP
51		PUSH    ECX
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
56		PUSH    ESI
8B 75 08		MOV     ESI, [EBP+ARG_0]
FF 36		PUSH    DWORD PTR [ESI]
E8 93 ED FF FF		CALL    J___FILTER_X86_SSE2_FLOATING_POINT_EXCEPTION_DEFAULT
FF 75 14		PUSH    [EBP+ARG_C]
89 06		MOV     [ESI], EAX
FF 75 10		PUSH    [EBP+ARG_8]
FF 75 0C		PUSH    [EBP+ARG_4]
56		PUSH    ESI
68 AF 10 00 00		PUSH    OFFSET SUB_10AF
68 14 60 00 00		PUSH    OFFSET ___SECURITY_COOKIE
E8 3C 08 00 00		CALL    _EXCEPT_HANDLER4_COMMON
83 C4 1C		ADD     ESP, 1CH
5E		POP     ESI
5D		POP     EBP
C3		RETN
C2 00 00		RETN    0
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
8B 00		MOV     EAX, [EAX]
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
8B 00		MOV     EAX, [EAX]
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
BA 40 4E 00 00		MOV     EDX, OFFSET UNK_4E40
B9 80 4F 00 00		MOV     ECX, OFFSET UNK_4F80
2B C2		SUB     EAX, EDX
2B CA		SUB     ECX, EDX
3B C1		CMP     EAX, ECX
77 01		JA      SHORT LOC_24B7
CC		INT     3; TRAP TO DEBUGGER
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
BA 40 4E 00 00		MOV     EDX, OFFSET UNK_4E40
B9 80 4F 00 00		MOV     ECX, OFFSET UNK_4F80
2B C2		SUB     EAX, EDX
2B CA		SUB     ECX, EDX
3B C1		CMP     EAX, ECX
77 05		JA      SHORT LOC_24DC
6A 41		PUSH    41H ; 'A'
59		POP     ECX
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
5D		POP     EBP
C3		RETN
C2 00 00		RETN    0
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
BA 40 4E 00 00		MOV     EDX, OFFSET UNK_4E40
B9 80 4F 00 00		MOV     ECX, OFFSET UNK_4F80
2B C2		SUB     EAX, EDX
2B CA		SUB     ECX, EDX
3B C1		CMP     EAX, ECX
77 11		JA      SHORT LOC_2511
83 3D 08 90 00 00 00		CMP     DS:___CASTGUARD_CHECK_FAILURE_OS_HANDLED_FPTR, 0
74 08		JZ      SHORT LOC_2511
A1 08 90 00 00		MOV     EAX, DS:___CASTGUARD_CHECK_FAILURE_OS_HANDLED_FPTR
5D		POP     EBP
FF E0		JMP     EAX
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 3D 08 90 00 00 00		CMP     DS:___CASTGUARD_CHECK_FAILURE_OS_HANDLED_FPTR, 0
74 08		JZ      SHORT LOC_2531
A1 08 90 00 00		MOV     EAX, DS:___CASTGUARD_CHECK_FAILURE_OS_HANDLED_FPTR
5D		POP     EBP
FF E0		JMP     EAX
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
BA 40 4E 00 00		MOV     EDX, OFFSET UNK_4E40
B9 80 4F 00 00		MOV     ECX, OFFSET UNK_4F80
2B C2		SUB     EAX, EDX
2B CA		SUB     ECX, EDX
3B C8		CMP     ECX, EAX
1B C0		SBB     EAX, EAX
40		INC     EAX
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 4D 08		MOV     ECX, [EBP+ARG_0]
8B C1		MOV     EAX, ECX
2B 45 0C		SUB     EAX, [EBP+ARG_4]
2D 00 4E 00 00		SUB     EAX, OFFSET UNK_4E00
83 E8 40		SUB     EAX, 40H ; '@'
3B 45 10		CMP     EAX, [EBP+ARG_8]
76 13		JBE     SHORT LOC_2584
BA 40 4E 00 00		MOV     EDX, OFFSET UNK_4E40
B8 80 4F 00 00		MOV     EAX, OFFSET UNK_4F80
2B CA		SUB     ECX, EDX
2B C2		SUB     EAX, EDX
3B C8		CMP     ECX, EAX
77 01		JA      SHORT LOC_2584
CC		INT     3; TRAP TO DEBUGGER
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 4D 08		MOV     ECX, [EBP+ARG_0]
8B C1		MOV     EAX, ECX
2B 45 0C		SUB     EAX, [EBP+ARG_4]
2D 00 4E 00 00		SUB     EAX, OFFSET UNK_4E00
83 E8 40		SUB     EAX, 40H ; '@'
3B 45 10		CMP     EAX, [EBP+ARG_8]
76 17		JBE     SHORT LOC_25C0
BA 40 4E 00 00		MOV     EDX, OFFSET UNK_4E40
B8 80 4F 00 00		MOV     EAX, OFFSET UNK_4F80
2B CA		SUB     ECX, EDX
2B C2		SUB     EAX, EDX
3B C8		CMP     ECX, EAX
77 05		JA      SHORT LOC_25C0
6A 41		PUSH    41H ; 'A'
59		POP     ECX
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
5D		POP     EBP
C3		RETN
C2 00 00		RETN    0
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
2B 45 0C		SUB     EAX, [EBP+ARG_4]
2D 00 4E 00 00		SUB     EAX, OFFSET UNK_4E00
83 E8 40		SUB     EAX, 40H ; '@'
3B 45 10		CMP     EAX, [EBP+ARG_8]
76 29		JBE     SHORT LOC_2610
8B 4D 08		MOV     ECX, [EBP+ARG_0]
BA 40 4E 00 00		MOV     EDX, OFFSET UNK_4E40
B8 80 4F 00 00		MOV     EAX, OFFSET UNK_4F80
2B CA		SUB     ECX, EDX
2B C2		SUB     EAX, EDX
3B C8		CMP     ECX, EAX
77 14		JA      SHORT LOC_2610
83 3D 08 90 00 00 00		CMP     DS:___CASTGUARD_CHECK_FAILURE_OS_HANDLED_FPTR, 0
74 0B		JZ      SHORT LOC_2610
FF 75 08		PUSH    [EBP+ARG_0]
A1 08 90 00 00		MOV     EAX, DS:___CASTGUARD_CHECK_FAILURE_OS_HANDLED_FPTR
FF D0		CALL    EAX ; ___CASTGUARD_CHECK_FAILURE_OS_HANDLED_FPTR
59		POP     ECX
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
8B 45 08		MOV     EAX, [EBP+ARG_0]
2B 45 0C		SUB     EAX, [EBP+ARG_4]
2D 00 4E 00 00		SUB     EAX, OFFSET UNK_4E00
83 E8 40		SUB     EAX, 40H ; '@'
39 45 10		CMP     [EBP+ARG_8], EAX
1B C0		SBB     EAX, EAX
F7 D8		NEG     EAX
5D		POP     EBP
C3		RETN
8B 0D 00 90 00 00		MOV     ECX, DS:___GUARD_CHECK_ICALL_FPTR
33 C0		XOR     EAX, EAX
81 F9 40 11 00 00		CMP     ECX, OFFSET J_NULLSUB_1
0F 95 C0		SETNZ   AL
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
83 25 A0 61 00 00 00		AND     DWORD_61A0, 0
83 EC 24		SUB     ESP, 24H
83 0D 10 60 00 00 01		OR      DWORD_6010, 1
6A 0A		PUSH    0AH; PROCESSORFEATURE
FF 15 20 70 00 00		CALL    DS:__IMP_ISPROCESSORFEATUREPRESENT
85 C0		TEST    EAX, EAX
0F 84 AC 01 00 00		JZ      LOC_2828
83 65 F0 00		AND     [EBP+VAR_10], 0
33 C0		XOR     EAX, EAX
53		PUSH    EBX
56		PUSH    ESI
57		PUSH    EDI
33 C9		XOR     ECX, ECX
8D 7D DC		LEA     EDI, [EBP+VAR_24]
53		PUSH    EBX
0F A2		CPUID
8B F3		MOV     ESI, EBX
5B		POP     EBX
90		NOP
89 07		MOV     [EDI], EAX
89 77 04		MOV     [EDI+4], ESI
89 4F 08		MOV     [EDI+8], ECX
33 C9		XOR     ECX, ECX
89 57 0C		MOV     [EDI+0CH], EDX
8B 45 DC		MOV     EAX, [EBP+VAR_24]
8B 7D E0		MOV     EDI, [EBP+VAR_20]
89 45 F4		MOV     [EBP+VAR_C], EAX
81 F7 47 65 6E 75		XOR     EDI, 756E6547H
8B 45 E8		MOV     EAX, [EBP+VAR_18]
35 69 6E 65 49		XOR     EAX, 49656E69H
89 45 FC		MOV     [EBP+VAR_4], EAX
8B 45 E4		MOV     EAX, [EBP+VAR_1C]
35 6E 74 65 6C		XOR     EAX, 6C65746EH
89 45 F8		MOV     [EBP+VAR_8], EAX
33 C0		XOR     EAX, EAX
40		INC     EAX
53		PUSH    EBX
0F A2		CPUID
8B F3		MOV     ESI, EBX
5B		POP     EBX
90		NOP
8D 5D DC		LEA     EBX, [EBP+VAR_24]
89 03		MOV     [EBX], EAX
8B 45 FC		MOV     EAX, [EBP+VAR_4]
0B 45 F8		OR      EAX, [EBP+VAR_8]
0B C7		OR      EAX, EDI
89 73 04		MOV     [EBX+4], ESI
89 4B 08		MOV     [EBX+8], ECX
89 53 0C		MOV     [EBX+0CH], EDX
75 43		JNZ     SHORT LOC_2728
8B 45 DC		MOV     EAX, [EBP+VAR_24]
25 F0 3F FF 0F		AND     EAX, 0FFF3FF0H
3D C0 06 01 00		CMP     EAX, 106C0H
74 23		JZ      SHORT LOC_2717
3D 60 06 02 00		CMP     EAX, 20660H
74 1C		JZ      SHORT LOC_2717
3D 70 06 02 00		CMP     EAX, 20670H
74 15		JZ      SHORT LOC_2717
3D 50 06 03 00		CMP     EAX, 30650H
74 0E		JZ      SHORT LOC_2717
3D 60 06 03 00		CMP     EAX, 30660H
74 07		JZ      SHORT LOC_2717
3D 70 06 03 00		CMP     EAX, 30670H
75 11		JNZ     SHORT LOC_2728
8B 3D A4 61 00 00		MOV     EDI, DWORD_61A4
83 CF 01		OR      EDI, 1
89 3D A4 61 00 00		MOV     DWORD_61A4, EDI
EB 06		JMP     SHORT LOC_272E
8B 3D A4 61 00 00		MOV     EDI, DWORD_61A4
8B 4D E4		MOV     ECX, [EBP+VAR_1C]
6A 07		PUSH    7
58		POP     EAX
89 4D FC		MOV     [EBP+VAR_4], ECX
39 45 F4		CMP     [EBP+VAR_C], EAX
7C 30		JL      SHORT LOC_276C
33 C9		XOR     ECX, ECX
53		PUSH    EBX
0F A2		CPUID
8B F3		MOV     ESI, EBX
5B		POP     EBX
90		NOP
8D 5D DC		LEA     EBX, [EBP+VAR_24]
89 03		MOV     [EBX], EAX
89 73 04		MOV     [EBX+4], ESI
89 4B 08		MOV     [EBX+8], ECX
8B 4D FC		MOV     ECX, [EBP+VAR_4]
89 53 0C		MOV     [EBX+0CH], EDX
8B 5D E0		MOV     EBX, [EBP+VAR_20]
F7 C3 00 02 00 00		TEST    EBX, 200H
74 0E		JZ      SHORT LOC_276F
83 CF 02		OR      EDI, 2
89 3D A4 61 00 00		MOV     DWORD_61A4, EDI
EB 03		JMP     SHORT LOC_276F
8B 5D F0		MOV     EBX, [EBP+VAR_10]
A1 10 60 00 00		MOV     EAX, DWORD_6010
83 C8 02		OR      EAX, 2
C7 05 A0 61 00 00 01 00 00 00		MOV     DWORD_61A0, 1
A3 10 60 00 00		MOV     DWORD_6010, EAX
F7 C1 00 00 10 00		TEST    ECX, 100000H
0F 84 93 00 00 00		JZ      LOC_2825
83 C8 04		OR      EAX, 4
C7 05 A0 61 00 00 02 00 00 00		MOV     DWORD_61A0, 2
A3 10 60 00 00		MOV     DWORD_6010, EAX
F7 C1 00 00 00 08		TEST    ECX, 8000000H
74 79		JZ      SHORT LOC_2825
F7 C1 00 00 00 10		TEST    ECX, 10000000H
74 71		JZ      SHORT LOC_2825
33 C9		XOR     ECX, ECX
0F 01 D0		XGETBV
89 45 EC		MOV     [EBP+VAR_14], EAX
89 55 F0		MOV     [EBP+VAR_10], EDX
8B 45 EC		MOV     EAX, [EBP+VAR_14]
8B 4D F0		MOV     ECX, [EBP+VAR_10]
6A 06		PUSH    6
5E		POP     ESI
23 C6		AND     EAX, ESI
3B C6		CMP     EAX, ESI
75 57		JNZ     SHORT LOC_2825
A1 10 60 00 00		MOV     EAX, DWORD_6010
83 C8 08		OR      EAX, 8
C7 05 A0 61 00 00 03 00 00 00		MOV     DWORD_61A0, 3
A3 10 60 00 00		MOV     DWORD_6010, EAX
F6 C3 20		TEST    BL, 20H
74 3B		JZ      SHORT LOC_2825
83 C8 20		OR      EAX, 20H
C7 05 A0 61 00 00 05 00 00 00		MOV     DWORD_61A0, 5
A3 10 60 00 00		MOV     DWORD_6010, EAX
B8 00 00 03 D0		MOV     EAX, 0D0030000H
23 D8		AND     EBX, EAX
3B D8		CMP     EBX, EAX
75 1E		JNZ     SHORT LOC_2825
8B 45 EC		MOV     EAX, [EBP+VAR_14]
BA E0 00 00 00		MOV     EDX, 0E0H
8B 4D F0		MOV     ECX, [EBP+VAR_10]
23 C2		AND     EAX, EDX
3B C2		CMP     EAX, EDX
75 0D		JNZ     SHORT LOC_2825
83 0D 10 60 00 00 40		OR      DWORD_6010, 40H
89 35 A0 61 00 00		MOV     DWORD_61A0, ESI
5F		POP     EDI
5E		POP     ESI
5B		POP     EBX
33 C0		XOR     EAX, EAX
C9		LEAVE
C3		RETN
33 C0		XOR     EAX, EAX
39 05 20 60 00 00		CMP     DWORD_6020, EAX
0F 95 C0		SETNZ   AL
C3		RETN
3B 0D 14 60 00 00		CMP     ECX, ___SECURITY_COOKIE
75 01		JNZ     SHORT LOC_28B9
C3		RETN
E9 5B E7 FF FF		JMP     J____REPORT_GSFAILURE
55		PUSH    EBP
8B EC		MOV     EBP, ESP
6A 00		PUSH    0; LPTOPLEVELEXCEPTIONFILTER
FF 15 28 70 00 00		CALL    DS:__IMP_SETUNHANDLEDEXCEPTIONFILTER
FF 75 08		PUSH    [EBP+EXCEPTIONINFO]; EXCEPTIONINFO
FF 15 2C 70 00 00		CALL    DS:__IMP_UNHANDLEDEXCEPTIONFILTER
68 09 04 00 C0		PUSH    0C0000409H; UEXITCODE
FF 15 18 70 00 00		CALL    DS:__IMP_GETCURRENTPROCESS
50		PUSH    EAX; HPROCESS
FF 15 14 70 00 00		CALL    DS:__IMP_TERMINATEPROCESS
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 24 03 00 00		SUB     ESP, 324H
6A 17		PUSH    17H; PROCESSORFEATURE
FF 15 20 70 00 00		CALL    DS:__IMP_ISPROCESSORFEATUREPRESENT
85 C0		TEST    EAX, EAX
74 05		JZ      SHORT LOC_290D
6A 02		PUSH    2
59		POP     ECX
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
A3 B0 62 00 00		MOV     DWORD_62B0, EAX
89 0D AC 62 00 00		MOV     DWORD_62AC, ECX
89 15 A8 62 00 00		MOV     DWORD_62A8, EDX
89 1D A4 62 00 00		MOV     DWORD_62A4, EBX
89 35 A0 62 00 00		MOV     DWORD_62A0, ESI
89 3D 9C 62 00 00		MOV     DWORD_629C, EDI
66 8C 15 C8 62 00 00		MOV     WORD_62C8, SS
66 8C 0D BC 62 00 00		MOV     WORD_62BC, CS
66 8C 1D 98 62 00 00		MOV     WORD_6298, DS
66 8C 05 94 62 00 00		MOV     WORD_6294, ES
66 8C 25 90 62 00 00		MOV     WORD_6290, FS
66 8C 2D 8C 62 00 00		MOV     WORD_628C, GS
9C		PUSHF
8F 05 C0 62 00 00		POP     DWORD_62C0
8B 45 00		MOV     EAX, [EBP+VAR_S0]
A3 B4 62 00 00		MOV     DWORD_62B4, EAX
8B 45 04		MOV     EAX, [EBP+4]
A3 B8 62 00 00		MOV     DWORD_62B8, EAX
8D 45 08		LEA     EAX, [EBP+ARG_0]
A3 C4 62 00 00		MOV     DWORD_62C4, EAX
8B 85 DC FC FF FF		MOV     EAX, [EBP+VAR_324]
C7 05 00 62 00 00 01 00 01 00		MOV     DWORD_6200, 10001H
A1 B8 62 00 00		MOV     EAX, DWORD_62B8
A3 BC 61 00 00		MOV     DWORD_61BC, EAX
C7 05 B0 61 00 00 09 04 00 C0		MOV     DWORD_61B0, 0C0000409H
C7 05 B4 61 00 00 01 00 00 00		MOV     DWORD_61B4, 1
C7 05 C0 61 00 00 01 00 00 00		MOV     DWORD_61C0, 1
6A 04		PUSH    4
58		POP     EAX
6B C0 00		IMUL    EAX, 0
C7 80 C4 61 00 00 02 00 00 00		MOV     DWORD_61C4[EAX], 2
6A 04		PUSH    4
58		POP     EAX
6B C0 00		IMUL    EAX, 0
8B 0D 14 60 00 00		MOV     ECX, ___SECURITY_COOKIE
89 4C 05 F8		MOV     [EBP+EAX+VAR_8], ECX
6A 04		PUSH    4
58		POP     EAX
C1 E0 00		SHL     EAX, 0
8B 0D 18 60 00 00		MOV     ECX, DWORD_6018
89 4C 05 F8		MOV     [EBP+EAX+VAR_8], ECX
68 B8 4B 00 00		PUSH    OFFSET EXCEPTIONINFO; EXCEPTIONINFO
E8 13 E8 FF FF		CALL    J____RAISE_SECURITYFAILURE
C9		LEAVE
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
6A 08		PUSH    8
E8 A1 E7 FF FF		CALL    J____REPORT_SECURITYFAILURE
5D		POP     EBP
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 1C 03 00 00		SUB     ESP, 31CH
6A 17		PUSH    17H; PROCESSORFEATURE
FF 15 20 70 00 00		CALL    DS:__IMP_ISPROCESSORFEATUREPRESENT
85 C0		TEST    EAX, EAX
74 05		JZ      SHORT LOC_2A54
8B 4D 08		MOV     ECX, [EBP+ARG_0]
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
A3 B0 62 00 00		MOV     DWORD_62B0, EAX
89 0D AC 62 00 00		MOV     DWORD_62AC, ECX
89 15 A8 62 00 00		MOV     DWORD_62A8, EDX
89 1D A4 62 00 00		MOV     DWORD_62A4, EBX
89 35 A0 62 00 00		MOV     DWORD_62A0, ESI
89 3D 9C 62 00 00		MOV     DWORD_629C, EDI
66 8C 15 C8 62 00 00		MOV     WORD_62C8, SS
66 8C 0D BC 62 00 00		MOV     WORD_62BC, CS
66 8C 1D 98 62 00 00		MOV     WORD_6298, DS
66 8C 05 94 62 00 00		MOV     WORD_6294, ES
66 8C 25 90 62 00 00		MOV     WORD_6290, FS
66 8C 2D 8C 62 00 00		MOV     WORD_628C, GS
9C		PUSHF
8F 05 C0 62 00 00		POP     DWORD_62C0
8B 45 00		MOV     EAX, [EBP+VAR_S0]
A3 B4 62 00 00		MOV     DWORD_62B4, EAX
8B 45 04		MOV     EAX, [EBP+4]
A3 B8 62 00 00		MOV     DWORD_62B8, EAX
8D 45 08		LEA     EAX, [EBP+ARG_0]
A3 C4 62 00 00		MOV     DWORD_62C4, EAX
8B 85 E4 FC FF FF		MOV     EAX, [EBP+VAR_31C]
A1 B8 62 00 00		MOV     EAX, DWORD_62B8
A3 BC 61 00 00		MOV     DWORD_61BC, EAX
C7 05 B0 61 00 00 09 04 00 C0		MOV     DWORD_61B0, 0C0000409H
C7 05 B4 61 00 00 01 00 00 00		MOV     DWORD_61B4, 1
C7 05 C0 61 00 00 01 00 00 00		MOV     DWORD_61C0, 1
6A 04		PUSH    4
58		POP     EAX
6B C0 00		IMUL    EAX, 0
8B 4D 08		MOV     ECX, [EBP+ARG_0]
89 88 C4 61 00 00		MOV     DWORD_61C4[EAX], ECX
68 B8 4B 00 00		PUSH    OFFSET EXCEPTIONINFO; EXCEPTIONINFO
E8 F7 E6 FF FF		CALL    J____RAISE_SECURITYFAILURE
C9		LEAVE
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
81 EC 20 03 00 00		SUB     ESP, 320H
6A 17		PUSH    17H; PROCESSORFEATURE
FF 15 20 70 00 00		CALL    DS:__IMP_ISPROCESSORFEATUREPRESENT
85 C0		TEST    EAX, EAX
74 05		JZ      SHORT LOC_2B56
8B 4D 08		MOV     ECX, [EBP+ARG_0]
CD 29		INT     29H; WIN8: RTLFAILFAST(ECX)
A3 B0 62 00 00		MOV     DWORD_62B0, EAX
89 0D AC 62 00 00		MOV     DWORD_62AC, ECX
89 15 A8 62 00 00		MOV     DWORD_62A8, EDX
89 1D A4 62 00 00		MOV     DWORD_62A4, EBX
89 35 A0 62 00 00		MOV     DWORD_62A0, ESI
89 3D 9C 62 00 00		MOV     DWORD_629C, EDI
66 8C 15 C8 62 00 00		MOV     WORD_62C8, SS
66 8C 0D BC 62 00 00		MOV     WORD_62BC, CS
66 8C 1D 98 62 00 00		MOV     WORD_6298, DS
66 8C 05 94 62 00 00		MOV     WORD_6294, ES
66 8C 25 90 62 00 00		MOV     WORD_6290, FS
66 8C 2D 8C 62 00 00		MOV     WORD_628C, GS
9C		PUSHF
8F 05 C0 62 00 00		POP     DWORD_62C0
8B 45 00		MOV     EAX, [EBP+VAR_S0]
A3 B4 62 00 00		MOV     DWORD_62B4, EAX
8B 45 04		MOV     EAX, [EBP+4]
A3 B8 62 00 00		MOV     DWORD_62B8, EAX
8D 45 08		LEA     EAX, [EBP+ARG_0]
A3 C4 62 00 00		MOV     DWORD_62C4, EAX
8B 85 E0 FC FF FF		MOV     EAX, [EBP+VAR_320]
A1 B8 62 00 00		MOV     EAX, DWORD_62B8
A3 BC 61 00 00		MOV     DWORD_61BC, EAX
C7 05 B0 61 00 00 09 04 00 C0		MOV     DWORD_61B0, 0C0000409H
C7 05 B4 61 00 00 01 00 00 00		MOV     DWORD_61B4, 1
83 7D 0C 00		CMP     [EBP+ARG_4], 0
76 0A		JBE     SHORT LOC_2BF6
83 7D 10 00		CMP     [EBP+ARG_8], 0
75 04		JNZ     SHORT LOC_2BF6
83 65 0C 00		AND     [EBP+ARG_4], 0
83 7D 0C 0E		CMP     [EBP+ARG_4], 0EH
76 07		JBE     SHORT LOC_2C03
8B 45 0C		MOV     EAX, [EBP+ARG_4]
48		DEC     EAX
89 45 0C		MOV     [EBP+ARG_4], EAX
8B 45 0C		MOV     EAX, [EBP+ARG_4]
40		INC     EAX
A3 C0 61 00 00		MOV     DWORD_61C0, EAX
6A 04		PUSH    4
58		POP     EAX
6B C0 00		IMUL    EAX, 0
8B 4D 08		MOV     ECX, [EBP+ARG_0]
89 88 C4 61 00 00		MOV     DWORD_61C4[EAX], ECX
83 65 FC 00		AND     [EBP+VAR_4], 0
EB 07		JMP     SHORT LOC_2C28
8B 45 FC		MOV     EAX, [EBP+VAR_4]
40		INC     EAX
89 45 FC		MOV     [EBP+VAR_4], EAX
8B 45 FC		MOV     EAX, [EBP+VAR_4]
3B 45 0C		CMP     EAX, [EBP+ARG_4]
73 15		JNB     SHORT LOC_2C45
8B 45 FC		MOV     EAX, [EBP+VAR_4]
8B 4D FC		MOV     ECX, [EBP+VAR_4]
8B 55 10		MOV     EDX, [EBP+ARG_8]
8B 0C 8A		MOV     ECX, [EDX+ECX*4]
89 0C 85 C8 61 00 00		MOV     DWORD_61C8[EAX*4], ECX
EB DC		JMP     SHORT LOC_2C21
68 B8 4B 00 00		PUSH    OFFSET EXCEPTIONINFO; EXCEPTIONINFO
E8 AF E5 FF FF		CALL    J____RAISE_SECURITYFAILURE
C9		LEAVE
C3		RETN
FF 25 78 70 00 00		JMP     DS:__IMP___STD_TYPE_INFO_DESTROY_LIST
FF 25 6C 70 00 00		JMP     DS:__IMP___CURRENT_EXCEPTION
FF 25 68 70 00 00		JMP     DS:__IMP___CURRENT_EXCEPTION_CONTEXT
FF 25 70 70 00 00		JMP     DS:__IMP_MEMSET
FF 25 74 70 00 00		JMP     DS:__IMP__EXCEPT_HANDLER4_COMMON
FF 25 D4 71 00 00		JMP     DS:__IMP_PUTS
FF 25 B0 70 00 00		JMP     DS:__IMP_MALLOC
FF 25 14 72 00 00		JMP     DS:__IMP_STRCPY_S
FF 25 10 72 00 00		JMP     DS:__IMP_STRNCPY_S
FF 25 0C 72 00 00		JMP     DS:__IMP_STRNCMP
FF 25 70 71 00 00		JMP     DS:__IMP__SEH_FILTER_EXE
FF 25 6C 71 00 00		JMP     DS:__IMP__SET_APP_TYPE
FF 25 10 71 00 00		JMP     DS:__IMP___SETUSERMATHERR
FF 25 90 71 00 00		JMP     DS:__IMP__CONFIGURE_NARROW_ARGV
FF 25 8C 71 00 00		JMP     DS:__IMP__INITIALIZE_NARROW_ENVIRONMENT
FF 25 88 71 00 00		JMP     DS:__IMP__GET_INITIAL_NARROW_ENVIRONMENT
FF 25 84 71 00 00		JMP     DS:__IMP__INITTERM
FF 25 48 71 00 00		JMP     DS:__IMP__INITTERM_E
FF 25 94 71 00 00		JMP     DS:__IMP_EXIT
FF 25 74 71 00 00		JMP     DS:__IMP__EXIT
FF 25 D8 71 00 00		JMP     DS:__IMP__SET_FMODE
FF 25 50 71 00 00		JMP     DS:__IMP___P___ARGC
FF 25 44 71 00 00		JMP     DS:__IMP___P___ARGV
FF 25 40 71 00 00		JMP     DS:__IMP__CEXIT
FF 25 7C 71 00 00		JMP     DS:__IMP__C_EXIT
FF 25 58 71 00 00		JMP     DS:__IMP__REGISTER_THREAD_LOCAL_EXE_ATEXIT_CALLBACK
FF 25 E0 70 00 00		JMP     DS:__IMP__CONFIGTHREADLOCALE
FF 25 AC 70 00 00		JMP     DS:__IMP__SET_NEW_MODE
FF 25 DC 71 00 00		JMP     DS:__IMP___P__COMMODE
FF 25 4C 71 00 00		JMP     DS:__IMP__SEH_FILTER_DLL
FF 25 80 71 00 00		JMP     DS:__IMP__INITIALIZE_ONEXIT_TABLE
FF 25 54 71 00 00		JMP     DS:__IMP__REGISTER_ONEXIT_FUNCTION
FF 25 78 71 00 00		JMP     DS:__IMP__EXECUTE_ONEXIT_TABLE
FF 25 5C 71 00 00		JMP     DS:__IMP__CRT_ATEXIT
FF 25 60 71 00 00		JMP     DS:__IMP__CRT_AT_QUICK_EXIT
FF 25 64 71 00 00		JMP     DS:__IMP__CONTROLFP_S
FF 25 68 71 00 00		JMP     DS:__IMP_TERMINATE
FF 25 24 70 00 00		JMP     DS:__IMP_GETCURRENTTHREADID
FF 25 04 70 00 00		JMP     DS:__IMP_QUERYPERFORMANCECOUNTER
FF 25 08 70 00 00		JMP     DS:__IMP_GETCURRENTPROCESSID
FF 25 0C 70 00 00		JMP     DS:__IMP_GETSYSTEMTIMEASFILETIME
FF 25 10 70 00 00		JMP     DS:__IMP_INITIALIZESLISTHEAD
FF 25 30 70 00 00		JMP     DS:__IMP_ISDEBUGGERPRESENT
FF 25 2C 70 00 00		JMP     DS:__IMP_UNHANDLEDEXCEPTIONFILTER
FF 25 28 70 00 00		JMP     DS:__IMP_SETUNHANDLEDEXCEPTIONFILTER
FF 25 00 70 00 00		JMP     DS:__IMP_GETSTARTUPINFOW
FF 25 20 70 00 00		JMP     DS:__IMP_ISPROCESSORFEATUREPRESENT
FF 25 1C 70 00 00		JMP     DS:__IMP_GETMODULEHANDLEW
FF 25 18 70 00 00		JMP     DS:__IMP_GETCURRENTPROCESS
FF 25 14 70 00 00		JMP     DS:__IMP_TERMINATEPROCESS
B0 01		MOV     AL, 1
C3		RETN
B0 01		MOV     AL, 1
C3		RETN
B0 01		MOV     AL, 1
C3		RETN
B0 01		MOV     AL, 1
C3		RETN
B0 01		MOV     AL, 1
C3		RETN
33 C0		XOR     EAX, EAX
C3		RETN
55		PUSH    EBP
8B EC		MOV     EBP, ESP
51		PUSH    ECX
83 3D A0 61 00 00 01		CMP     DWORD_61A0, 1
7C 66		JL      SHORT LOC_2E47
81 7D 08 B4 02 00 C0		CMP     [EBP+ARG_0], 0C00002B4H
74 09		JZ      SHORT LOC_2DF3
81 7D 08 B5 02 00 C0		CMP     [EBP+ARG_0], 0C00002B5H
75 54		JNZ     SHORT LOC_2E47
0F AE 5D FC		STMXCSR [EBP+VAR_4]
8B 45 FC		MOV     EAX, [EBP+VAR_4]
83 F0 3F		XOR     EAX, 3FH
A8 81		TEST    AL, 81H
74 3F		JZ      SHORT LOC_2E40
A9 04 02 00 00		TEST    EAX, 204H
75 07		JNZ     SHORT LOC_2E0F
B8 8E 00 00 C0		MOV     EAX, 0C000008EH
C9		LEAVE
C3		RETN
A9 02 01 00 00		TEST    EAX, 102H
74 2A		JZ      SHORT LOC_2E40
A9 08 04 00 00		TEST    EAX, 408H
75 07		JNZ     SHORT LOC_2E24
B8 91 00 00 C0		MOV     EAX, 0C0000091H
C9		LEAVE
C3		RETN
A9 10 08 00 00		TEST    EAX, 810H
75 07		JNZ     SHORT LOC_2E32
B8 93 00 00 C0		MOV     EAX, 0C0000093H
C9		LEAVE
C3		RETN
A9 20 10 00 00		TEST    EAX, 1020H
75 0E		JNZ     SHORT LOC_2E47
B8 8F 00 00 C0		MOV     EAX, 0C000008FH
C9		LEAVE
C3		RETN
B8 90 00 00 C0		MOV     EAX, 0C0000090H
C9		LEAVE
C3		RETN
8B 45 08		MOV     EAX, [EBP+ARG_0]
C9		LEAVE
C3		RETN
